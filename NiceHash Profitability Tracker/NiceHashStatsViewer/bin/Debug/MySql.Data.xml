<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySql.Data</name>
    </assembly>
    <members>
        <member name="M:MySql.Data.MySqlClient.Authentication.MySqlAuthenticationPlugin.GetPlugin(System.String,MySql.Data.MySqlClient.NativeDriver,System.Byte[])">
            <summary>
            This is a factory method that is used only internally.  It creates an auth plugin based on the method type
            </summary>
            <param name="method"></param>
            <param name="driver"></param>
            <param name="authData"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Authentication.MySqlNativePasswordPlugin.Get411Password(System.String,System.Byte[])">
            <summary>
            Returns a byte array containing the proper encryption of the 
            given password/seed according to the new 4.1.1 authentication scheme.
            </summary>
            <param name="password"></param>
            <param name="seedBytes"></param>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.Authentication.Sha256AuthenticationPlugin">
            <summary>
            The implementation of the sha256_password authentication plugin.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Authentication.MySqlWindowsAuthenticationPlugin">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlBulkLoader">
            <summary>
            
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.FieldTerminator">
            <summary>
            Gets or sets the field terminator.
            </summary>
            <value>The field terminator.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.LineTerminator">
            <summary>
            Gets or sets the line terminator.
            </summary>
            <value>The line terminator.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.CharacterSet">
            <summary>
            Gets or sets the character set.
            </summary>
            <value>The character set.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Local">
            <summary>
            Gets or sets a value indicating whether the filename that is to be loaded
            is local to the client or not
            </summary>
            <value><c>true</c> if local; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.NumberOfLinesToSkip">
            <summary>
            Gets or sets the number of lines to skip.
            </summary>
            <value>The number of lines to skip.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.LinePrefix">
            <summary>
            Gets or sets the line prefix.
            </summary>
            <value>The line prefix.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.FieldQuotationCharacter">
            <summary>
            Gets or sets the field quotation character.
            </summary>
            <value>The field quotation character.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.FieldQuotationOptional">
            <summary>
            Gets or sets a value indicating whether [field quotation optional].
            </summary>
            <value>
            	<c>true</c> if [field quotation optional]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.EscapeCharacter">
            <summary>
            Gets or sets the escape character.
            </summary>
            <value>The escape character.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.ConflictOption">
            <summary>
            Gets or sets the conflict option.
            </summary>
            <value>The conflict option.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>The priority.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlBulkLoader.Expressions">
            <summary>
            Gets the expressions.
            </summary>
            <value>The expressions.</value>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlBulkLoader.Load">
            <summary>
            Execute the load operation
            </summary>
            <returns>The number of rows inserted.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlBulkLoader.LoadAsync">
            <summary>
            Async version of Load
            </summary>
            <returns>The number of rows inserted.</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlBulkLoaderPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderPriority.None">
            <summary>
            This is the default and indicates normal priority
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderPriority.Low">
            <summary>
            Low priority will cause the load operation to wait until all readers of the table
            have finished.  This only affects storage engines that use only table-level locking
            such as MyISAM, Memory, and Merge.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderPriority.Concurrent">
            <summary>
            Concurrent priority is only relevant for MyISAM tables and signals that if the table
            has no free blocks in the middle that other readers can retrieve data from the table
            while the load operation is happening.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption.None">
            <summary>
            This is the default and indicates normal operation.  In the event of a LOCAL load, this
            is the same as ignore.  When the data file is on the server, then a key conflict will
            cause an error to be thrown and the rest of the data file ignored.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption.Replace">
            <summary>
            Replace column values when a key conflict occurs.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlBulkLoaderConflictOption.Ignore">
            <summary>
            Ignore any rows where the primary key conflicts.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.CharSetMap">
            <summary>
            Summary description for CharSetMap.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.CharSetMap.GetEncoding(MySql.Data.Common.DBVersion,System.String)">
            <summary>
            Returns the text encoding for a given MySQL character set name
            </summary>
            <param name="version">Version of the connection requesting the encoding</param>
            <param name="charSetName">Name of the character set to get the encoding for</param>
            <returns>Encoding object for the given character set name</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.CharSetMap.InitializeMapping">
            <summary>
            Initializes the mapping.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlCommand">
            <summary>Represents a SQL statement to execute against a MySQL database. This class cannot be inherited.</summary><remarks>
      <B>MySqlCommand</B> features the following methods for executing commands at a MySQL database:
      <list type="table">
        <listheader>
          <term>Item</term>
          <term>Description</term>
        </listheader>
        <item>
          <term>
            <a href="MySql.Data.MySqlClient.MySqlCommand.ExecuteReader_overloads.html">ExecuteReader</a>
          </term>
          <description>Executes commands that return rows.</description>
        </item>
        <item>
          <term>
            <a href="MySql.Data.MySqlClient.MySqlCommand.ExecuteNonQuery.html">ExecuteNonQuery</a>
          </term>
          <description>Executes commands such as SQL INSERT, DELETE, and UPDATE statements.</description>
        </item>
        <item>
          <term>
            <a href="MySql.Data.MySqlClient.MySqlCommand.ExecuteScalar.html">ExecuteScalar</a>
          </term>
          <description>Retrieves a single value (for example, an aggregate value) from a database.</description>
        </item>
      </list>

      You can reset the <B>CommandText</B> property and reuse the <B>MySqlCommand</B>
      object. However, you must close the <A href="MySql.Data.MySqlClient.MySqlDataReader.html">MySqlDataReader</A>
      before you can execute a new or previous command.

      If a <A href="MySql.Data.MySqlClient.MySqlException.html">MySqlException</A> is
      generated by the method executing a <B>MySqlCommand</B>, the <A href="MySql.Data.MySqlClient.MySqlConnection.html">MySqlConnection</A>
      remains open.  It is the responsibility of the programmer to close the connection.

      <note>
        Using the '@' symbol for paramters is now the preferred approach although the old pattern of using
		'?' is still supported.  Please be aware though that using '@' can cause conflicts when user variables
		are also used.  To help with this situation please see the documentation on the 'allow user variables'
		connection string option.  The 'old syntax' connection string option has now been deprecated.
      </note>
    </remarks><example>
      The following example creates a <A href="frlrfsystemdatasqlclientsqlcommandclasstopic.htm">MySqlCommand</A> and
      a <B>MySqlConnection</B>. The <B>MySqlConnection</B> is opened and set as the <A href="frlrfsystemdatasqlclientsqlcommandclassconnectiontopic.htm">Connection</A>
      for the <B>MySqlCommand</B>. The example then calls <A href="frlrfsystemdatasqlclientsqlcommandclassexecutenonquerytopic.htm">ExecuteNonQuery</A>,
      and closes the connection. To accomplish this, the <B>ExecuteNonQuery</B> is
      passed a connection string and a query string that is a SQL INSERT
      statement.
      <code lang="vbnet">
        Public Sub InsertRow(myConnectionString As String)
        " If the connection string is null, use a default.
        If myConnectionString = "" Then
        myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass"
        End If
        Dim myConnection As New MySqlConnection(myConnectionString)
        Dim myInsertQuery As String = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)"
        Dim myCommand As New MySqlCommand(myInsertQuery)
        myCommand.Connection = myConnection
        myConnection.Open()
        myCommand.ExecuteNonQuery()
        myCommand.Connection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void InsertRow(string myConnectionString)
        {
        // If the connection string is null, use a default.
        if(myConnectionString == "")
        {
        myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass";
        }
        MySqlConnection myConnection = new MySqlConnection(myConnectionString);
        string myInsertQuery = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)";
        MySqlCommand myCommand = new MySqlCommand(myInsertQuery);
        myCommand.Connection = myConnection;
        myConnection.Open();
        myCommand.ExecuteNonQuery();
        myCommand.Connection.Close();
        }
      </code>
    </example> 
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.#ctor">
            <overloads>
      <summary>
        Initializes a new instance of the MySqlCommand class.
      </summary>
      <example>
        The following example creates a MySqlCommand and sets some of its properties.
        <para />
        <note>
          This example shows how to use one of the overloaded
          versions of the MySqlCommand constructor. For other examples that might be available,
          see the individual overload topics.
        </note>

        <code lang="vbnet">
          Public Sub CreateMySqlCommand()
          Dim myConnection As New MySqlConnection _
          ("Persist Security Info=False;database=test;server=myServer")
          myConnection.Open()
          Dim myTrans As MySqlTransaction = myConnection.BeginTransaction()
          Dim mySelectQuery As String = "SELECT * FROM MyTable"
          Dim myCommand As New MySqlCommand(mySelectQuery, myConnection, myTrans)
          myCommand.CommandTimeout = 20
          End Sub
        </code>
        <code lang="C#">
          public void CreateMySqlCommand()
          {
          MySqlConnection myConnection = new MySqlConnection("Persist Security Info=False;
          database=test;server=myServer");
          myConnection.Open();
          MySqlTransaction myTrans = myConnection.BeginTransaction();
          string mySelectQuery = "SELECT * FROM myTable";
          MySqlCommand myCommand = new MySqlCommand(mySelectQuery, myConnection,myTrans);
          myCommand.CommandTimeout = 20;
          }
        </code>
        <code lang="C++">
          public:
          void CreateMySqlCommand()
          {
          MySqlConnection* myConnection = new MySqlConnection(S"Persist Security Info=False;
          database=test;server=myServer");
          myConnection-&gt;Open();
          MySqlTransaction* myTrans = myConnection-&gt;BeginTransaction();
          String* mySelectQuery = S"SELECT * FROM myTable";
          MySqlCommand* myCommand = new MySqlCommand(mySelectQuery, myConnection, myTrans);
          myCommand-&gt;CommandTimeout = 20;
          };
        </code>
      </example>
    </overloads><summary>
      Initializes a new instance of the MySqlCommand class.
    </summary><remarks>
      The base constructor initializes all fields to their default values. The
      following table shows initial property values for an instance of <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />.
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout" />
          </term>
          <term>0</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" />
          </term>
          <term>CommandType.Text</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" />
          </term>
          <term>Null</term>
        </item>
      </list>
      <para>
        You can change the value for any of these properties through a separate call to
        the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and
      sets some of its properties.

      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim myCommand As New MySqlCommand()
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        MySqlCommand myCommand = new MySqlCommand();
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.#ctor(System.String)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> class with the text of the query.
    </summary><param name="cmdText">The text of the query.</param><remarks>
      When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> is created,
      the following read/write properties are set to initial values.

      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" />
          </term>
          <term>
            <i>cmdText</i>
          </term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout" />
          </term>
          <term>0</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" />
          </term>
          <term>CommandType.Text</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" />
          </term>
          <term>Null</term>
        </item>
      </list>
      <para>
        You can change the value for any of these properties through a separate call to
        the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and
      sets some of its properties.

      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim sql as String = "SELECT * FROM mytable"
        Dim myCommand As New MySqlCommand(sql)
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        string sql = "SELECT * FROM mytable";
        MySqlCommand myCommand = new MySqlCommand(sql);
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.#ctor(System.String,MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> class
      with the text of the query and a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />.
    </summary><param name="cmdText">The text of the query.</param><param name="connection">
      A <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> that represents the
      connection to an instance of SQL Server.
    </param><remarks>
      When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> is created,
      the following read/write properties are set to initial values.

      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" />
          </term>
          <term>
            <i>cmdText</i>
          </term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout" />
          </term>
          <term>0</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" />
          </term>
          <term>CommandType.Text</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" />
          </term>
          <term>
            <i>connection</i>
          </term>
        </item>
      </list>
      <para>
        You can change the value for any of these properties through a separate call to
        the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and
      sets some of its properties.

      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim conn as new MySqlConnection("server=myServer")
        Dim sql as String = "SELECT * FROM mytable"
        Dim myCommand As New MySqlCommand(sql, conn)
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        MySqlConnection conn = new MySqlConnection("server=myserver")
        string sql = "SELECT * FROM mytable";
        MySqlCommand myCommand = new MySqlCommand(sql, conn);
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.#ctor(System.String,MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> class
      with the text of the query, a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, and the
      <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />.
    </summary><param name="cmdText">The text of the query.</param><param name="connection">
      A <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> that represents the
      connection to an instance of SQL Server.
    </param><param name="transaction">
      The <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" /> in which the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> executes.
    </param><remarks>
      When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> is created,
      the following read/write properties are set to initial values.

      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" />
          </term>
          <term>
            <i>cmdText</i>
          </term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout" />
          </term>
          <term>0</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" />
          </term>
          <term>CommandType.Text</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" />
          </term>
          <term>
            <i>connection</i>
          </term>
        </item>
      </list>
      <para>
        You can change the value for any of these properties through a separate call to
        the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and
      sets some of its properties.

      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim conn as new MySqlConnection("server=myServer")
        conn.Open();
        Dim txn as MySqlTransaction = conn.BeginTransaction()
        Dim sql as String = "SELECT * FROM mytable"
        Dim myCommand As New MySqlCommand(sql, conn, txn)
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        MySqlConnection conn = new MySqlConnection("server=myserver")
        conn.Open();
        MySqlTransaction txn = conn.BeginTransaction();
        string sql = "SELECT * FROM mytable";
        MySqlCommand myCommand = new MySqlCommand(sql, conn, txn);
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.LastInsertedId">
            <!-- No matching elements were found for the following include tag --><include file="docs/mysqlcommand.xml" path="docs/LastInseredId/*" />
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.CommandText">
            <summary>
      Gets or sets the SQL statement to execute at the data source.
    </summary><value>
      The SQL statement or stored procedure to execute. The default is an empty string.
    </value><remarks>
      <para>
        When the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" /> property is set to <B>StoredProcedure</B>,
        the <B>CommandText</B> property should be set to the name of the stored procedure.
        The user may be required to use escape character syntax if the stored procedure name
        contains any special characters. The command executes this stored procedure when
        you call one of the Execute methods.  Starting with Connector/Net 5.0, having both a stored function
        and stored procedure with the same name in the same database is not supported.  It is
        suggested that you provide unqiue names for your stored routines.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and sets some of its properties.
      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim myCommand As New MySqlCommand()
        myCommand.CommandText = "SELECT * FROM Mytable ORDER BY id"
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        MySqlCommand myCommand = new MySqlCommand();
        myCommand.CommandText = "SELECT * FROM mytable ORDER BY id";
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout">
            <summary>
      Gets or sets the wait time before terminating the attempt to execute a command
      and generating an error.
    </summary><value>
      The time (in seconds) to wait for the command to execute. The default is 30
      seconds.
    </value><remarks>
      CommandTimeout is dependent on the ability of MySQL to cancel an executing query.
      Because of this, CommandTimeout is only supported when connected to MySQL
      version 5.0.0 or higher.
    </remarks>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.CommandType">
            <summary>
      Gets or sets a value indicating how the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> property is to be interpreted.
    </summary><value>
      One of the <see cref="T:System.Data.CommandType" /> values. The default is <B>Text</B>.
    </value><remarks>
      <para>
        When you set the <B>CommandType</B> property to <B>StoredProcedure</B>, you
        should set the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> property to the name of the stored
        procedure. The command executes this stored procedure when you call one of the
        Execute methods.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and sets some of its properties.
      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim myCommand As New MySqlCommand()
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        MySqlCommand myCommand = new MySqlCommand();
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.IsPrepared">
            <!-- No matching elements were found for the following include tag --><include file="docs/mysqlcommand.xml" path="docs/IsPrepared/*" />
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.Connection">
            <summary>
      Gets or sets the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> used by this instance of the
      <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />.
    </summary><value>
      The connection to a data source. The default value is a null reference
      (<B>Nothing</B> in Visual Basic).
    </value><remarks>
      <para>
        If you set <B>Connection</B> while a transaction is in progress and the
        <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Transaction" /> property is not null, an <see cref="T:System.InvalidOperationException" />
        is generated. If the <B>Transaction</B> property is not null and the transaction
        has already been committed or rolled back, <B>Transaction</B> is set to
        null.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and sets some of its properties.
      <code lang="vbnet">
        Public Sub CreateMySqlCommand()
        Dim mySelectQuery As String = "SELECT * FROM mytable ORDER BY id"
        Dim myConnectString As String = "Persist Security Info=False;database=test;server=myServer"
        Dim myCommand As New MySqlCommand(mySelectQuery)
        myCommand.Connection = New MySqlConnection(myConnectString)
        myCommand.CommandType = CommandType.Text
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand()
        {
        string mySelectQuery = "SELECT * FROM mytable ORDER BY id";
        string myConnectString = "Persist Security Info=False;database=test;server=myServer";
        MySqlCommand myCommand = new MySqlCommand(mySelectQuery);
        myCommand.Connection = new MySqlConnection(myConnectString);
        myCommand.CommandType = CommandType.Text;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.Parameters">
            <summary>
      Get the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection" />
    </summary><value>
      The parameters of the SQL statement or stored procedure. The default is
      an empty collection.
    </value><remarks>
      Connector/Net does not support unnamed parameters.  Every parameter added to the collection must
      have an associated name.
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and displays its parameters.
      To accomplish this, the method is passed a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, a query string
      that is a SQL SELECT statement, and an array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter" /> objects.
      <code lang="vbnet">
        Public Sub CreateMySqlCommand(myConnection As MySqlConnection, _
        mySelectQuery As String, myParamArray() As MySqlParameter)
        Dim myCommand As New MySqlCommand(mySelectQuery, myConnection)
        myCommand.CommandText = "SELECT id, name FROM mytable WHERE age=@age"
        myCommand.UpdatedRowSource = UpdateRowSource.Both
        myCommand.Parameters.Add(myParamArray)
        Dim j As Integer
        For j = 0 To myCommand.Parameters.Count - 1
        myCommand.Parameters.Add(myParamArray(j))
        Next j
        Dim myMessage As String = ""
        Dim i As Integer
        For i = 0 To myCommand.Parameters.Count - 1
        myMessage += myCommand.Parameters(i).ToString() &amp; ControlChars.Cr
        Next i
        Console.WriteLine(myMessage)
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand(MySqlConnection myConnection, string mySelectQuery,
        MySqlParameter[] myParamArray)
        {
        MySqlCommand myCommand = new MySqlCommand(mySelectQuery, myConnection);
        myCommand.CommandText = "SELECT id, name FROM mytable WHERE age=@age";
        myCommand.Parameters.Add(myParamArray);
        for (int j=0; j&lt;myParamArray.Length; j++)
        {
        myCommand.Parameters.Add(myParamArray[j]) ;
        }
        string myMessage = "";
        for (int i = 0; i &lt; myCommand.Parameters.Count; i++)
        {
        myMessage += myCommand.Parameters[i].ToString() + "\n";
        }
        MessageBox.Show(myMessage);
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.Transaction">
            <summary>
      Gets or sets the <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" /> within which the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> executes.
    </summary><value>
      The <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />.  The default value is a null reference (<B>Nothing</B> in Visual Basic).
    </value><remarks>
      You cannot set the <B>Transaction</B> property if it is already set to a
      specific value, and the command is in the process of executing. If you set the
      transaction property to a <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" /> object that is not connected
      to the same <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> as the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> object,
      an exception will be thrown the next time you attempt to execute a statement.
    </remarks>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied to the DataRow when used by the 
            Update method of the DbDataAdapter. 
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommand.DesignTimeVisible">
            <summary>
            Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control. 
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.Cancel">
            <summary>
            Attempts to cancel the execution of a currently active command
            </summary>
            <remarks>
            Cancelling a currently active query only works with MySQL versions 5.0.0 and higher.
            </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.CreateParameter">
            <summary>
            Creates a new instance of a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.
            </summary>
            <remarks>
            This method is a strongly-typed version of <see cref="M:System.Data.IDbCommand.CreateParameter"/>.
            </remarks>
            <returns>A <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
            
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.CheckState">
            <summary>
            Check the connection to make sure
            	- it is open
            	- it is not currently being used by a reader
            	- and we have the right version of MySQL for the requested command type
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteNonQuery">
            <summary>
      Executes a SQL statement against the connection and returns the number of rows affected.
    </summary><returns>Number of rows affected</returns><remarks>
      You can use ExecuteNonQuery to perform any type of database operation,
      however any resultsets returned will not be available.  Any output parameters
      used in calling a stored procedure will be populated with data and can be
      retrieved after execution is complete.
      For UPDATE, INSERT, and DELETE statements, the return value is the number
      of rows affected by the command.  For all other types of statements, the return
      value is -1.
    </remarks><example>
      The following example creates a MySqlCommand and then
      executes it using ExecuteNonQuery. The example is passed a string that is a
      SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to
      connect to the data source.
      <code lang="vbnet">
        Public Sub CreateMySqlCommand(myExecuteQuery As String, myConnection As MySqlConnection)
        Dim myCommand As New MySqlCommand(myExecuteQuery, myConnection)
        myCommand.Connection.Open()
        myCommand.ExecuteNonQuery()
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand(string myExecuteQuery, MySqlConnection myConnection)
        {
        MySqlCommand myCommand = new MySqlCommand(myExecuteQuery, myConnection);
        myCommand.Connection.Open();
        myCommand.ExecuteNonQuery();
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ResetReader">
            <summary>
            Reset reader to null, to avoid "There is already an open data reader"
            on the next ExecuteReader(). Used in error handling scenarios.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ResetSqlSelectLimit">
            <summary>
            Reset SQL_SELECT_LIMIT that could have been modified by CommandBehavior.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteReader">
            <summary>
      Sends the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> to the <see cref="T:MySql.Data.MySqlClient.MySqlConnection">Connection</see>
      and builds a <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />.
    </summary><returns>
      A <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> object.
    </returns><remarks>
      <para>
        When the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" /> property is set to <B>StoredProcedure</B>,
        the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> property should be set to the name of the stored
        procedure. The command executes this stored procedure when you call
        <B>ExecuteReader</B>.
      </para>
      <para>
        While the <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> is in use, the associated
        <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> is busy serving the <B>MySqlDataReader</B>.
        While in this state, no other operations can be performed on the
        <B>MySqlConnection</B> other than closing it. This is the case until the
        <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.Close" /> method of the <B>MySqlDataReader</B> is called.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />, then executes it by
      passing a string that is a SQL SELECT statement, and a string to use to connect to the
      data source.
      <code lang="vbnet">
        Public Sub CreateMySqlDataReader(mySelectQuery As String, myConnection As MySqlConnection)
        Dim myCommand As New MySqlCommand(mySelectQuery, myConnection)
        myConnection.Open()
        Dim myReader As MySqlDataReader
        myReader = myCommand.ExecuteReader()
        Try
        While myReader.Read()
        Console.WriteLine(myReader.GetString(0))
        End While
        Finally
        myReader.Close
        myConnection.Close
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlDataReader(string mySelectQuery, MySqlConnection myConnection)
        {
        MySqlCommand myCommand = new MySqlCommand(mySelectQuery, myConnection);
        myConnection.Open();
        MMySqlDataReader myReader;
        myReader = myCommand.ExecuteReader();
        try
        {
        while(myReader.Read())
        {
        Console.WriteLine(myReader.GetString(0));
        }
        }
        finally
        {
        myReader.Close();
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
      Sends the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> to the <see cref="T:MySql.Data.MySqlClient.MySqlConnection">Connection</see>,
      and builds a <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.
    </summary><param name="behavior">
      One of the <see cref="T:System.Data.CommandBehavior" /> values.
    </param><remarks>
      <para>
        When the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandType" /> property is set to <B>StoredProcedure</B>,
        the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandText" /> property should be set to the name of the stored
        procedure. The command executes this stored procedure when you call
        <B>ExecuteReader</B>.
      </para>
      <para>
        The <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> supports a special mode that enables large binary
        values to be read efficiently. For more information, see the <B>SequentialAccess</B>
        setting for <see cref="T:System.Data.CommandBehavior" />.
      </para>
      <para>
        While the <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> is in use, the associated
        <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> is busy serving the <B>MySqlDataReader</B>.
        While in this state, no other operations can be performed on the
        <B>MySqlConnection</B> other than closing it. This is the case until the
        <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.Close" /> method of the <B>MySqlDataReader</B> is called.
        If the <B>MySqlDataReader</B> is created with <B>CommandBehavior</B> set to
        <B>CloseConnection</B>, closing the <B>MySqlDataReader</B> closes the connection
        automatically.
      </para>
      <note>
        When calling ExecuteReader with the SingleRow behavior, you should be aware that using a <i>limit</i>
        clause in your SQL will cause all rows (up to the limit given) to be retrieved by the client.  The
        <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.Read" /> method will still return false after the first row but pulling all rows of data
        into the client will have a performance impact.  If the <i>limit</i> clause is not necessary, it should
        be avoided.
      </note>
    </remarks><returns>
      A <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> object.
    </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteScalar">
            <summary>
      Executes the query, and returns the first column of the first row in the
      result set returned by the query. Extra columns or rows are ignored.
    </summary><returns>
      The first column of the first row in the result set, or a null reference if the
      result set is empty
    </returns><remarks>
      <para>
        Use the <B>ExecuteScalar</B> method to retrieve a single value (for example,
        an aggregate value) from a database. This requires less code than using the
        <see cref="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteReader" /> method, and then performing the operations necessary
        to generate the single value using the data returned by a <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and then
      executes it using <B>ExecuteScalar</B>. The example is passed a string that is a
      SQL statement that returns an aggregate result, and a string to use to
      connect to the data source.

      <code lang="vbnet">
        Public Sub CreateMySqlCommand(myScalarQuery As String, myConnection As MySqlConnection)
        Dim myCommand As New MySqlCommand(myScalarQuery, myConnection)
        myCommand.Connection.Open()
        myCommand.ExecuteScalar()
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlCommand(string myScalarQuery, MySqlConnection myConnection)
        {
        MySqlCommand myCommand = new MySqlCommand(myScalarQuery, myConnection);
        myCommand.Connection.Open();
        myCommand.ExecuteScalar();
        myConnection.Close();
        }
      </code>
      <code lang="C++">
        public:
        void CreateMySqlCommand(String* myScalarQuery, MySqlConnection* myConnection)
        {
        MySqlCommand* myCommand = new MySqlCommand(myScalarQuery, myConnection);
        myCommand-&gt;Connection-&gt;Open();
        myCommand-&gt;ExecuteScalar();
        myConnection-&gt;Close();
        }
      </code>

    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.Prepare(System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="docs/mysqlcommand.xml" path="docs/Prepare2/*" />
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.Prepare">
            <summary>
      Creates a prepared version of the command on an instance of MySQL Server.
    </summary><remarks>
      <para>
        Prepared statements are only supported on MySQL version 4.1 and higher.  Calling
        prepare while connected to earlier versions of MySQL will succeed but will execute
        the statement in the same way as unprepared.
      </para>
    </remarks><example>
      The following example demonstrates the use of the <b>Prepare</b> method.
      <code lang="VB.NET">
        public sub PrepareExample()
        Dim cmd as New MySqlCommand("INSERT INTO mytable VALUES (@val)", myConnection)
        cmd.Parameters.Add( "@val", 10 )
        cmd.Prepare()
        cmd.ExecuteNonQuery()

        cmd.Parameters(0).Value = 20
        cmd.ExecuteNonQuery()
        end sub
      </code>
      <code lang="C#">
        private void PrepareExample()
        {
        MySqlCommand cmd = new MySqlCommand("INSERT INTO mytable VALUES (@val)", myConnection);
        cmd.Parameters.Add( "@val", 10 );
        cmd.Prepare();
        cmd.ExecuteNonQuery();

        cmd.Parameters[0].Value = 20;
        cmd.ExecuteNonQuery();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteReader">
            <summary>
            Initiates the asynchronous execution of the SQL statement or stored procedure 
            that is described by this <see cref="T:MySql.Data.MySqlClient.MySqlCommand"/>, and retrieves one or more 
            result sets from the server. 
            </summary>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be used to poll, wait for results, 
            or both; this value is also needed when invoking EndExecuteReader, 
            which returns a <see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> instance that can be used to retrieve 
            the returned rows. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Initiates the asynchronous execution of the SQL statement or stored procedure 
            that is described by this <see cref="T:MySql.Data.MySqlClient.MySqlCommand"/> using one of the 
            <b>CommandBehavior</b> values. 
            </summary>
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"/> values, indicating 
            options for statement execution and data retrieval.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be used to poll, wait for results, 
            or both; this value is also needed when invoking EndExecuteReader, 
            which returns a <see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> instance that can be used to retrieve 
            the returned rows. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.EndExecuteReader(System.IAsyncResult)">
            <summary>
            Finishes asynchronous execution of a SQL statement, returning the requested 
            <see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/>.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by the call to 
            <see cref="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteReader"/>.</param>
            <returns>A <b>MySqlDataReader</b> object that can be used to retrieve the requested rows. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SQL statement or stored procedure 
            that is described by this <see cref="T:MySql.Data.MySqlClient.MySqlCommand"/>. 
            </summary>
            <param name="callback">
            An <see cref="T:System.AsyncCallback"/> delegate that is invoked when the command's 
            execution has completed. Pass a null reference (<b>Nothing</b> in Visual Basic) 
            to indicate that no callback is required.</param>
            <param name="stateObject">A user-defined state object that is passed to the 
            callback procedure. Retrieve this object from within the callback procedure 
            using the <see cref="P:System.IAsyncResult.AsyncState"/> property.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be used to poll or wait for results, 
            or both; this value is also needed when invoking <see cref="M:MySql.Data.MySqlClient.MySqlCommand.EndExecuteNonQuery(System.IAsyncResult)"/>, 
            which returns the number of affected rows. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteNonQuery">
            <summary>
            Initiates the asynchronous execution of the SQL statement or stored procedure 
            that is described by this <see cref="T:MySql.Data.MySqlClient.MySqlCommand"/>. 
            </summary>
            <returns>An <see cref="T:System.IAsyncResult"/> that can be used to poll or wait for results, 
            or both; this value is also needed when invoking <see cref="M:MySql.Data.MySqlClient.MySqlCommand.EndExecuteNonQuery(System.IAsyncResult)"/>, 
            which returns the number of affected rows. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>
            Finishes asynchronous execution of a SQL statement. 
            </summary>
            <param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned by the call 
            to <see cref="M:MySql.Data.MySqlClient.MySqlCommand.BeginExecuteNonQuery"/>.</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.AddCallStatement(System.String)">
            <summary>
            Verifies if a query is valid even if it has not spaces or is a stored procedure call
            </summary>
            <param name="query">Query to validate</param>
            <returns>If it is necessary to add call statement</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommand.Clone">
            <summary>
            Creates a clone of this MySqlCommand object.  CommandText, Connection, and Transaction properties
            are included as well as the entire parameter list.
            </summary>
            <returns>The cloned MySqlCommand object</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.Common.NamedPipeStream">
            <summary>
            Summary description for API.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.CompressedStream">
            <summary>
            Summary description for CompressedStream.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlConnection">
            <summary>
      Represents an open connection to a MySQL Server database. This class cannot be inherited.
    </summary><remarks>
      <para>
        A <b>MySqlConnection</b> object represents a session to a MySQL Server
        data source.  When you create an instance of <B>MySqlConnection</B>, all
        properties are set to their initial values. For a list of these values, see the
        <B>MySqlConnection</B> constructor.
      </para>

      <para>
        If the <B>MySqlConnection</B> goes out of scope, it is not closed. Therefore,
        you must explicitly close the connection by calling <see cref="M:MySql.Data.MySqlClient.MySqlConnection.Close" />
        or <see cref="M:MySql.Data.MySqlClient.MySqlConnection.Dispose" />.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and
      a <B>MySqlConnection</B>. The <B>MySqlConnection</B> is opened and set as the
      <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" /> for the <B>MySqlCommand</B>. The example then calls
      <see cref="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteNonQuery" />, and closes the connection. To accomplish this, the <B>ExecuteNonQuery</B> is
      passed a connection string and a query string that is a SQL INSERT
      statement.
      <code lang="vbnet">
        <c>
          Public Sub InsertRow(myConnectionString As String)
          ' If the connection string is null, use a default.
          If myConnectionString = "" Then
          myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass"
          End If
          Dim myConnection As New MySqlConnection(myConnectionString)
          Dim myInsertQuery As String = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)"
          Dim myCommand As New MySqlCommand(myInsertQuery)
          myCommand.Connection = myConnection
          myConnection.Open()
          myCommand.ExecuteNonQuery()
          myCommand.Connection.Close()
          End Sub
        </c>
      </code>
      <code lang="C#">
        <c>
          public void InsertRow(string myConnectionString)
          {
          // If the connection string is null, use a default.
          if(myConnectionString == "")
          {
          myConnectionString = "Database=Test;Data Source=localhost;User Id=username;Password=pass";
          }
          MySqlConnection myConnection = new MySqlConnection(myConnectionString);
          string myInsertQuery = "INSERT INTO Orders (id, customerId, amount) Values(1001, 23, 30.66)";
          MySqlCommand myCommand = new MySqlCommand(myInsertQuery);
          myCommand.Connection = myConnection;
          myConnection.Open();
          myCommand.ExecuteNonQuery();
          myCommand.Connection.Close();
          }
        </c>
      </code>
    </example>
        </member>
        <member name="E:MySql.Data.MySqlClient.MySqlConnection.InfoMessage">
            <summary>Occurs when MySQL returns warnings as a result of executing a command or query.</summary><remarks>
    </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.#ctor">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> class.
    </summary><remarks>
      When a new instance of <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> is created, the read/write
      properties are set to the following initial values unless they are specifically
      set using their associated keywords in the <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" /> property.
      <para />
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionTimeout" />
          </term>
          <term>15</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.Database" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.DataSource" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ServerVersion" />
          </term>
          <term>empty string ("")</term>
        </item>
      </list>
      <para />
      You can change the value for these properties only by using the <B>ConnectionString</B> property.
    </remarks><example>
    </example><overloads>
      <summary>
        Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> class.
      </summary>
    </overloads>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.#ctor(System.String)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> class when given a string containing the connection string.
    </summary><remarks>
      When a new instance of <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> is created, the read/write
      properties are set to the following initial values unless they are specifically
      set using their associated keywords in the <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" /> property.
      <para />
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionTimeout" />
          </term>
          <term>15</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.Database" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.DataSource" />
          </term>
          <term>empty string ("")</term>
        </item>
        <item>
          <term>
            <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ServerVersion" />
          </term>
          <term>empty string ("")</term>
        </item>
      </list>
      <para />
      You can change the value for these properties only by using the <B>ConnectionString</B> property.
    </remarks><example>
    </example><param name="connectionString">The connection properties used to open the MySQL database. </param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.ServerThread">
            <summary>
            Returns the id of the server thread this connection is executing on
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.DataSource">
            <summary>
            Gets the name of the MySQL server to which to connect.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionTimeout">
            <summary>
      Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.
    </summary><exception cref="T:System.ArgumentException">The value set is less than 0.</exception><remarks>
      A value of 0 indicates no limit, and should be avoided in a
      <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" /> because an attempt to connect
      will wait indefinitely.
    </remarks><example>
      The following example creates a MySqlConnection
      and sets some of its properties in the connection string.
      <code lang="vbnet">
        Public Sub CreateSqlConnection()
        Dim myConnection As New MySqlConnection()
        myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30"
        myConnection.Open()
        End Sub
      </code>
      <code lang="C#">
        public void CreateSqlConnection()
        {
        MySqlConnection myConnection = new MySqlConnection();
        myConnection.ConnectionString = "Persist Security Info=False;Username=user;Password=pass;database=test1;server=localhost;Connect Timeout=30";
        myConnection.Open();
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.Database">
            <summary>Gets the name of the current database or the database to be used after a connection is opened.</summary><returns>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</returns><remarks>
      <para>
        The <B>Database</B> property does not update dynamically.
        If you change the current database using a SQL statement, then this property
        may reflect the wrong value.  If you change the current database using the <see cref="M:MySql.Data.MySqlClient.MySqlConnection.ChangeDatabase(System.String)" />
        method, this property is updated to reflect the new database.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and displays
      some of its read-only properties.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection()
        Dim myConnString As String = _
        "Persist Security Info=False;database=test;server=localhost;user id=joeuser;pwd=pass"
        Dim myConnection As New MySqlConnection( myConnString )
        myConnection.Open()
        MessageBox.Show( "Server Version: " + myConnection.ServerVersion _
        + ControlChars.NewLine + "Database: " + myConnection.Database )
        myConnection.ChangeDatabase( "test2" )
        MessageBox.Show( "ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.NewLine + "Database: " + myConnection.Database )
        myConnection.Close()
        End Sub
      </code>

      <code lang="C#">
        public void CreateMySqlConnection()
        {
        string myConnString =
        "Persist Security Info=False;database=test;server=localhost;user id=joeuser;pwd=pass";
        MySqlConnection myConnection = new MySqlConnection( myConnString );
        myConnection.Open();
        MessageBox.Show( "Server Version: " + myConnection.ServerVersion
        + "\nDatabase: " + myConnection.Database );
        myConnection.ChangeDatabase( "test2" );
        MessageBox.Show( "ServerVersion: " + myConnection.ServerVersion
        + "\nDatabase: " + myConnection.Database );
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.UseCompression">
            <summary>
            Indicates if this connection should use compression when communicating with the server.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.State">
            <summary>Gets the current state of the connection.</summary><returns>
      A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default is <B>Closed</B>.
    </returns><remarks>
      The allowed state changes are:
      <list type="bullet">
        <item>
          From <B>Closed</B> to <B>Open</B>, using the <B>Open</B> method of the connection object.
        </item>
        <item>
          From <B>Open</B> to <B>Closed</B>, using either the <B>Close</B> method or the <B>Dispose</B> method of the connection object.
        </item>
      </list>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, opens it,
      displays some of its properties, then closes the connection.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.Cr + "State: " + myConnection.State.ToString())
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlConnection(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion +
        "\nState: " + myConnection.State.ToString());
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.ServerVersion">
            <summary>Gets a string containing the version of the MySQL server to which the client is connected.</summary><returns>The version of the instance of MySQL.</returns><exception cref="T:System.InvalidOperationException">The connection is closed.</exception><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, opens it,
      displays some of its properties, then closes the connection.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.Cr + "State: " + myConnection.State.ToString())
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlConnection(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion +
        "\nState: " + myConnection.State.ToString());
        myConnection.Close();
        }
      </code>
    </example>#if !NETCORE10
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString">
            <summary>
      Gets or sets the string used to connect to a MySQL Server database.
    </summary><remarks>
      <para>
        The <B>ConnectionString</B> returned may not be exactly like what was originally
        set but will be indentical in terms of keyword/value pairs.  Security information
        will not be included unless the Persist Security Info value is set to true.
      </para>
      <para>
        You can use the <B>ConnectionString</B> property to connect to a database.
        The following example illustrates a typical connection string.
      </para>
      <c>"Persist Security Info=False;database=MyDB;server=MySqlServer;user id=myUser;Password=myPass"</c>
      <para>
        The <B>ConnectionString</B> property can be set only when the connection is
        closed. Many of the connection string values have corresponding read-only
        properties. When the connection string is set, all of these properties are
        updated, except when an error is detected. In this case, none of the properties
        are updated. <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> properties return only those settings contained in the
        <B>ConnectionString</B>.
      </para>
      <para>
        To connect to a local machine, specify "localhost" for the server. If you do not
        specify a server, localhost is assumed.
      </para>
      <para>
        Resetting the <B>ConnectionString</B> on a closed connection resets all
        connection string values (and related properties) including the password. For
        example, if you set a connection string that includes "Database= MyDb", and
        then reset the connection string to "Data Source=myserver;User Id=myUser;Password=myPass",
        the <see cref="P:MySql.Data.MySqlClient.MySqlConnection.Database" /> property is no longer set to MyDb.
      </para>
      <para>
        The connection string is parsed immediately after being set. If errors in
        syntax are found when parsing, a runtime exception, such as <see cref="T:System.ArgumentException" />,
        is generated. Other errors can be found only when an attempt is made to open the
        connection.
      </para>
      <para>
        The basic format of a connection string consists of a series of keyword/value
        pairs separated by semicolons. The equal sign (=) connects each keyword and its
        value. To include values that contain a semicolon, single-quote character, or
        double-quote character, the value must be enclosed in double quotes. If the
        value contains both a semicolon and a double-quote character, the value can be
        enclosed in single quotes. The single quote is also useful if the value begins
        with a double-quote character. Conversely, the double quote can be used if the
        value begins with a single quote. If the value contains both single-quote and
        double-quote characters, the quote character used to enclose the value must be
        doubled each time it occurs within the value.
      </para>
      <para>
        To include preceding or trailing spaces in the string value, the value must
        be enclosed in either single quotes or double quotes. Any leading or trailing
        spaces around integer, Boolean, or enumerated values are ignored, even if
        enclosed in quotes. However, spaces within a string literal keyword or value are
        preserved. Using .NET Framework version 1.1, single or double quotes may be used
        within a connection string without using delimiters (for example, Data Source=
        my'Server or Data Source= my"Server), unless a quote character is the first or
        last character in the value.
      </para>
      <para>
        To include an equal sign (=) in a keyword or value, it must be preceded by
        another equal sign. For example, in the hypothetical connection string
      </para>
      <c>"key==word=value"</c>
      <para />
      <para>the keyword is "key=word" and the value is "value".</para>
      <para>
        If a specific keyword in a keyword= value pair occurs multiple times in a
        connection string, the last occurrence listed is used in the value set.
      </para>
      <para>Keywords are not case sensitive.</para>
      <para>
        The following table lists the valid names for keyword values within the
        <B>ConnectionString</B>.
      </para>

      <div class="tablediv">
        <table class="dtTABLE" cellspacing="0">
          <tr valign="top">
            <th width="33%">Name</th>
            <th width="33%">Default</th>
            <th width="33%">Description</th>
          </tr>
          <tr>
            <td>
              Connect Timeout<para>  -or-  </para>Connection Timeout
            </td>
            <td>15</td>
            <td>
              The length of time (in seconds) to wait for a connection to the server before
              terminating the attempt and generating an error.
            </td>
          </tr>
          <tr>
            <td>
              Host<para>  -or-  </para>Server<para>  -or-  </para>Data Source<para>  -or-  </para>
              DataSource<para>  -or-  </para>Address<para>  -or-  </para>Addr<para>  -or-  </para>
              Network Address
            </td>
            <td>localhost</td>
            <td>
              <para>
                The name or network address of the instance of MySQL to which to connect.  Multiple hosts can be
                specified separated by &amp;.  This can be useful where multiple MySQL servers are configured for replication
                and you are not concerned about the precise server you are connecting to.  No attempt is made by the provider to
                synchronize writes to the database so care should be taken when using this option.
              </para>
              <para>
                In Unix environment with Mono, this can be a fully qualified path to MySQL socket filename. With this configuration, the Unix socket will be used instead of TCP/IP socket.
                Currently only a single socket name can be given so accessing MySQL in a replicated environment using Unix sockets is not currently supported.
              </para>
            </td>
          </tr>
          <tr>
            <td>Port</td>
            <td>3306</td>
            <td>
              The port MySQL is using to listen for connections.  This value is ignored if the connection protocol 
              is anything but socket.
            </td>
          </tr>
          <tr>
            <td>Protocol</td>
            <td>socket</td>
            <td>
              Specifies the type of connection to make to the server.<para>Values can be:</para>
              socket or tcp for a socket connection<br />
              pipe for a named pipe connection<br />
              unix for a Unix socket connection<br />
              memory to use MySQL shared memory
            </td>
          </tr>
          <tr>
            <td>
              CharSet<para>  -or  </para>Character Set
            </td>
            <td />
            <td>
              Specifies the character set that should be used to encode all queries sent to the server.
              Resultsets are still returned in the character set of the data returned.
            </td>
          </tr>
          <tr>
            <td>Logging</td>
            <td>false</td>
            <td>When true, various pieces of information is output to any configured TraceListeners.</td>
          </tr>
          <tr>
            <td>Allow Batch</td>
            <td>true</td>
            <td>
              When true, multiple SQL statements can be sent with one command execution.<br /><br />
              -Note-<br />
              Starting with MySQL 4.1.1, batch statements should be separated by the server-defined seperator character.<br />
              Commands sent to earlier versions of MySQL should be seperated with ';'.
            </td>
          </tr>
          <tr>
            <td>Encrypt</td>
            <td>false</td>
            <td>
              When <B>true</B>, SSL/TLS encryption is used for all data sent between the
              client and server if the server has a certificate installed. Recognized values
              are <B>true</B>, <B>false</B>, <B>yes</B>, and <B>no</B>.
            </td>
          </tr>
          <tr>
            <td>
              Initial Catalog<para>  -or-  </para>Database
            </td>
            <td>mysql</td>
            <td>The name of the database to use intially</td>
          </tr>
          <tr>
            <td>
              Password<para>  -or-  </para>pwd
            </td>
            <td />
            <td>The password for the MySQL account being used.</td>
          </tr>
          <tr>
            <td>Persist Security Info</td>
            <td>false</td>
            <td>
              When set to <B>false</B> or <B>no</B> (strongly recommended), security-sensitive
              information, such as the password, is not returned as part of the connection if
              the connection is open or has ever been in an open state. Resetting the
              connection string resets all connection string values including the password.
              Recognized values are <B>true</B>, <B>false</B>, <B>yes</B>, and <B>no</B>.
            </td>
          </tr>
          <tr>
            <td>
              User Id<para>  -or-  </para>Username<para>  -or-  </para>Uid<para>  -or-  </para>User name
            </td>
            <td />
            <td>The MySQL login account being used.</td>
          </tr>
          <tr>
            <td>Shared Memory Name</td>
            <td>MYSQL</td>
            <td>The name of the shared memory object to use for communication if the connection protocol is set to memory.</td>
          </tr>
          <tr>
            <td>Allow Zero Datetime</td>
            <td>false</td>
            <td>
              True to have MySqlDataReader.GetValue() return a MySqlDateTime for date or datetime columns that have illegal values.
              False will cause a DateTime object to be returned for legal values and an exception will be thrown for illegal values.
            </td>
          </tr>
          <tr>
            <td>Convert Zero Datetime</td>
            <td>false</td>
            <td>
              True to have MySqlDataReader.GetValue() and MySqlDataReader.GetDateTime()
              return DateTime.MinValue for date or datetime columns that have illegal values.
            </td>
          </tr>
          <tr>
            <td>
              Pipe Name<para>  -or-  </para>Pipe
            </td>
            <td>mysql</td>
            <td>
              When set to the name of a named pipe, the <B>MySqlConnection</B> will attempt to connect to MySQL
              on that named pipe.<br /><br />This settings only applies to the Windows platform.
            </td>
          </tr>
          <tr>
            <td>
              Use Performance Monitor<para>  -or-  </para>UsePerformanceMonitor
            </td>
            <td>false</td>
            <td>
              Posts performance data that can be tracked using perfmon
            </td>
          </tr>
          <tr>
            <td>
              Procedure Cache Size
            </td>
            <td>25</td>
            <td>
              How many stored procedure definitions can be held in the cache
            </td>
          </tr>
          <tr>
            <td>
              Ignore Prepare
            </td>
            <td>true</td>
            <td>
              Instructs the provider to ignore any attempts to prepare commands.  This option
              was added to allow a user to disable prepared statements in an entire application
              without modifying the code.  A user might want to do this if errors or bugs are
              encountered with MySQL prepared statements.
            </td>
          </tr>
          <tr>
            <td>Use Procedure Bodies</td>
            <td>true</td>
            <td>
              Instructs the provider to attempt to call the procedure without first resolving the metadata.  This
              is useful in situations where the calling user does not have access to the mysql.proc table.  To
              use this mode, the parameters for the procedure must be added to the command in the same order
              as they appear in the procedure definition and their types must be explicitly set.
            </td>
          </tr>
          <tr>
            <td>Auto Enlist</td>
            <td>true</td>
            <td>
              Indicates whether the connection should automatically enlist in the current transaction,
              if there is one.
            </td>
          </tr>
          <tr>
            <td>Respect Binary Flags</td>
            <td>true</td>
            <td>
              Indicates whether the connection should respect all binary flags sent to the client
              as part of column metadata.  False will cause the connector to behave like
              Connector/Net 5.0 and earlier.
            </td>
          </tr>
          <tr>
            <td>BlobAsUTF8IncludePattern</td>
            <td>null</td>
            <td>
              Pattern that should be used to indicate which blob columns should be treated as UTF-8.
            </td>
          </tr>
          <tr>
            <td>BlobAsUTF8ExcludePattern</td>
            <td>null</td>
            <td>
              Pattern that should be used to indicate which blob columns should not be treated as UTF-8.
            </td>
          </tr>
          <tr>
            <td>Default Command Timeout</td>
            <td>30</td>
            <td>
              The default timeout that new MySqlCommand objects will use unless changed.
            </td>
          </tr>
          <tr>
            <td>Allow User Variables</td>
            <td>false</td>
            <td>
              Should the provider expect user variables in the SQL.
            </td>
          </tr>
          <tr>
            <td>Interactive -or- Interactive Session</td>
            <td>false</td>
            <td>
              Should this session be considered interactive?
            </td>
          </tr>
          <tr>
            <td>Functions Return String</td>
            <td>false</td>
            <td>
              Set this option to true to force the return value of SQL functions to be string.
            </td>
          </tr>
          <tr>
            <td>Use Affected Rows</td>
            <td>false</td>
            <td>
              Set this option to true to cause the affected rows reported to reflect only the 
              rows that are actually changed.  By default, the number of rows that are matched 
              is returned.
            </td>
          </tr>
        </table>
      </div>
      <para>
        The following table lists the valid names for connection pooling values within
        the <B>ConnectionString</B>. For more information about connection pooling, see
        Connection Pooling for the MySql Data Provider.
      </para>
      <div class="tablediv">
        <table class="dtTABLE" cellspacing="0">
          <tr valign="top">
            <th width="33%">Name</th>
            <th width="33%">Default</th>
            <th width="33%">Description</th>
          </tr>
          <tr>
            <td>Connection Lifetime</td>
            <td>0</td>
            <td>
              When a connection is returned to the pool, its creation time is compared with
              the current time, and the connection is destroyed if that time span (in seconds)
              exceeds the value specified by <B>Connection Lifetime</B>. This is useful in
              clustered configurations to force load balancing between a running server and a
              server just brought online.
              <para>
                A value of zero (0) causes pooled connections to have the maximum connection
                timeout.
              </para>
            </td>
          </tr>
          <tr>
            <td>Max Pool Size</td>
            <td>100</td>
            <td>The maximum number of connections allowed in the pool.</td>
          </tr>
          <tr>
            <td>Min Pool Size</td>
            <td>0</td>
            <td>The minimum number of connections allowed in the pool.</td>
          </tr>
          <tr>
            <td>Pooling</td>
            <td>true</td>
            <td>
              When <B>true</B>, the <B>MySqlConnection</B> object is drawn from the appropriate
              pool, or if necessary, is created and added to the appropriate pool. Recognized
              values are <B>true</B>, <B>false</B>, <B>yes</B>, and <B>no</B>.
            </td>
          </tr>
          <tr>
            <td>Connection Reset</td>
            <td>false</td>
            <td>
              Specifies whether the database connection should be reset when being
              drawn from the pool.  Leaving this as <b>false</b> will yeild much faster
              connection opens but the user should understand the side effects
              of doing this such as temporary tables and user variables from the previous
              session not being cleared out.
            </td>
          </tr>
          <tr>
            <td>Cache Server Properties</td>
            <td>false</td>
            <td>
              Specifies whether the server variables are cached between pooled connections.
              On systems where the variables change infrequently and there are lots of
              connection attempts, this can speed up things dramatically.
            </td>
          </tr>
        </table>
      </div>
      <para>
        When setting keyword or connection pooling values that require a Boolean
        value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.
      </para>
      <para>
        <B>Note</B>  The MySql Data Provider uses the native socket protocol to
        communicate with MySQL.  Therefore, it does not support the use of an ODBC data source name (DSN) when
        connecting to MySQL because it does not add an ODBC layer.
      </para>
      <para>
        <B>CAUTION</B>  In this release, the application should use caution when constructing a
        connection string based on user input (for example when retrieving user ID and password information from a
        dialog box, and appending it to the connection string). The application should
        ensure that a user cannot embed extra connection string parameters in these
        values (for example, entering a password as "validpassword;database=somedb" in
        an attempt to attach to a different database).
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and sets some of its properties
      <code lang="vbnet">
        Public Sub CreateConnection()
        Dim myConnection As New MySqlConnection()
        myConnection.ConnectionString = "Persist Security Info=False;database=myDB;server=myHost;Connect Timeout=30;user id=myUser; pwd=myPass"
        myConnection.Open()
        End Sub 'CreateConnection
      </code>
      <code lang="C#">
        public void CreateConnection()
        {
        MySqlConnection myConnection = new MySqlConnection();
        myConnection.ConnectionString = "Persist Security Info=False;database=myDB;server=myHost;Connect Timeout=30;user id=myUser; pwd=myPass";
        myConnection.Open();
        }
      </code>
    </example><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> in Unix environment with Mono installed. MySQL socket filename used in this example is "/var/lib/mysql/mysql.sock". The actual filename depends on your MySQL configuration.
      <code lang="vbnet">
        Public Sub CreateConnection()
        Dim myConnection As New MySqlConnection()
        myConnection.ConnectionString = "database=myDB;server=/var/lib/mysql/mysql.sock;user id=myUser; pwd=myPass"
        myConnection.Open()
        End Sub 'CreateConnection
      </code>
      <code lang="C#">
        public void CreateConnection()
        {
        MySqlConnection myConnection = new MySqlConnection();
        myConnection.ConnectionString = "database=myDB;server=/var/lib/mysql/mysql.sock;user id=myUser; pwd=myPass";
        myConnection.Open();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction">
            <summary>Begins a database transaction.</summary><returns>An object representing the new transaction.</returns><exception cref="T:System.InvalidOperationException">Parallel transactions are not supported.</exception><remarks>
      <para>This command is equivalent to the MySQL BEGIN TRANSACTION command.</para>
      <para>
        You must explicitly commit or roll back the transaction using the <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" /> or
        <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback" /> method.
        <note>
          If you do not specify an isolation level, the default isolation level is used. To specify an isolation
          level with the <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" /> method, use the overload that takes the <I>iso</I> parameter.  Also
          note that any attempt to begin a transaction while a transaction is in progress will throw an exception on MySQL 4.1 and higher.
          On MySQL 4.0, an exception will not be thrown because servers 4.0 and earlier did not report their transacation status.
        </note>
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and a
      <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />.  It also demonstrates how to use the <B>BeginTransaction</B>, a
      <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" />, and <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback" /> methods.
      <code lang="vbnet">
        Public Sub RunTransaction(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()

        Dim myCommand As MySqlCommand = myConnection.CreateCommand()
        Dim myTrans As MySqlTransaction

        ' Start a local transaction
        myTrans = myConnection.BeginTransaction()
        ' Must assign both transaction object and connection
        ' to Command object for a pending local transaction
        myCommand.Connection = myConnection
        myCommand.Transaction = myTrans

        Try
        myCommand.CommandText = "Insert into Test (id, desc) VALUES (100, 'Description')"
        myCommand.ExecuteNonQuery()
        myCommand.CommandText = "Insert into Test (id, desc) VALUES (101, 'Description')"
        myCommand.ExecuteNonQuery()
        myTrans.Commit()
        Console.WriteLine("Both records are written to database.")
        Catch e As Exception
        Try
        myTrans.Rollback()
        Catch ex As MySqlException
        If Not myTrans.Connection Is Nothing Then
        Console.WriteLine("An exception of type " + ex.GetType().ToString() + _
        " was encountered while attempting to roll back the transaction.")
        End If
        End Try

        Console.WriteLine("An exception of type " + e.GetType().ToString() + _
        "was encountered while inserting the data.")
        Console.WriteLine("Neither record was written to database.")
        Finally
        myConnection.Close()
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void RunTransaction(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();

        MySqlCommand myCommand = myConnection.CreateCommand();
        MySqlTransaction myTrans;

        // Start a local transaction
        myTrans = myConnection.BeginTransaction();
        // Must assign both transaction object and connection
        // to Command object for a pending local transaction
        myCommand.Connection = myConnection;
        myCommand.Transaction = myTrans;

        try
        {
        myCommand.CommandText = "insert into Test (id, desc) VALUES (100, 'Description')";
        myCommand.ExecuteNonQuery();
        myCommand.CommandText = "insert into Test (id, desc) VALUES (101, 'Description')";
        myCommand.ExecuteNonQuery();
        myTrans.Commit();
        Console.WriteLine("Both records are written to database.");
        }
        catch(Exception e)
        {
        try
        {
        myTrans.Rollback();
        }
        catch (SqlException ex)
        {
        if (myTrans.Connection != null)
        {
        Console.WriteLine("An exception of type " + ex.GetType() +
        " was encountered while attempting to roll back the transaction.");
        }
        }

        Console.WriteLine("An exception of type " + e.GetType() +
        " was encountered while inserting the data.");
        Console.WriteLine("Neither record was written to database.");
        }
        finally
        {
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>Begins a database transaction with the specified isolation level.</summary><param name="iso">The isolation level under which the transaction should run. </param><returns>An object representing the new transaction.</returns><exception cref="T:System.InvalidOperationException">Parallel exceptions are not supported.</exception><remarks>
      <para>This command is equivalent to the MySQL BEGIN TRANSACTION command.</para>
      <para>
        You must explicitly commit or roll back the transaction using the <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" /> or
        <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback" /> method.
        <note>
          If you do not specify an isolation level, the default isolation level is used. To specify an isolation
          level with the <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" /> method, use the overload that takes the <I>iso</I> parameter.
          Also note that any attempt to begin a transaction while a transaction is in progress will throw an exception on MySQL 4.1 and higher.
          On MySQL 4.0, an exception will not be thrown because servers 4.0 and earlier did not report their transacation status.
        </note>
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and a
      <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />.  It also demonstrates how to use the <B>BeginTransaction</B>, a
      <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" />, and <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback" /> methods.
      <code lang="vbnet">
        Public Sub RunTransaction(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()

        Dim myCommand As MySqlCommand = myConnection.CreateCommand()
        Dim myTrans As MySqlTransaction

        ' Start a local transaction
        myTrans = myConnection.BeginTransaction()
        ' Must assign both transaction object and connection
        ' to Command object for a pending local transaction
        myCommand.Connection = myConnection
        myCommand.Transaction = myTrans

        Try
        myCommand.CommandText = "Insert into Test (id, desc) VALUES (100, 'Description')"
        myCommand.ExecuteNonQuery()
        myCommand.CommandText = "Insert into Test (id, desc) VALUES (101, 'Description')"
        myCommand.ExecuteNonQuery()
        myTrans.Commit()
        Console.WriteLine("Both records are written to database.")
        Catch e As Exception
        Try
        myTrans.Rollback()
        Catch ex As MySqlException
        If Not myTrans.Connection Is Nothing Then
        Console.WriteLine("An exception of type " + ex.GetType().ToString() + _
        " was encountered while attempting to roll back the transaction.")
        End If
        End Try

        Console.WriteLine("An exception of type " + e.GetType().ToString() + _
        "was encountered while inserting the data.")
        Console.WriteLine("Neither record was written to database.")
        Finally
        myConnection.Close()
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void RunTransaction(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();

        MySqlCommand myCommand = myConnection.CreateCommand();
        MySqlTransaction myTrans;

        // Start a local transaction
        myTrans = myConnection.BeginTransaction();
        // Must assign both transaction object and connection
        // to Command object for a pending local transaction
        myCommand.Connection = myConnection;
        myCommand.Transaction = myTrans;

        try
        {
        myCommand.CommandText = "insert into Test (id, desc) VALUES (100, 'Description')";
        myCommand.ExecuteNonQuery();
        myCommand.CommandText = "insert into Test (id, desc) VALUES (101, 'Description')";
        myCommand.ExecuteNonQuery();
        myTrans.Commit();
        Console.WriteLine("Both records are written to database.");
        }
        catch(Exception e)
        {
        try
        {
        myTrans.Rollback();
        }
        catch (SqlException ex)
        {
        if (myTrans.Connection != null)
        {
        Console.WriteLine("An exception of type " + ex.GetType() +
        " was encountered while attempting to roll back the transaction.");
        }
        }

        Console.WriteLine("An exception of type " + e.GetType() +
        " was encountered while inserting the data.");
        Console.WriteLine("Neither record was written to database.");
        }
        finally
        {
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ChangeDatabase(System.String)">
            <summary>Changes the current database for an open MySqlConnection.</summary><param name="databaseName">The name of the database to use.</param><remarks>
      <para>
        The value supplied in the <I>database</I> parameter must be a valid database
        name. The <I>database</I> parameter cannot contain a null value, an empty
        string, or a string with only blank characters.
      </para>

      <para>
        When you are using connection pooling against MySQL, and you close
        the connection, it is returned to the connection pool. The next time the
        connection is retrieved from the pool, the reset connection request
        executes before the user performs any operations.
      </para>
    </remarks><exception cref="T:System.ArgumentException">The database name is not valid.</exception><exception cref="T:System.InvalidOperationException">The connection is not open.</exception><exception cref="T:MySql.Data.MySqlClient.MySqlException">Cannot change the database.</exception><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and displays
      some of its read-only properties.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection()
        Dim myConnString As String = _
        "Persist Security Info=False;database=test;server=localhost;user id=joeuser;pwd=pass"
        Dim myConnection As New MySqlConnection( myConnString )
        myConnection.Open()
        MessageBox.Show( "Server Version: " + myConnection.ServerVersion _
        + ControlChars.NewLine + "Database: " + myConnection.Database )
        myConnection.ChangeDatabase( "test2" )
        MessageBox.Show( "ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.NewLine + "Database: " + myConnection.Database )
        myConnection.Close()
        End Sub
      </code>

      <code lang="C#">
        public void CreateMySqlConnection()
        {
        string myConnString =
        "Persist Security Info=False;database=test;server=localhost;user id=joeuser;pwd=pass";
        MySqlConnection myConnection = new MySqlConnection( myConnString );
        myConnection.Open();
        MessageBox.Show( "Server Version: " + myConnection.ServerVersion
        + "\nDatabase: " + myConnection.Database );
        myConnection.ChangeDatabase( "test2" );
        MessageBox.Show( "ServerVersion: " + myConnection.ServerVersion
        + "\nDatabase: " + myConnection.Database );
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.Ping">
            <summary>
            Ping
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.Open">
            <summary>Opens a database connection with the property settings specified by the ConnectionString.</summary><exception cref="T:System.InvalidOperationException">Cannot open a connection without specifying a data source or server.</exception><exception cref="T:MySql.Data.MySqlClient.MySqlException">A connection-level error occurred while opening the connection.</exception><remarks>
      <para>
        The <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> draws an open connection from the connection pool if one is available.
        Otherwise, it establishes a new connection to an instance of MySQL.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, opens it,
      displays some of its properties, then closes the connection.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.Cr + "State: " + myConnection.State.ToString())
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlConnection(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion +
        "\nState: " + myConnection.State.ToString());
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.CreateCommand">
            <summary>
      Creates and returns a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> object associated with the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />.
    </summary><returns>
      A <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> object.
    </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.Close">
            <summary>Closes the connection to the database. This is the preferred method of closing any open connection.</summary><remarks>
      <para>
        The <B>Close</B> method rolls back any pending transactions. It then releases
        the connection to the connection pool, or closes the connection if connection
        pooling is disabled.
      </para>
      <para>
        An application can call <B>Close</B> more than one time. No exception is
        generated.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, opens it,
      displays some of its properties, then closes the connection.

      <code lang="vbnet">
        Public Sub CreateMySqlConnection(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion _
        + ControlChars.Cr + "State: " + myConnection.State.ToString())
        myConnection.Close()
        End Sub
      </code>
      <code lang="C#">
        public void CreateMySqlConnection(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();
        MessageBox.Show("ServerVersion: " + myConnection.ServerVersion +
        "\nState: " + myConnection.State.ToString());
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.SetCommandTimeout(System.Int32)">
            <summary>
            Sets query timeout. If timeout has been set prior and not
            yet cleared ClearCommandTimeout(), it has no effect.
            </summary>
            <param name="value">timeout in seconds</param>
            <returns>true if </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ClearCommandTimeout">
            <summary>
            Clears query timeout, allowing next SetCommandTimeout() to succeed.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ClearPool(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>Empties the connection pool associated with the specified connection.</summary><param name="connection">
      The <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> associated with the pool to be cleared.
    </param><remarks>
      <para>
        ClearPool clears the connection pool that is associated with the connection.
        If additional connections associated with connection are in use at the time of the call,
        they are marked appropriately and are discarded (instead of being returned to the pool)
        when Close is called on them.
      </para>
    </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ClearAllPools">
            <summary>Clears all connection pools.</summary><remarks>
      <para>
        ClearAllPools essentially performs a <see cref="M:MySql.Data.MySqlClient.MySqlConnection.ClearPool(MySql.Data.MySqlClient.MySqlConnection)" /> on all current connection
        pools.
      </para>
    </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransactionAsync">
            <summary>
            Initiates the asynchronous execution of a transaction.
            </summary>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransactionAsync(System.Data.IsolationLevel)">
            <summary>
            Async version of BeginTransaction
            </summary>
            <param name="iso">The isolation level under which the transaction should run. </param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ChangeDataBaseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Async version of ChangeDataBase
            </summary>
            <param name="databaseName">The name of the database to use.</param>
            <param name="cancellationToken">Cancellation Token.</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.CloseAsync">
            <summary>
            Async version of Close
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ClearPoolAsync(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            Async version of ClearPool
            </summary>
            <param name="connection">The connection associated with the pool to be cleared.</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.ClearAllPoolsAsync">
            <summary>
            Async version of ClearAllPools
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.GetSchemaCollectionAsync(System.String,System.String[])">
            <summary>
            Async version of GetSchemaCollection
            </summary>
            <param name="collectionName">Name of the collection</param>
            <param name="restrictionValues">Values to restrict</param>
            <returns>A schema collection</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.GetSchema">
            <summary>
            Returns schema information for the data source of this <see cref="T:System.Data.Common.DbConnection"/>. 
            </summary>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.GetSchema(System.String)">
            <summary>
            Returns schema information for the data source of this 
            <see cref="T:System.Data.Common.DbConnection"/> using the specified string for the schema name. 
            </summary>
            <param name="collectionName">Specifies the name of the schema to return. </param>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information. </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.GetSchema(System.String,System.String[])">
            <summary>
            Returns schema information for the data source of this <see cref="T:System.Data.Common.DbConnection"/>
            using the specified string for the schema name and the specified string array 
            for the restriction values. 
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.EnlistTransaction(System.Transactions.Transaction)">
            <summary>
            Enlists in the specified transaction. 
            </summary>
            <param name="transaction">
            A reference to an existing <see cref="T:System.Transactions.Transaction"/> in which to enlist.
            </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlConnection.Clone">
            <summary>
            Creates a new MySqlConnection object with the exact same ConnectionString value
            </summary>
            <returns>A cloned MySqlConnection object</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlInfoMessageEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:MySql.Data.MySqlClient.MySqlConnection.InfoMessage"/> event of a 
            <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/>.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlInfoMessageEventArgs">
            <summary>
            Provides data for the InfoMessage event. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlInfoMessageEventArgs.errors">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.CommandTimer">
            <summary>
            IDisposable wrapper around SetCommandTimeout and ClearCommandTimeout
            functionality
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Crypt">
            <summary>
            Summary description for Crypt.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Crypt.XorScramble(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Simple XOR scramble
            </summary>
            <param name="from">Source array</param>
            <param name="fromIndex">Index inside source array</param>
            <param name="to">Destination array</param>
            <param name="toIndex">Index inside destination array</param>
            <param name="password">Password used to xor the bits</param>
            <param name="length">Number of bytes to scramble</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Crypt.Get411Password(System.String,System.String)">
            <summary>
            Returns a byte array containing the proper encryption of the 
            given password/seed according to the new 4.1.1 authentication scheme.
            </summary>
            <param name="password"></param>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Crypt.EncryptPassword(System.String,System.String,System.Boolean)">
            <summary>
            Encrypts a password using the MySql encryption scheme
            </summary>
            <param name="password">The password to encrypt</param>
            <param name="seed">The encryption seed the server gave us</param>
            <param name="new_ver">Indicates if we should use the old or new encryption scheme</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Crypt.Hash(System.String)">
            <summary>
            Hashes a password using the algorithm from Monty's code.
            The first element in the return is the result of the "old" hash.
            The second element is the rest of the "new" hash.
            </summary>
            <param name="P">Password to be hashed</param>
            <returns>Two element array containing the hashed values</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlDataReader">
            <summary>
      Provides a means of reading a forward-only stream of rows from a MySQL database. This class cannot be inherited.
    </summary><remarks>
      <para>
        To create a <B>MySQLDataReader</B>, you must call the <see cref="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteReader" />
        method of the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> object, rather than directly using a constructor.
      </para>
      <para>
        While the <B>MySqlDataReader</B> is in use, the associated <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />
        is busy serving the <B>MySqlDataReader</B>, and no other operations can be performed
        on the <B>MySqlConnection</B> other than closing it. This is the case until the
        <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.Close" /> method of the <B>MySqlDataReader</B> is called.
      </para>
      <para>
        <see cref="P:MySql.Data.MySqlClient.MySqlDataReader.IsClosed" /> and <see cref="P:MySql.Data.MySqlClient.MySqlDataReader.RecordsAffected" />
        are the only properties that you can call after the <B>MySqlDataReader</B> is
        closed. Though the <B>RecordsAffected</B> property may be accessed at any time
        while the <B>MySqlDataReader</B> exists, always call <B>Close</B> before returning
        the value of <B>RecordsAffected</B> to ensure an accurate return value.
      </para>
      <para>
        For optimal performance, <B>MySqlDataReader</B> avoids creating
        unnecessary objects or making unnecessary copies of data. As a result, multiple calls
        to methods such as <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.GetValue(System.Int32)" /> return a reference to the
        same object. Use caution if you are modifying the underlying value of the objects
        returned by methods such as <B>GetValue</B>.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />,
      a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />, and a <B>MySqlDataReader</B>. The example reads through
      the data, writing it out to the console. Finally, the example closes the <B>MySqlDataReader</B>, then the
      <B>MySqlConnection</B>.
      <code lang="vbnet">
        Public Sub ReadMyData(myConnString As String)
        Dim mySelectQuery As String = "SELECT OrderID, CustomerID FROM Orders"
        Dim myConnection As New MySqlConnection(myConnString)
        Dim myCommand As New MySqlCommand(mySelectQuery, myConnection)
        myConnection.Open()
        Dim myReader As MySqlDataReader
        myReader = myCommand.ExecuteReader()
        ' Always call Read before accessing data.
        While myReader.Read()
        Console.WriteLine((myReader.GetInt32(0) &amp; ", " &amp; myReader.GetString(1)))
        End While
        ' always call Close when done reading.
        myReader.Close()
        ' Close the connection when done with it.
        myConnection.Close()
        End Sub 'ReadMyData
      </code>
      <code lang="C#">
        public void ReadMyData(string myConnString) {
        string mySelectQuery = "SELECT OrderID, CustomerID FROM Orders";
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        MySqlCommand myCommand = new MySqlCommand(mySelectQuery,myConnection);
        myConnection.Open();
        MySqlDataReader myReader;
        myReader = myCommand.ExecuteReader();
        // Always call Read before accessing data.
        while (myReader.Read()) {
        Console.WriteLine(myReader.GetInt32(0) + ", " + myReader.GetString(1));
        }
        // always call Close when done reading.
        myReader.Close();
        // Close the connection when done with it.
        myConnection.Close();
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.HasRows">
            <summary>
            Gets a value indicating whether the MySqlDataReader contains one or more rows.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.Item(System.Int32)">
            <summary>
            Overloaded. Gets the value of a column in its native format.
            In C#, this property is the indexer for the MySqlDataReader class.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.Item(System.String)">
            <summary>
            Gets the value of a column in its native format.
            [C#] In C#, this property is the indexer for the MySqlDataReader class.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataReader.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.  This method is not 
            supported currently and always returns 0.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.Close">
            <summary>
            Closes the MySqlDataReader object.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetBoolean(System.String)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetByte(System.String)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetSByte(System.String)">
            <summary>
            Gets the value of the specified column as a sbyte.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetSByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a sbyte.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal. </param>
            <param name="fieldOffset">The index within the field from which to begin the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for buffer to begin the read operation. </param>
            <param name="length">The maximum length to copy into the buffer. </param>
            <returns>The actual number of bytes read.</returns>
            <!-- No matching elements were found for the following include tag --><include file="docs/MySqlDataReader.xml" path="MyDocs/MyMembers[@name=&quot;GetBytes&quot;]/*" />
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetChar(System.String)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.
            </summary>
            <param name="i"></param>
            <param name="fieldoffset"></param>
            <param name="buffer"></param>
            <param name="bufferoffset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the source data type.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetMySqlDateTime(System.String)">
            <summary>
      Gets the value of the specified column as a <see cref="T:MySql.Data.Types.MySqlDateTime" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>DateTime</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetMySqlDateTime(System.Int32)">
            <summary>
      Gets the value of the specified column as a <see cref="T:MySql.Data.Types.MySqlDateTime" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>DateTime</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDateTime(System.String)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>DateTime</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
      <note>
        <para>
          MySql allows date columns to contain the value '0000-00-00' and datetime
          columns to contain the value '0000-00-00 00:00:00'.  The DateTime structure cannot contain
          or represent these values.  To read a datetime value from a column that might
          contain zero values, use <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.GetMySqlDateTime(System.Int32)" />.
        </para>
        <para>
          The behavior of reading a zero datetime column using this method is defined by the
          <i>ZeroDateTimeBehavior</i> connection string option.  For more information on this option,
          please refer to <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" />.
        </para>
      </note>
    </remarks><param name="column">The column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDateTime(System.Int32)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>DateTime</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
      <note>
        <para>
          MySql allows date columns to contain the value '0000-00-00' and datetime
          columns to contain the value '0000-00-00 00:00:00'.  The DateTime structure cannot contain
          or represent these values.  To read a datetime value from a column that might
          contain zero values, use <see cref="M:MySql.Data.MySqlClient.MySqlDataReader.GetMySqlDateTime(System.Int32)" />.
        </para>
        <para>
          The behavior of reading a zero datetime column using this method is defined by the
          <i>ZeroDateTimeBehavior</i> connection string option.  For more information on this option,
          please refer to <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString" />.
        </para>
      </note>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDecimal(System.String)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Decimal</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDecimal(System.Int32)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Decimal</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDouble(System.String)">
            <summary>Gets the value of the specified column as a double-precision floating point number.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Double</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetDouble(System.Int32)">
            <summary>Gets the value of the specified column as a double-precision floating point number.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Double</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the Type that is the data type of the object.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetFloat(System.String)">
            <summary>
      Gets the value of the specified column as a single-precision floating point number.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Float</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetFloat(System.Int32)">
            <summary>
      Gets the value of the specified column as a single-precision floating point number.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Float</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetGuid(System.String)">
            <!-- No matching elements were found for the following include tag --><include file="docs/MySqlDataReader.xml" path="docs/GetGuidS/*" />
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetGuid(System.Int32)">
            <!-- No matching elements were found for the following include tag --><include file="docs/MySqlDataReader.xml" path="docs/GetGuid/*" />
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt16(System.String)">
            <summary>Gets the value of the specified column as a 16-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; threfore, the data retrieved must already be a <b>16 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt16(System.Int32)">
            <summary>Gets the value of the specified column as a 16-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>16 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt32(System.String)">
            <summary>Gets the value of the specified column as a 32-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>32 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt32(System.Int32)">
            <summary>Gets the value of the specified column as a 32-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>32 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt64(System.String)">
            <summary>Gets the value of the specified column as a 64-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>64 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetInt64(System.Int32)">
            <summary>Gets the value of the specified column as a 64-bit signed integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>64 bit integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetName(System.Int32)">
            <summary>
            Gets the name of the specified column.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetString(System.String)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.String" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>String</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetString(System.Int32)">
            <summary>
      Gets the value of the specified column as a <see cref="T:System.String" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>String</b> object.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="i">The zero-based column ordinal.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetTimeSpan(System.String)">
            <overloads /><summary>
      Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Time</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetTimeSpan(System.Int32)">
            <overloads /><summary>
      Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.
    </summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>Time</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetValue(System.Int32)">
            <summary>
            Gets the value of the specified column in its native format.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetValues(System.Object[])">
            <summary>
            Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt16(System.String)">
            <summary>Gets the value of the specified column as a 16-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>16 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt16(System.Int32)">
            <summary>Gets the value of the specified column as a 16-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>16 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt32(System.String)">
            <summary>Gets the value of the specified column as a 32-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>32 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt32(System.Int32)">
            <summary>Gets the value of the specified column as a 32-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>32 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt64(System.String)">
            <summary>Gets the value of the specified column as a 64-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>64 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetUInt64(System.Int32)">
            <summary>Gets the value of the specified column as a 64-bit unsigned integer.</summary><remarks>
      <para>
        No conversions are performed; therefore, the data retrieved must already be a <b>64 bit unsigned integer</b> value.
      </para>
      <para>
        Call IsDBNull to check for null values before calling this method.
      </para>
    </remarks><param name="column">The zero-based column ordinal or column name.</param><returns>The value of the specified column.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value indicating whether the column contains non-existent or missing values.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.Read">
            <summary>
            Advances the MySqlDataReader to the next record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that iterates through the <see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/>. 
            </summary>    
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataReader.GetSchemaTable">
            <summary>
            Returns a DataTable that describes the column metadata of the MySqlDataReader.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.Driver">
            <summary>
            Summary description for BaseDriver.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Driver.IdleSince">
            <summary>
            For pooled connections, time when the driver was
            put into idle queue
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Driver.LoadServerProperties(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            Loads the properties from the connected server into a hashtable
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Driver.LoadCharacterSets(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            Loads all the current character set names and ids for this server 
            into the charSets hashtable
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlException">
            <summary>
            The exception that is thrown when MySQL returns an error. This class cannot be inherited.
            </summary>
            <remarks>
      <para>
        This class is created whenever the MySql Data Provider encounters an error generated from the server.
      </para>
      <para>
        Any open connections are not automatically closed when an exception is thrown.  If
        the client application determines that the exception is fatal, it should close any open
        <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" /> objects or <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> objects.
      </para>
    </remarks><example>
      The following example generates a <B>MySqlException</B> due to a missing server,
      and then displays the exception.

      <code lang="vbnet">
        Public Sub ShowException()
        Dim mySelectQuery As String = "SELECT column1 FROM table1"
        Dim myConnection As New MySqlConnection ("Data Source=localhost;Database=Sample;")
        Dim myCommand As New MySqlCommand(mySelectQuery, myConnection)

        Try
        myCommand.Connection.Open()
        Catch e As MySqlException
        MessageBox.Show( e.Message )
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void ShowException()
        {
        string mySelectQuery = "SELECT column1 FROM table1";
        MySqlConnection myConnection =
        new MySqlConnection("Data Source=localhost;Database=Sample;");
        MySqlCommand myCommand = new MySqlCommand(mySelectQuery,myConnection);

        try
        {
        myCommand.Connection.Open();
        }
        catch (MySqlException e)
        {
        MessageBox.Show( e.Message );
        }
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlException.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlException.IsFatal">
            <summary>
            True if this exception was fatal and cause the closing of the connection, false otherwise.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlField">
            <summary>
            Summary description for Field.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.CustomInstaller">
            <summary>
            We are adding a custom installer class to our assembly so our installer
            can make proper changes to the machine.config file.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.CustomInstaller.Install(System.Collections.IDictionary)">
            <summary>
            We override Install so we can add our assembly to the proper
            machine.config files.
            </summary>
            <param name="stateSaver"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.CustomInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            We override Uninstall so we can remove out assembly from the
            machine.config files.
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlCommandBuilder">
            <summary>
      Automatically generates single-table commands used to reconcile changes made to a DataSet with the associated MySQL database. This class cannot be inherited.
    </summary><remarks>
      <para>
        The <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> does not automatically generate the SQL statements required to
        reconcile changes made to a <see cref="T:System.Data.DataSet">DataSet</see> with the associated instance of MySQL.
        However, you can create a <B>MySqlCommandBuilder</B> object to automatically generate SQL statements for
        single-table updates if you set the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand">SelectCommand</see> property
        of the <B>MySqlDataAdapter</B>. Then, any additional SQL statements that you do not set are generated by the
        <B>MySqlCommandBuilder</B>.
      </para>

      <para>
        The <B>MySqlCommandBuilder</B> registers itself as a listener for <see cref="M:MySql.Data.MySqlClient.MySqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">RowUpdating</see>
        events whenever you set the <see cref="P:MySql.Data.MySqlClient.MySqlCommandBuilder.DataAdapter" /> property. You can only associate one
        <B>MySqlDataAdapter</B> or <B>MySqlCommandBuilder</B> object with each other at one time.
      </para>

      <para>
        To generate INSERT, UPDATE, or DELETE statements, the <B>MySqlCommandBuilder</B> uses the
        <B>SelectCommand</B> property to retrieve a required set of metadata automatically. If you change
        the <B>SelectCommand</B> after the metadata has is retrieved (for example, after the first update), you
        should call the <see cref="!:RefreshSchema" /> method to update the metadata.
      </para>

      <para>
        The <B>SelectCommand</B> must also return at least one primary key or unique
        column. If none are present, an <I>InvalidOperation</I> exception is generated,
        and the commands are not generated.
      </para>

      <para>
        The <B>MySqlCommandBuilder</B> also uses the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection">Connection</see>,
        <see cref="P:MySql.Data.MySqlClient.MySqlCommand.CommandTimeout">CommandTimeout</see>, and <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Transaction">Transaction</see>
        properties referenced by the <B>SelectCommand</B>. The user should call
        <B>RefreshSchema</B> if any of these properties are modified, or if the
        <B>SelectCommand</B> itself is replaced. Otherwise the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.InsertCommand">InsertCommand</see>,
        <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateCommand">UpdateCommand</see>, and
        <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.DeleteCommand">DeleteCommand</see> properties retain
        their previous values.
      </para>

      <para>
        If you call <i>Dispose</i>, the <B>MySqlCommandBuilder</B> is disassociated
        from the <B>MySqlDataAdapter</B>, and the generated commands are no longer used.
      </para>

      <note>
        Caution must be used when using MySqlCOmmandBuilder on MySql 4.0 systems.  With MySql 4.0,
        database/schema information is not provided to the connector for a query.  This means that
        a query that pulls columns from two identically named tables in two or more different databases
        will not cause an exception to be thrown but will not work correctly.  Even more dangerous
        is the situation where your select statement references database X but is executed in
        database Y and both databases have tables with similar layouts.  This situation can cause
        unwanted changes or deletes.
        This note does not apply to MySQL versions 4.1 and later.
      </note>

    </remarks><example>
      The	following example uses the <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />, along
      <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />, to
      select rows from a data source. The example is passed an initialized
      <see cref="T:System.Data.DataSet" />, a connection string, a
      query string that is a SQL SELECT statement, and a string that is the
      name of the database table. The example then creates a <B>MySqlCommandBuilder</B>.

      <code lang="vbnet">
        Public Shared Function SelectRows(myConnection As String, mySelectQuery As String, myTableName As String) As DataSet
        Dim myConn As New MySqlConnection(myConnection)
        Dim myDataAdapter As New MySqlDataAdapter()
        myDataAdapter.SelectCommand = New MySqlCommand(mySelectQuery, myConn)
        Dim cb As SqlCommandBuilder = New MySqlCommandBuilder(myDataAdapter)

        myConn.Open()

        Dim ds As DataSet = New DataSet
        myDataAdapter.Fill(ds, myTableName)

        ' Code to modify data in DataSet here

        ' Without the MySqlCommandBuilder this line would fail.
        myDataAdapter.Update(ds, myTableName)

        myConn.Close()
        End Function 'SelectRows
      </code>
      <code lang="C#">
        public static DataSet SelectRows(string myConnection, string mySelectQuery, string myTableName)
        {
        MySqlConnection myConn = new MySqlConnection(myConnection);
        MySqlDataAdapter myDataAdapter = new MySqlDataAdapter();
        myDataAdapter.SelectCommand = new MySqlCommand(mySelectQuery, myConn);
        MySqlCommandBuilder cb = new MySqlCommandBuilder(myDataAdapter);

        myConn.Open();

        DataSet ds = new DataSet();
        myDataAdapter.Fill(ds, myTableName);

        //code to modify data in DataSet here

        //Without the MySqlCommandBuilder this line would fail
        myDataAdapter.Update(ds, myTableName);

        myConn.Close();

        return ds;
        }

      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.#ctor">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" /> class.
    </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.#ctor(MySql.Data.MySqlClient.MySqlDataAdapter)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" /> class
      with the associated <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> object.
    </summary><param name="adapter">
      The <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> to use.
    </param><remarks>
      <para>
        The <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" /> registers itself as a listener for
        <see cref="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdating" /> events that are generated by the
        <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> specified in this property.
      </para>
      <para>
        When you create a new instance <B>MySqlCommandBuilder</B>, any existing
        <B>MySqlCommandBuilder</B> associated with this <B>MySqlDataAdapter</B>
        is released.
      </para>
    </remarks>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlCommandBuilder.DataAdapter">
            <summary>
      Gets or sets a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> object for which SQL statements are automatically generated.
    </summary><value>
      A <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> object.
    </value><remarks>
      <para>
        The <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" /> registers itself as a listener for
        <see cref="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdating" /> events that are generated by the
        <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> specified in this property.
      </para>
      <para>
        When you create a new instance <B>MySqlCommandBuilder</B>, any existing
        <B>MySqlCommandBuilder</B> associated with this <B>MySqlDataAdapter</B>
        is released.
      </para>
    </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.DeriveParameters(MySql.Data.MySqlClient.MySqlCommand)">
            <summary>
            Retrieves parameter information from the stored procedure specified 
            in the MySqlCommand and populates the Parameters collection of the 
            specified MySqlCommand object.
            This method is not currently supported since stored procedures are 
            not available in MySql.
            </summary>
            <param name="command">The MySqlCommand referencing the stored 
            procedure from which the parameter information is to be derived. 
            The derived parameters are added to the Parameters collection of the 
            MySqlCommand.</param>
            <exception cref="T:System.InvalidOperationException">The command text is not 
            a valid stored procedure name.</exception>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.GetDeleteCommand">
            <summary>
            Gets the delete command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.GetUpdateCommand">
            <summary>
            Gets the update command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.GetInsertCommand">
            <summary>
            Gets the insert command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlCommandBuilder.GetParameterName(System.String)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlDataAdapter">
            <summary>
      Represents a set of data commands and a database connection that are used to fill a dataset and update a MySQL database. This class cannot be inherited.
    </summary><remarks>
      <para>
        The <B>MySQLDataAdapter</B>, serves as a bridge between a <see cref="T:System.Data.DataSet" />
        and MySQL for retrieving and saving data. The <B>MySQLDataAdapter</B> provides this
        bridge by mapping <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />, which changes the data in the
        <B>DataSet</B> to match the data in the data source, and <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />,
        which changes the data in the data source to match the data in the <B>DataSet</B>,
        using the appropriate SQL statements against the data source.
      </para>
      <para>
        When the <B>MySQLDataAdapter</B> fills a <B>DataSet</B>, it will create the necessary
        tables and columns for the returned data if they do not already exist. However, primary
        key information will not be included in the implicitly created schema unless the
        <see cref="T:System.Data.MissingSchemaAction" /> property is set to <see cref="F:System.Data.MissingSchemaAction.AddWithKey" />.
        You may also have the <B>MySQLDataAdapter</B> create the schema of the <B>DataSet</B>,
        including primary key information, before filling it with data using <see cref="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />.
      </para>
      <para>
        <B>MySQLDataAdapter</B> is used in conjunction with <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />
        and <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> to increase performance when connecting to a MySQL database.
      </para>
      <para>
        The <B>MySQLDataAdapter</B> also includes the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" />,
        <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.InsertCommand" />, <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.DeleteCommand" />,
        <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateCommand" />, and <see cref="P:System.Data.Common.DataAdapter.TableMappings" />
        properties to facilitate the loading and updating of data.
      </para>
      <para>
        When an instance of <B>MySQLDataAdapter</B> is created, the read/write properties
        are set to initial values. For a list of these values, see the <B>MySQLDataAdapter</B>
        constructor.
      </para>
      <note>
        Please be aware that the <see cref="T:System.Data.DataColumn" /> class allows only
        Int16, Int32, and Int64 to have the AutoIncrement property set.
        If you plan to use autoincremement columns with MySQL, you should consider
        using signed integer columns.
      </note>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> and a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />.
      The <B>MySqlConnection</B> is opened and set as the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.Connection" /> for the
      <B>MySqlCommand</B>. The example then calls <see cref="M:MySql.Data.MySqlClient.MySqlCommand.ExecuteNonQuery" />, and closes
      the connection. To accomplish this, the <B>ExecuteNonQuery</B> is
      passed a connection string and a query string that is a SQL INSERT
      statement.
      <code lang="vbnet">
        Public Function SelectRows(dataSet As DataSet, connection As String, query As String) As DataSet
        Dim conn As New MySqlConnection(connection)
        Dim adapter As New MySqlDataAdapter()
        adapter.SelectCommand = new MySqlCommand(query, conn)
        adapter.Fill(dataset)
        Return dataset
        End Function
      </code>
      <code lang="C#">
        public DataSet SelectRows(DataSet dataset,string connection,string query)
        {
        MySqlConnection conn = new MySqlConnection(connection);
        MySqlDataAdapter adapter = new MySqlDataAdapter();
        adapter.SelectCommand = new MySqlCommand(query, conn);
        adapter.Fill(dataset);
        return dataset;
        }
      </code>
    </example>
        </member>
        <member name="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdating">
            <summary>
            Occurs during Update before a command is executed against the data source. The attempt to update is made, so the event fires.
            </summary>
        </member>
        <member name="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdated">
            <summary>
            Occurs during Update after a command is executed against the data source. The attempt to update is made, so the event fires.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.#ctor">
            <overloads /><summary>
      Initializes a new instance of the MySqlDataAdapter class.
    </summary><remarks>
      <para>
        When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> is created,
        the following read/write properties are set to the following initial
        values.
      </para>
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="T:System.Data.MissingMappingAction" />
          </term>
          <term>
            <B>MissingMappingAction.Passthrough</B>
          </term>
        </item>
        <item>
          <term>
            <see cref="T:System.Data.MissingSchemaAction" />
          </term>
          <term>
            <B>MissingSchemaAction.Add</B>
          </term>
        </item>
      </list>
      <para>
        You can change the value of any of these properties through a separate call
        to the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets some of
      its properties.
      <code lang="vbnet">
        Public Sub CreateSqlDataAdapter()
        Dim conn As MySqlConnection = New MySqlConnection("Data Source=localhost;" &amp; _
        "database=test")
        Dim da As MySqlDataAdapter = New MySqlDataAdapter
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey

        da.SelectCommand = New MySqlCommand("SELECT id, name FROM mytable", conn)
        da.InsertCommand = New MySqlCommand("INSERT INTO mytable (id, name) " &amp; _
        "VALUES (@id, @name)", conn)
        da.UpdateCommand = New MySqlCommand("UPDATE mytable SET id=@id, name=@name " &amp; _
        "WHERE id=@oldId", conn)
        da.DeleteCommand = New MySqlCommand("DELETE FROM mytable WHERE id=@id", conn)

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original
        End Sub
      </code>
      <code lang="C#">
        public static void CreateSqlDataAdapter()
        {
        MySqlConnection conn = new MySqlConnection("Data Source=localhost;database=test");
        MySqlDataAdapter da = new MySqlDataAdapter();
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey;

        da.SelectCommand = new MySqlCommand("SELECT id, name FROM mytable", conn);
        da.InsertCommand = new MySqlCommand("INSERT INTO mytable (id, name) " +
        "VALUES (@id, @name)", conn);
        da.UpdateCommand = new MySqlCommand("UPDATE mytable SET id=@id, name=@name " +
        "WHERE id=@oldId", conn);
        da.DeleteCommand = new MySqlCommand("DELETE FROM mytable WHERE id=@id", conn);

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.#ctor(MySql.Data.MySqlClient.MySqlCommand)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> class with
      the specified <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> as the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" />
      property.
    </summary><param name="selectCommand">
      <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> that is a SQL SELECT statement or stored procedure and is set
      as the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" />.
    </param><remarks>
      <para>
        When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> is created,
        the following read/write properties are set to the following initial
        values.
      </para>
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="T:System.Data.MissingMappingAction" />
          </term>
          <term>
            <B>MissingMappingAction.Passthrough</B>
          </term>
        </item>
        <item>
          <term>
            <see cref="T:System.Data.MissingSchemaAction" />
          </term>
          <term>
            <B>MissingSchemaAction.Add</B>
          </term>
        </item>
      </list>
      <para>
        You can change the value of any of these properties through a separate call
        to the property.
      </para>
      <para>
        When <B>SelectCommand</B> (or any of the other command properties) is assigned
        to a previously created <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />, the <B>MySqlCommand</B> is not cloned.
        The <B>SelectCommand</B> maintains a reference to the previously created <B>MySqlCommand</B>
        object.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets some of
      its properties.
      <code lang="vbnet">
        Public Sub CreateSqlDataAdapter()
        Dim conn As MySqlConnection = New MySqlConnection("Data Source=localhost;" &amp; _
        "database=test")
        Dim cmd as new MySqlCommand("SELECT id, name FROM mytable", conn)
        Dim da As MySqlDataAdapter = New MySqlDataAdapter(cmd)
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey

        da.InsertCommand = New MySqlCommand("INSERT INTO mytable (id, name) " &amp; _
        "VALUES (@id, @name)", conn)
        da.UpdateCommand = New MySqlCommand("UPDATE mytable SET id=@id, name=@name " &amp; _
        "WHERE id=@oldId", conn)
        da.DeleteCommand = New MySqlCommand("DELETE FROM mytable WHERE id=@id", conn)

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original
        End Sub
      </code>
      <code lang="C#">
        public static void CreateSqlDataAdapter()
        {
        MySqlConnection conn = new MySqlConnection("Data Source=localhost;database=test");
        MySqlCommand cmd = new MySqlCommand("SELECT id, name FROM mytable", conn);
        MySqlDataAdapter da = new MySqlDataAdapter(cmd);
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey;

        da.InsertCommand = new MySqlCommand("INSERT INTO mytable (id, name) " +
        "VALUES (@id, @name)", conn);
        da.UpdateCommand = new MySqlCommand("UPDATE mytable SET id=@id, name=@name " +
        "WHERE id=@oldId", conn);
        da.DeleteCommand = new MySqlCommand("DELETE FROM mytable WHERE id=@id", conn);

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.#ctor(System.String,MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> class with
      a <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object.
    </summary><param name="selectCommandText">
      A <b>String</b> that is a SQL SELECT statement or stored procedure to be used by
      the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" />.
    </param><param name="connection">
      A <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> that represents the connection.
    </param><remarks>
      <para>
        This implementation of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> opens and closes a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />
        if it is not already open. This can be useful in a an application that must call the
        <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method for two or more <B>MySqlDataAdapter</B> objects.
        If the <B>MySqlConnection</B> is already open, you must explicitly call
        <see cref="M:MySql.Data.MySqlClient.MySqlConnection.Close" /> or <see cref="M:MySql.Data.MySqlClient.MySqlConnection.Dispose" /> to close it.
      </para>
      <para>
        When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> is created,
        the following read/write properties are set to the following initial
        values.
      </para>
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="T:System.Data.MissingMappingAction" />
          </term>
          <term>
            <B>MissingMappingAction.Passthrough</B>
          </term>
        </item>
        <item>
          <term>
            <see cref="T:System.Data.MissingSchemaAction" />
          </term>
          <term>
            <B>MissingSchemaAction.Add</B>
          </term>
        </item>
      </list>
      <para>
        You can change the value of any of these properties through a separate call
        to the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets some of
      its properties.
      <code lang="vbnet">
        Public Sub CreateSqlDataAdapter()
        Dim conn As MySqlConnection = New MySqlConnection("Data Source=localhost;" &amp; _
        "database=test")
        Dim da As MySqlDataAdapter = New MySqlDataAdapter("SELECT id, name FROM mytable", conn)
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey

        da.InsertCommand = New MySqlCommand("INSERT INTO mytable (id, name) " &amp; _
        "VALUES (@id, @name)", conn)
        da.UpdateCommand = New MySqlCommand("UPDATE mytable SET id=@id, name=@name " &amp; _
        "WHERE id=@oldId", conn)
        da.DeleteCommand = New MySqlCommand("DELETE FROM mytable WHERE id=@id", conn)

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original
        End Sub
      </code>
      <code lang="C#">
        public static void CreateSqlDataAdapter()
        {
        MySqlConnection conn = new MySqlConnection("Data Source=localhost;database=test");
        MySqlDataAdapter da = new MySqlDataAdapter("SELECT id, name FROM mytable", conn);
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey;

        da.InsertCommand = new MySqlCommand("INSERT INTO mytable (id, name) " +
        "VALUES (@id, @name)", conn);
        da.UpdateCommand = new MySqlCommand("UPDATE mytable SET id=@id, name=@name " +
        "WHERE id=@oldId", conn);
        da.DeleteCommand = new MySqlCommand("DELETE FROM mytable WHERE id=@id", conn);

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.#ctor(System.String,System.String)">
            <summary>
      Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> class with
      a <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and a connection string.
    </summary><param name="selectCommandText">
      A <see cref="T:System.String" /> that is a SQL SELECT statement or stored procedure to
      be used by the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property of the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" />.
    </param><param name="selectConnString">The connection string</param><remarks>
      <para>
        When an instance of <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> is created,
        the following read/write properties are set to the following initial
        values.
      </para>
      <list type="table">
        <listheader>
          <term>Properties</term>
          <term>Initial Value</term>
        </listheader>
        <item>
          <term>
            <see cref="T:System.Data.MissingMappingAction" />
          </term>
          <term>
            <B>MissingMappingAction.Passthrough</B>
          </term>
        </item>
        <item>
          <term>
            <see cref="T:System.Data.MissingSchemaAction" />
          </term>
          <term>
            <B>MissingSchemaAction.Add</B>
          </term>
        </item>
      </list>
      <para>
        You can change the value of any of these properties through a separate call
        to the property.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets some of
      its properties.
      <code lang="vbnet">
        Public Sub CreateSqlDataAdapter()
        Dim da As MySqlDataAdapter = New MySqlDataAdapter("SELECT id, name FROM mytable", "Data Source=localhost;database=test")
        Dim conn As MySqlConnection = da.SelectCommand.Connection
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey

        da.InsertCommand = New MySqlCommand("INSERT INTO mytable (id, name) " &amp; _
        "VALUES (@id, @name)", conn)
        da.UpdateCommand = New MySqlCommand("UPDATE mytable SET id=@id, name=@name " &amp; _
        "WHERE id=@oldId", conn)
        da.DeleteCommand = New MySqlCommand("DELETE FROM mytable WHERE id=@id", conn)

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name")
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original
        End Sub
      </code>
      <code lang="C#">
        public static void CreateSqlDataAdapter()
        {
        MySqlDataAdapter da = new MySqlDataAdapter("SELECT id, name FROM mytable", "Data Source=localhost;database=test");
        MySqlConnection conn = da.SelectCommand.Connection;
        da.MissingSchemaAction = MissingSchemaAction.AddWithKey;

        da.InsertCommand = new MySqlCommand("INSERT INTO mytable (id, name) " +
        "VALUES (@id, @name)", conn);
        da.UpdateCommand = new MySqlCommand("UPDATE mytable SET id=@id, name=@name " +
        "WHERE id=@oldId", conn);
        da.DeleteCommand = new MySqlCommand("DELETE FROM mytable WHERE id=@id", conn);

        da.InsertCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.InsertCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");

        da.UpdateCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        da.UpdateCommand.Parameters.Add("@name", MySqlDbType.VarChar, 40, "name");
        da.UpdateCommand.Parameters.Add("@oldId", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;

        da.DeleteCommand.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id").SourceVersion = DataRowVersion.Original;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataAdapter.DeleteCommand">
            <summary>
      Gets or sets a SQL statement or stored procedure used to delete records from the data set.
    </summary><value>
      A <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the
      database that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />.
    </value><remarks>
      <para>
        During <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, if this property is not set and primary key information
        is present in the <see cref="T:System.Data.DataSet" />, the <B>DeleteCommand</B> can be generated
        automatically if you set the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property and use the
        <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" />.  Then, any additional commands that you do not set are
        generated by the <B>MySqlCommandBuilder</B>. This generation logic requires key column
        information to be present in the <B>DataSet</B>.
      </para>
      <para>
        When <B>DeleteCommand</B> is assigned to a previously created <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />,
        the <B>MySqlCommand</B> is not cloned. The <B>DeleteCommand</B> maintains a reference
        to the previously created <B>MySqlCommand</B> object.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets the
      <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and <B>DeleteCommand</B> properties. It assumes you have already
      created a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object.
      <code lang="vbnet">
        Public Shared Function CreateCustomerAdapter(conn As MySqlConnection) As MySqlDataAdapter

        Dim da As MySqlDataAdapter = New MySqlDataAdapter()
        Dim cmd As MySqlCommand
        Dim parm As MySqlParameter

        ' Create the SelectCommand.
        cmd = New MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn)

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15)
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15)

        da.SelectCommand = cmd

        ' Create the DeleteCommand.
        cmd = New MySqlCommand("DELETE FROM mytable WHERE id=@id", conn)

        parm = cmd.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id")
        parm.SourceVersion = DataRowVersion.Original

        da.DeleteCommand = cmd

        Return da
        End Function
      </code>
      <code lang="C#">
        public static MySqlDataAdapter CreateCustomerAdapter(MySqlConnection conn)
        {
        MySqlDataAdapter da = new MySqlDataAdapter();
        MySqlCommand cmd;
        MySqlParameter parm;

        // Create the SelectCommand.
        cmd = new MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn);

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15);
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15);

        da.SelectCommand = cmd;

        // Create the DeleteCommand.
        cmd = new MySqlCommand("DELETE FROM mytable WHERE id=@id", conn);

        parm = cmd.Parameters.Add("@id", MySqlDbType.VarChar, 5, "id");
        parm.SourceVersion = DataRowVersion.Original;

        da.DeleteCommand = cmd;

        return da;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataAdapter.InsertCommand">
            <summary>
      Gets or sets a SQL statement or stored procedure used to insert records into the data set.
    </summary><value>
      A <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records into the
      database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.
    </value><remarks>
      <para>
        During <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, if this property is not set and primary key information
        is present in the <see cref="T:System.Data.DataSet" />, the <B>InsertCommand</B> can be generated
        automatically if you set the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property and use the
        <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" />.  Then, any additional commands that you do not set are
        generated by the <B>MySqlCommandBuilder</B>. This generation logic requires key column
        information to be present in the <B>DataSet</B>.
      </para>
      <para>
        When <B>InsertCommand</B> is assigned to a previously created <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />,
        the <B>MySqlCommand</B> is not cloned. The <B>InsertCommand</B> maintains a reference
        to the previously created <B>MySqlCommand</B> object.
      </para>
      <note>
        If execution of this command returns rows, these rows may be added to the <B>DataSet</B>
        depending on how you set the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.UpdatedRowSource" /> property of the <B>MySqlCommand</B> object.
      </note>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets the
      <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and <B>InsertCommand</B> properties. It assumes you have already
      created a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object.
      <code lang="vbnet">
        Public Shared Function CreateCustomerAdapter(conn As MySqlConnection) As MySqlDataAdapter

        Dim da As MySqlDataAdapter = New MySqlDataAdapter()
        Dim cmd As MySqlCommand
        Dim parm As MySqlParameter

        ' Create the SelectCommand.
        cmd = New MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn)

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15)
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15)

        da.SelectCommand = cmd

        ' Create the InsertCommand.
        cmd = New MySqlCommand("INSERT INTO mytable (id,name) VALUES (@id, @name)", conn)

        cmd.Parameters.Add( "@id", MySqlDbType.VarChar, 15, "id" )
        cmd.Parameters.Add( "@name", MySqlDbType.VarChar, 15, "name" )
        da.InsertCommand = cmd

        Return da
        End Function
      </code>
      <code lang="C#">
        public static MySqlDataAdapter CreateCustomerAdapter(MySqlConnection conn)
        {
        MySqlDataAdapter da = new MySqlDataAdapter();
        MySqlCommand cmd;
        MySqlParameter parm;

        // Create the SelectCommand.
        cmd = new MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn);

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15);
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15);

        da.SelectCommand = cmd;

        // Create the InsertCommand.
        cmd = new MySqlCommand("INSERT INTO mytable (id,name) VALUES (@id,@name)", conn);
        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15, "id" );
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15, "name" );

        da.InsertCommand = cmd;

        return da;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand">
            <summary>
      Gets or sets a SQL statement or stored procedure used to select records in the data source.
    </summary><value>
      A <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to select records from the
      database for placement in the <see cref="T:System.Data.DataSet" />.
    </value><remarks>
      <para>
        When <B>SelectCommand</B> is assigned to a previously created <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />,
        the <B>MySqlCommand</B> is not cloned. The <B>SelectCommand</B> maintains a reference to the
        previously created <B>MySqlCommand</B> object.
      </para>
      <para>
        If the <B>SelectCommand</B> does not return any rows, no tables are added to the
        <see cref="T:System.Data.DataSet" />, and no exception is raised.
      </para>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets the
      <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and <B>InsertCommand</B> properties. It assumes you have already
      created a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object.
      <code lang="vbnet">
        Public Shared Function CreateCustomerAdapter(conn As MySqlConnection) As MySqlDataAdapter

        Dim da As MySqlDataAdapter = New MySqlDataAdapter()
        Dim cmd As MySqlCommand
        Dim parm As MySqlParameter

        ' Create the SelectCommand.
        cmd = New MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn)

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15)
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15)

        da.SelectCommand = cmd

        ' Create the InsertCommand.
        cmd = New MySqlCommand("INSERT INTO mytable (id,name) VALUES (@id, @name)", conn)

        cmd.Parameters.Add( "@id", MySqlDbType.VarChar, 15, "id" )
        cmd.Parameters.Add( "@name", MySqlDbType.VarChar, 15, "name" )
        da.InsertCommand = cmd

        Return da
        End Function
      </code>
      <code lang="C#">
        public static MySqlDataAdapter CreateCustomerAdapter(MySqlConnection conn)
        {
        MySqlDataAdapter da = new MySqlDataAdapter();
        MySqlCommand cmd;
        MySqlParameter parm;

        // Create the SelectCommand.
        cmd = new MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn);

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15);
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15);

        da.SelectCommand = cmd;

        // Create the InsertCommand.
        cmd = new MySqlCommand("INSERT INTO mytable (id,name) VALUES (@id,@name)", conn);
        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15, "id" );
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15, "name" );

        da.InsertCommand = cmd;

        return da;
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateCommand">
            <summary>
      Gets or sets a SQL statement or stored procedure used to updated records in the data source.
    </summary><value>
      A <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the
      database with data from the <see cref="T:System.Data.DataSet" />.
    </value><remarks>
      <para>
        During <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, if this property is not set and primary key information
        is present in the <see cref="T:System.Data.DataSet" />, the <B>UpdateCommand</B> can be generated
        automatically if you set the <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> property and use the
        <see cref="T:MySql.Data.MySqlClient.MySqlCommandBuilder" />.  Then, any additional commands that you do not set are
        generated by the <B>MySqlCommandBuilder</B>. This generation logic requires key column
        information to be present in the <B>DataSet</B>.
      </para>
      <para>
        When <B>UpdateCommand</B> is assigned to a previously created <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />,
        the <B>MySqlCommand</B> is not cloned. The <B>UpdateCommand</B> maintains a reference
        to the previously created <B>MySqlCommand</B> object.
      </para>
      <note>
        If execution of this command returns rows, these rows may be merged with the DataSet
        depending on how you set the <see cref="P:MySql.Data.MySqlClient.MySqlCommand.UpdatedRowSource" /> property of the <B>MySqlCommand</B> object.
      </note>
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" /> and sets the
      <see cref="P:MySql.Data.MySqlClient.MySqlDataAdapter.SelectCommand" /> and <B>UpdateCommand</B> properties. It assumes you have already
      created a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object.
      <code lang="vbnet">
        Public Shared Function CreateCustomerAdapter(conn As MySqlConnection) As MySqlDataAdapter

        Dim da As MySqlDataAdapter = New MySqlDataAdapter()
        Dim cmd As MySqlCommand
        Dim parm As MySqlParameter

        ' Create the SelectCommand.
        cmd = New MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn)

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15)
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15)

        da.SelectCommand = cmd

        ' Create the UpdateCommand.
        cmd = New MySqlCommand("UPDATE mytable SET id=@id, name=@name WHERE id=@oldId", conn)

        cmd.Parameters.Add( "@id", MySqlDbType.VarChar, 15, "id" )
        cmd.Parameters.Add( "@name", MySqlDbType.VarChar, 15, "name" )

        parm = cmd.Parameters.Add("@oldId", MySqlDbType.VarChar, 15, "id")
        parm.SourceVersion = DataRowVersion.Original

        da.UpdateCommand = cmd

        Return da
        End Function
      </code>
      <code lang="C#">
        public static MySqlDataAdapter CreateCustomerAdapter(MySqlConnection conn)
        {
        MySqlDataAdapter da = new MySqlDataAdapter();
        MySqlCommand cmd;
        MySqlParameter parm;

        // Create the SelectCommand.
        cmd = new MySqlCommand("SELECT * FROM mytable WHERE id=@id AND name=@name", conn);

        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15);
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15);

        da.SelectCommand = cmd;

        // Create the UpdateCommand.
        cmd = new MySqlCommand("UPDATE mytable SET id=@id, name=@name WHERE id=@oldId", conn);
        cmd.Parameters.Add("@id", MySqlDbType.VarChar, 15, "id" );
        cmd.Parameters.Add("@name", MySqlDbType.VarChar, 15, "name" );

        parm = cmd.Parameters.Add( "@oldId", MySqlDbType.VarChar, 15, "id" );
        parm.SourceVersion = DataRowVersion.Original;

        da.UpdateCommand = cmd;

        return da;
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.OpenConnectionIfClosed(System.Data.DataRowState,System.Collections.Generic.List{MySql.Data.MySqlClient.MySqlConnection})">
            <summary>
            Open connection if it was closed.
            Necessary to workaround "connection must be open and valid" error
            with batched updates.
            </summary>
            <param name="state">Row state</param>
            <param name="openedConnections"> list of opened connections 
            If connection is opened by this function, the list is updated
            </param>
            <returns>true if connection was opened</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Overridden. See <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)"/>.
            </summary>
            <param name="dataRow"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Overridden. See <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)"/>.
            </summary>
            <param name="dataRow"></param>
            <param name="command"></param>
            <param name="statementType"></param>
            <param name="tableMapping"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            Overridden. Raises the RowUpdating event.
            </summary>
            <param name="value">A MySqlRowUpdatingEventArgs that contains the event data.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            Overridden. Raises the RowUpdated event.
            </summary>
            <param name="value">A MySqlRowUpdatedEventArgs that contains the event data. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataSet)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataSet">Dataset to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataTable)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataTable">Datatable to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataSet,System.String)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="srcTable">Source table</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataTable,System.Data.IDataReader)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataTable">Datatable to use</param>
            <param name="dataReader">DataReader to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataTable">DataTable to use</param>
            <param name="command">DbCommand to use</param>
            <param name="behavior">Command Behavior</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Int32,System.Int32,System.Data.DataTable[])">
            <summary>
            Async version of Fill
            </summary>
            <param name="startRecord">Start record</param>
            <param name="maxRecords">Max records</param>
            <param name="dataTables">DataTable[] to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataSet,System.Int32,System.Int32,System.String)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="startRecord">Start record</param>
            <param name="maxRecords">Max records</param>
            <param name="srcTable">Source table</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="srcTable">Source table</param>
            <param name="dataReader">DataReader to use</param>
            <param name="startRecord">Start record</param>
            <param name="maxRecords">Max records</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataTables">DataTable[] to use</param>
            <param name="startRecord">Start record</param>
            <param name="maxRecords">Max records</param>
            <param name="command">DbCommand to use</param>
            <param name="behavior">Command Behavior</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillAsync(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Async version of Fill
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="startRecord">Start record</param>
            <param name="maxRecords">Max records</param>
            <param name="srcTable">Source table</param>
            <param name="command">DbCommand to use</param>
            <param name="behavior">Command Behavior</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataSet,System.Data.SchemaType)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="schemaType">Schema Type</param>
            <returns>DataTable[]</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataSet,System.Data.SchemaType,System.String)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="schemaType">Schema Type</param>
            <param name="srcTable">Source Table</param>
            <returns>DataTable[]</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="schemaType">Schema Type</param>
            <param name="srcTable">Source Table</param>
            <param name="dataReader">DataReader to use</param>
            <returns>DataTable[]</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="schemaType">Schema Type</param>
            <param name="command">DBCommand to use</param>
            <param name="srcTable">Source Table</param>
            <param name="behavior">Command Behavior</param>
            <returns>DataTable[]</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataTable,System.Data.SchemaType)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataTable">DataTable to use</param>
            <param name="schemaType">Schema Type</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataTable">DataTable to use</param>
            <param name="schemaType">Schema Type</param>
            <param name="dataReader">DataReader to use</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.FillSchemaAsync(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
            <summary>
            Async version of FillSchema
            </summary>
            <param name="dataTable">DataTable to use</param>
            <param name="schemaType">Schema Type</param>
            <param name="command">DBCommand to use</param>
            <param name="behavior">Command Behavior</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateAsync(System.Data.DataRow[])">
            <summary>
            Async version of Update
            </summary>
            <param name="dataRows">DataRow[] to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateAsync(System.Data.DataSet)">
            <summary>
            Async version of Update
            </summary>
            <param name="dataSet">DataSet to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateAsync(System.Data.DataTable)">
            <summary>
            Async version of Update
            </summary>
            <param name="dataTable">DataTable to use</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateAsync(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
            <summary>
            Async version of Update
            </summary>
            <param name="dataRows">DataRow[] to use</param>
            <param name="tableMapping">Data Table Mapping</param>
            <returns>int</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlDataAdapter.UpdateAsync(System.Data.DataSet,System.String)">
            <summary>
            Async version of Update
            </summary>
            <param name="dataSet">DataSet to use</param>
            <param name="srcTable">Source Table</param>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlRowUpdatingEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdating"/> event of a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter"/>.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlRowUpdatedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:MySql.Data.MySqlClient.MySqlDataAdapter.RowUpdated"/> event of a <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter"/>.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlRowUpdatingEventArgs">
            <summary>
            Provides data for the RowUpdating event. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the MySqlRowUpdatingEventArgs class.
            </summary>
            <param name="row">The <see cref="T:System.Data.DataRow"/> to 
            <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/>.</param>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/>.</param>
            <param name="statementType">One of the <see cref="T:System.Data.StatementType"/> values that specifies the type of query executed.</param>
            <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping"/> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/>.</param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlRowUpdatingEventArgs.Command">
            <summary>
            Gets or sets the MySqlCommand to execute when performing the Update.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlRowUpdatedEventArgs">
            <summary>
            Provides data for the RowUpdated event. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the MySqlRowUpdatedEventArgs class.
            </summary>
            <param name="row">The <see cref="T:System.Data.DataRow"/> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/>.</param>
            <param name="command">The <see cref="T:System.Data.IDbCommand"/> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/> is called.</param>
            <param name="statementType">One of the <see cref="T:System.Data.StatementType"/> values that specifies the type of query executed.</param>
            <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping"/> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"/>.</param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlRowUpdatedEventArgs.Command">
            <summary>
            Gets or sets the MySqlCommand executed when Update is called.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
             <summary>
             Adds a new connection string with set of restricted keywords to the MySqlClientPermission object 
             </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="restrictions">Keywords to define the restrictions</param>
            <param name="behavior">KeyRestrictionBehavior to be used</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientPermission.Copy">
            <summary>
            Returns MySqlClientPermission as an IPermission
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.AuthenticationPluginConfigurationElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.InterceptorConfigurationElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.GenericConfigurationElementCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlHelper">
            <summary>
            Helper class that makes it easier to work with the provider.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataRowAsync(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteDataRow
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <param name="parms">Parameters to use for the command</param>
            <returns>DataRow containing the first row of the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataRow(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single SQL command and returns the first row of the resultset.  A new MySqlConnection object
            is created, opened, and closed during this method.
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <param name="parms">Parameters to use for the command</param>
            <returns>DataRow containing the first row of the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataset(System.String,System.String)">
            <summary>
            Executes a single SQL command and returns the resultset in a <see cref="T:System.Data.DataSet"/>.  
            A new MySqlConnection object is created, opened, and closed during this method.
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataset(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single SQL command and returns the resultset in a <see cref="T:System.Data.DataSet"/>.  
            A new MySqlConnection object is created, opened, and closed during this method.
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataset(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Executes a single SQL command and returns the resultset in a <see cref="T:System.Data.DataSet"/>.  
            The state of the <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object remains unchanged after execution
            of this method.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command to execute</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDataset(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single SQL command and returns the resultset in a <see cref="T:System.Data.DataSet"/>.  
            The state of the <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object remains unchanged after execution
            of this method.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command to execute</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.UpdateDataSet(System.String,System.String,System.Data.DataSet,System.String)">
            <summary>
            Updates the given table with data from the given <see cref="T:System.Data.DataSet"/>
            </summary>
            <param name="connectionString">Settings to use for the update</param>
            <param name="commandText">Command text to use for the update</param>
            <param name="ds"><see cref="T:System.Data.DataSet"/> containing the new data to use in the update</param>
            <param name="tablename">Tablename in the dataset to update</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDatasetAsync(System.String,System.String)">
            <summary>
            Async version of ExecuteDataset
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDatasetAsync(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteDataset
            </summary>
            <param name="connectionString">Settings to be used for the connection</param>
            <param name="commandText">Command to execute</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDatasetAsync(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Async version of ExecuteDataset
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command to execute</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteDatasetAsync(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteDataset
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command to execute</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns><see cref="T:System.Data.DataSet"/> containing the resultset</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.UpdateDataSetAsync(System.String,System.String,System.Data.DataSet,System.String)">
            <summary>
            Async version of UpdateDataset
            </summary>
            <param name="connectionString">Settings to use for the update</param>
            <param name="commandText">Command text to use for the update</param>
            <param name="ds"><see cref="T:System.Data.DataSet"/> containing the new data to use in the update</param>
            <param name="tablename">Tablename in the dataset to update</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteNonQuery(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single command against a MySQL database.  The <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> is assumed to be
            open when the method is called and remains open after the method completes.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">SQL command to be executed</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command.</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteNonQuery(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single command against a MySQL database.  A new <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> is created
            using the <see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString"/> given.
            </summary>
            <param name="connectionString"><see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString"/> to use</param>
            <param name="commandText">SQL command to be executed</param>
            <param name="parms">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command.</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReader(MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction,System.String,MySql.Data.MySqlClient.MySqlParameter[],System.Boolean)">
            <summary>
            Executes a single command against a MySQL database, possibly inside an existing transaction.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use for the command</param>
            <param name="transaction"><see cref="T:MySql.Data.MySqlClient.MySqlTransaction"/> object to use for the command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <param name="externalConn">True if the connection should be preserved, false if not</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReader(System.String,System.String)">
            <summary>
            Executes a single command against a MySQL database.
            </summary>
            <param name="connectionString">Settings to use for this command</param>
            <param name="commandText">Command text to use</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReader(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Executes a single command against a MySQL database.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use for the command</param>
            <param name="commandText">Command text to use</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReader(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single command against a MySQL database.
            </summary>
            <param name="connectionString">Settings to use for this command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReader(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Executes a single command against a MySQL database.
            </summary>
            <param name="connection">Connection to use for the command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalar(System.String,System.String)">
            <summary>
            Execute a single command against a MySQL database.
            </summary>
            <param name="connectionString">Settings to use for the update</param>
            <param name="commandText">Command text to use for the update</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalar(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Execute a single command against a MySQL database.
            </summary>
            <param name="connectionString">Settings to use for the command</param>
            <param name="commandText">Command text to use for the command</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalar(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Execute a single command against a MySQL database.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command text to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalar(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Execute a single command against a MySQL database.
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command text to use for the command</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.EscapeString(System.String)">
            <summary>
            Escapes the string.
            </summary>
            <param name="value">The string to escape</param>
            <returns>The string with all quotes escaped.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteNonQueryAsync(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteNonQuery
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">SQL command to be executed</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command.</param>
            <returns>Rows affected</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteNonQueryAsync(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteNonQuery
            </summary>
            <param name="connectionString"><see cref="P:MySql.Data.MySqlClient.MySqlConnection.ConnectionString"/> to use</param>
            <param name="commandText">SQL command to be executed</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command.</param>
            <returns>Rows affected</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReaderAsync(MySql.Data.MySqlClient.MySqlConnection,MySql.Data.MySqlClient.MySqlTransaction,System.String,MySql.Data.MySqlClient.MySqlParameter[],System.Boolean)">
            <summary>
            Async version of ExecuteReader
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use for the command</param>
            <param name="transaction"><see cref="T:MySql.Data.MySqlClient.MySqlTransaction"/> object to use for the command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <param name="ExternalConn">True if the connection should be preserved, false if not</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReaderAsync(System.String,System.String)">
            <summary>
            Async version of ExecuteReader
            </summary>
            <param name="connectionString">Settings to use for this command</param>
            <param name="commandText">Command text to use</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReaderAsync(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Async version of ExecuteReader
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use for the command</param>
            <param name="commandText">Command text to use</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReaderAsync(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteReader
            </summary>
            <param name="connectionString">Settings to use for this command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteReaderAsync(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteReader
            </summary>
            <param name="connection">Connection to use for the command</param>
            <param name="commandText">Command text to use</param>
            <param name="commandParameters">Array of <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> objects to use with the command</param>
            <returns><see cref="T:MySql.Data.MySqlClient.MySqlDataReader"/> object ready to read the results of the command</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalarAsync(System.String,System.String)">
            <summary>
            Async version of ExecuteScalar
            </summary>
            <param name="connectionString">Settings to use for the update</param>
            <param name="commandText">Command text to use for the update</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalarAsync(System.String,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteScalar
            </summary>
            <param name="connectionString">Settings to use for the command</param>
            <param name="commandText">Command text to use for the command</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalarAsync(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Async version of ExecuteScalar
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command text to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlHelper.ExecuteScalarAsync(MySql.Data.MySqlClient.MySqlConnection,System.String,MySql.Data.MySqlClient.MySqlParameter[])">
            <summary>
            Async version of ExecuteScalar
            </summary>
            <param name="connection"><see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object to use</param>
            <param name="commandText">Command text to use for the command</param>
            <param name="commandParameters">Parameters to use for the command</param>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlParameter">
            <summary>
            Represents a parameter to a <see cref="T:MySql.Data.MySqlClient.MySqlCommand"/>, This class cannot be inherited.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.SourceVersion">
            <summary>
            Gets or sets the <see cref="T:System.Data.DataRowVersion"/> to use when loading <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/>.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.#ctor(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> class with the parameter name, the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/>, the size, and the source column name.
            </summary>
            <param name="parameterName">The name of the parameter to map. </param>
            <param name="dbType">One of the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/> values. </param>
            <param name="size">The length of the parameter. </param>
            <param name="sourceColumn">The name of the source column. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> class with the parameter name and a value of the new MySqlParameter.
            </summary>
            <param name="parameterName">The name of the parameter to map. </param>
            <param name="value">An <see cref="T:System.Object"/> that is the value of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/>. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.#ctor(System.String,MySql.Data.MySqlClient.MySqlDbType)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> class with the parameter name and the data type.
            </summary>
            <param name="parameterName">The name of the parameter to map. </param>
            <param name="dbType">One of the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/> values. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.#ctor(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> class with the parameter name, the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/>, and the size.
            </summary>
            <param name="parameterName">The name of the parameter to map. </param>
            <param name="dbType">One of the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/> values. </param>
            <param name="size">The length of the parameter. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.#ctor(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> class with the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"/>, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion"/> to use, and the value of the parameter.
            </summary>
            <param name="parameterName">The name of the parameter to map. </param>
            <param name="dbType">One of the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/> values. </param>
            <param name="size">The length of the parameter. </param>
            <param name="direction">One of the <see cref="T:System.Data.ParameterDirection"/> values. </param>
            <param name="isNullable">true if the value of the field can be null, otherwise false. </param>
            <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/> is resolved.</param>
            <param name="scale">The total number of decimal places to which <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/> is resolved. </param>
            <param name="sourceColumn">The name of the source column. </param>
            <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion"/> values. </param>
            <param name="value">An <see cref="T:System.Object"/> that is the value of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/>. </param>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.Direction">
            <summary>
            Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
            As of MySql version 4.1 and earlier, input-only is the only valid choice.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.IsNullable">
            <summary>
            Gets or sets a value indicating whether the parameter accepts null values.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType">
            <summary>
            Gets or sets the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.MySqlDbType"/> of the parameter.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.Precision">
            <summary>
            Gets or sets the maximum number of digits used to represent the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/> property.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.Scale">
            <summary>
            Gets or sets the number of decimal places to which <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/> is resolved.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.Size">
            <summary>
            Gets or sets the maximum size, in bytes, of the data within the column.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.PossibleValues">
            <summary>
            Returns the possible values for this parameter if this parameter is of type
            SET or ENUM.  Returns null otherwise.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.SourceColumn">
            <summary>
            Gets or sets the name of the source column that is mapped to the <see cref="T:System.Data.DataSet"/> and used for loading or returning the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/>.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.SourceColumnNullMapping">
            <summary>
            Sets or gets a value which indicates whether the source column is nullable. 
            This allows <see cref="T:System.Data.Common.DbCommandBuilder"/> to correctly generate Update statements 
            for nullable columns. 
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameter.DbType">
            <summary>
            Gets or sets the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.DbType"/> of the parameter.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.ToString">
            <summary>
            Overridden. Gets a string containing the <see cref="P:MySql.Data.MySqlClient.MySqlParameter.ParameterName"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameter.ResetDbType">
            <summary>
            Resets the <b>DbType</b> property to its original settings. 
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlParameterCollection">
            <summary>
            Represents a collection of parameters relevant to a <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> as well as their respective mappings to columns in a <see cref="T:System.Data.DataSet" />. This class cannot be inherited.
            </summary>
            <remarks>
      The number of the parameters in the collection must be equal to the number of
      parameter placeholders within the command text, or an exception will be generated.
    </remarks><example>
      The following example creates multiple instances of <see cref="T:MySql.Data.MySqlClient.MySqlParameter" />
      through the <B>MySqlParameterCollection</B> collection within the <see cref="T:MySql.Data.MySqlClient.MySqlDataAdapter" />.
      These parameters are used to select data within the data source and place the data in
      the <see cref="T:System.Data.DataSet" />. This code assumes that a <B>DataSet</B> and a <B>MySqlDataAdapter</B>
      have already been created with the appropriate schema, commands, and connection.
      <code lang="vbnet">
        Public Sub AddParameters()
        ' ...
        ' create myDataSet and myDataAdapter
        ' ...
        myDataAdapter.SelectCommand.Parameters.Add("@CategoryName", MySqlDbType.VarChar, 80).Value = "toasters"
        myDataAdapter.SelectCommand.Parameters.Add("@SerialNum", MySqlDbType.Long).Value = 239

        myDataAdapter.Fill(myDataSet)
        End Sub 'AddSqlParameters
      </code>
      <code lang="C#">
        public void AddSqlParameters()
        {
        // ...
        // create myDataSet and myDataAdapter
        // ...

        myDataAdapter.SelectCommand.Parameters.Add("@CategoryName", MySqlDbType.VarChar, 80).Value = "toasters";
        myDataAdapter.SelectCommand.Parameters.Add("@SerialNum", MySqlDbType.Long).Value = 239;
        myDataAdapter.Fill(myDataSet);

        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.IsFixedSize">
            <summary>
            Gets a value that indicates whether the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>
            has a fixed size. 
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.IsReadOnly">
            <summary>
            Gets a value that indicates whether the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>
            is read-only. 
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.IsSynchronized">
            <summary>
            Gets a value that indicates whether the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>
            is synchronized. 
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.Count">
            <summary>
            Gets the number of MySqlParameter objects in the collection.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> at the specified index.
            </summary>
            <overloads>Gets the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> with a specified attribute.
            [C#] In C#, this property is the indexer for the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/> class.
            </overloads>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> with the specified name.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.String)">
            <summary>
            Adds a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/> with the parameter name, the data type, the column length, and the source column name.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType"/> values. </param>
            <param name="size">The length of the column.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <returns>The newly added <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(MySql.Data.MySqlClient.MySqlParameter)">
            <summary>
            Adds the specified <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to add to the collection.</param>
            <returns>The newly added <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/> given the specified parameter name and value.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The <see cref="P:MySql.Data.MySqlClient.MySqlParameter.Value"/> of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to add to the collection.</param>
            <returns>The newly added <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(System.String,MySql.Data.MySqlClient.MySqlDbType)">
            <summary>
            Adds a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/> given the parameter name and the data type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType"/> values. </param>
            <returns>The newly added <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32)">
            <summary>
            Adds a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/> with the parameter name, the data type, and the column length.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType"/> values. </param>
            <param name="size">The length of the column.</param>
            <returns>The newly added <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.IndexOf(System.String)">
            <summary>
            Gets the location of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> in the collection with a specific parameter name.
            </summary>
            <param name="parameterName">The name of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to retrieve. </param>
            <returns>The zero-based location of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> in the collection.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.IndexOf(System.Object)">
            <summary>
            Gets the location of a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> in the collection.
            </summary>
            <param name="value">The <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to locate. </param>
            <returns>The zero-based location of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> in the collection.</returns>
            <overloads>Gets the location of a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> in the collection.</overloads>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.AdjustHashes(System.Int32,System.Boolean)">
            <summary>
            This method will update all the items in the index hashes when
            we insert a parameter somewhere in the middle
            </summary>
            <param name="keyIndex"></param>
            <param name="addEntry"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of values to the end of the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>. 
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.GetParameter(System.String)">
            <summary>
            Retrieve the parameter with the given name.
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Add(System.Object)">
            <summary>
            Adds the specified <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> to add to the collection.</param>
            <returns>The index of the new <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Contains(System.String)">
            <summary>
            Gets a value indicating whether a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> with the specified parameter name exists in the collection.
            </summary>
            <param name="parameterName">The name of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to find.</param>
            <returns>true if the collection contains the parameter; otherwise, false.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Contains(System.Object)">
            <summary>
            Gets a value indicating whether a MySqlParameter exists in the collection.
            </summary>
            <param name="value">The value of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to find. </param>
            <returns>true if the collection contains the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object; otherwise, false.</returns>
            <overloads>Gets a value indicating whether a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> exists in the collection.</overloads>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies MySqlParameter objects from the MySqlParameterCollection to the specified array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a MySqlParameter into the collection at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.Remove(System.Object)">
            <summary>
            Removes the specified MySqlParameter from the collection.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.RemoveAt(System.String)">
            <summary>
            Removes the specified <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> from the collection using the parameter name.
            </summary>
            <param name="parameterName">The name of the <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> object to retrieve. </param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> from the collection using a specific index.
            </summary>
            <param name="index">The zero-based index of the parameter. </param>
            <overloads>Removes the specified <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/> from the collection.</overloads>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlParameterCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the 
            <see cref="T:MySql.Data.MySqlClient.MySqlParameterCollection"/>. 
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlTransactionScope">
            <summary>
            Represents a single(not nested) TransactionScope
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.BaseCommandInterceptor">
            <summary>
            BaseCommandInterceptor is the base class that should be used for all userland 
            command interceptors
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.CommandInterceptor">
            <summary>
            CommandInterceptor is the "manager" class that keeps the list of registered interceptors
            for the given connection.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Interceptors.BaseExceptionInterceptor">
            <summary>
            BaseExceptionInterceptor is the base class that should be used for all userland 
            exception interceptors
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Interceptors.StandardExceptionInterceptor">
            <summary>
            StandardExceptionInterceptor is the standard interceptor that simply throws the exception.
            It is the default action.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Interceptors.ExceptionInterceptor">
            <summary>
            ExceptionInterceptor is the "manager" class that keeps the list of registered interceptors
            for the given connection.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Interceptor">
            <summary>
            Interceptor is the base class for the "manager" classes such as ExceptionInterceptor,
            CommandInterceptor, etc
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.ISSchemaProvider.GetProcedures(System.String[])">
            <summary>
            Return schema information about procedures and functions
            Restrictions supported are:
            schema, name, type
            </summary>
            <param name="restrictions"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.ISSchemaProvider.GetProcedureParameters(System.String[],MySql.Data.MySqlClient.MySqlSchemaCollection)">
            <summary>
            Return schema information about parameters for procedures and functions
            Restrictions supported are:
            schema, name, type, parameter name
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.ISSchemaProvider.InitParameterRow(MySql.Data.MySqlClient.MySqlSchemaRow,MySql.Data.MySqlClient.MySqlSchemaRow)">
            <summary>
            Initializes a new row for the procedure parameters table.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.ISSchemaProvider.ParseDataType(MySql.Data.MySqlClient.MySqlSchemaRow,MySql.Data.Common.MySqlTokenizer)">
            <summary>
             Parses out the elements of a procedure parameter data type.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Memcached.BinaryClient">
            <summary>
            Implementation of memcached binary client protocol.
            </summary>
            <remarks>According to http://code.google.com/p/memcached/wiki/BinaryProtocolRevamped </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.SendCommand(System.Byte,System.Byte,System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            Sends an store command (add, replace, set).
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expiration"></param>
            <param name="hasExtra"></param> 
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.SendCommand(System.Byte,System.Byte,System.String,System.String@)">
            <summary>
            Sends a get command.
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.SendCommand(System.Byte,System.Byte,System.String)">
            <summary>
            Sends a delete command.
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>
            <param name="key"></param>    
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.SendCommand(System.Byte,System.Byte,System.TimeSpan)">
            <summary>
            Sends a command without args (like flush).
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>    
            <param name="expiration"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.SendCommand(System.Byte,System.Byte,System.String,System.Int32)">
            <summary>
            Sends a command with amount (INCR/DECR)
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>
            <param name="key"></param>
            <param name="amount"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.BinaryClient.EncodeStoreCommand(System.Byte,System.Byte,System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            Encodes in the binary protocol the a command of the kind set, add or replace.
            </summary>
            <param name="magic"></param>
            <param name="opcode"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expiration"></param>
            <param name="hasExtra">If true applies to set, add or replace commands; if false applies to append and prepend commands.</param>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.Memcached.Client">
            <summary>
            An interface of the client memcached protocol. This class is abstract for 
            implementation of the Memcached client interface see <see cref="T:MySql.Data.MySqlClient.Memcached.TextClient"/> for the 
            text protocol version and <see cref="T:MySql.Data.MySqlClient.Memcached.BinaryClient"/> for the binary protocol version.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.Client.port">
            <summary>
            The port used by the connection.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.Client.server">
            <summary>
            The server DNS or IP address used by the connection.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.Client.stream">
            <summary>
            The network stream used by the connecition.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.GetInstance(System.String,System.UInt32,MySql.Data.MySqlClient.Memcached.MemcachedFlags)">
            <summary>
            Factory method for creating  instances of <see cref="T:MySql.Data.MySqlClient.Memcached.Client"/> that implement a connection with the requested features.
            The connection object returned must be explicitely opened see method <see cref="M:MySql.Data.MySqlClient.Memcached.Client.Open"/>.
            </summary>
            <param name="server">The Memcached server DNS or IP address.</param>
            <param name="port">The port for the Memcached server</param>
            <param name="flags">A set of flags indicating characterestics requested.</param>
            <returns>An instance of a client connection ready to be used.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Open">
            <summary>
            Opens the client connection.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Close">
            <summary>
            Closes the client connection.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            Adds a new key/value pair with the given TimeSpan expiration.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to associate with the key.</param>
            <param name="expiration">The interval of timespan, use TimeSpan.Zero for no expiration.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Append(System.String,System.Object)">
            <summary>
            Appens the data to the existing data for the associated key.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to append with the data associated with the key.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Cas(System.String,System.Object,System.TimeSpan,System.UInt64)">
            <summary>
            Executes the Check-and-set Memcached operation.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to use in the CAS.</param>
            <param name="expiration">The interval of timespan, use TimeSpan.Zero for no expiration.</param>
            <param name="casUnique">The CAS unique value to use.</param>
            <exception cref="T:MySql.Data.MySqlClient.Memcached.MemcachedException"></exception>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Decrement(System.String,System.Int32)">
            <summary>
            Decrements the value associated with a key by the given amount.
            </summary>
            <param name="key">The key associated with the value to decrement.</param>
            <param name="amount">The amount to decrement the value.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Delete(System.String)">
            <summary>
            Removes they pair key/value given the specified key.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.FlushAll(System.TimeSpan)">
            <summary>
            Removes all entries from the storage, effectively invalidating the whole cache.
            </summary>
            <param name="delay">The interval after which the cache will be cleaned. Can be TimeSpan.Zero for immediately.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Get(System.String)">
            <summary>
            Get the key/value pair associated with a given key.
            </summary>
            <param name="key">The key for which to returm the key/value.</param>
            <returns>The key/value associated with the key or a MemcachedException if it does not exists.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Increment(System.String,System.Int32)">
            <summary>
            Increments the value associated with a key by the given amount.
            </summary>
            <param name="key">The key associated with the value to increment.</param>
            <param name="amount">The amount to increment the value.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Prepend(System.String,System.Object)">
            <summary>
            Prepends the data to the existing data for the associated key.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to append with the data associated with the key.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Replace(System.String,System.Object,System.TimeSpan)">
            <summary>
            Replaces the value associated with the given key with another value.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to replace the value associated with the key.</param>
            <param name="expiration">The interval of timespan, use TimeSpan.Zero for no expiration.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.Client.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            Set the value of a given key.
            </summary>
            <param name="key">The key for identifying the entry.</param>
            <param name="data">The data to associate with the given key.</param>
            <param name="expiration">The interval of timespan, use TimeSpan.Zero for no expiration.</param>
        </member>
        <member name="T:MySql.Data.MySqlClient.Memcached.MemcachedFlags">
            <summary>
            A set of flags for requesting new instances of connections
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.MemcachedFlags.TextProtocol">
            <summary>
            Requests a connection implememting the text protocol.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.MemcachedFlags.BinaryProtocol">
            <summary>
            Requests a connection implementing the binary protocol.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.Memcached.MemcachedFlags.Tcp">
            <summary>
            Requests a TCP connection. Currently UDP is not supported.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Memcached.MemcachedException">
            <summary>
            The base exception class for all Memcached exceptions.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Memcached.TextClient">
            <summary>
            Implementation of the Memcached text client protocol.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.String,System.Object,System.TimeSpan,System.UInt64)">
            <summary>
            Sends a command to the memcached server.
            </summary>
            <param name="cmd"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expiration"></param>
            <param name="casUnique"></param>
            <remarks>This version is for commands that take a key, data, expiration and casUnique.</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.String,System.Object,System.TimeSpan)">
            <summary>
            Sends a command to the memcached server.
            </summary>
            <param name="cmd"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expiration"></param>
            <remarks>This version is for commands that take a key, data and expiration</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.String,System.Object)">
            <summary>
            Send a command to memcached server.
            </summary>
            <param name="cmd"></param>
            <param name="key"></param>
            <param name="data"></param>    
            <remarks>This version is for commands that don't need flags neither expiration fields.</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.String)">
            <summary>
            Sends a command to the server.
            </summary>
            <param name="cmd"></param>
            <param name="key"></param>
            <remarks>This version is for commands that only require a key</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.String,System.Int32)">
            <summary>
            Sends a command to the server.
            </summary>
            <param name="cmd"></param>
            <param name="key"></param>
            <param name="amount"></param>
            <remarks>This version is for commands that only require a key and an integer value.</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.Memcached.TextClient.SendCommand(System.String,System.TimeSpan)">
            <summary>
            Sends a command to the server.
            </summary>
            <param name="cmd"></param>
            <param name="expiration"></param>
            <remarks>This version is for commands that only require a key and expiration.</remarks>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlClientFactory">
            <summary>
            Represents a set of methods for creating instances of the MySQL client implementation of the data source classes.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlClientFactory.Instance">
            <summary>
            Gets an instance of the <see cref="T:MySql.Data.MySqlClient.MySqlClientFactory"/>. 
            This can be used to retrieve strongly typed data objects. 
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientFactory.CreateCommand">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbCommand"/> instance. 
            </summary>
            <returns>A new strongly typed instance of <b>DbCommand</b>.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientFactory.CreateConnection">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnection"/> instance. 
            </summary>
            <returns>A new strongly typed instance of <b>DbConnection</b>.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientFactory.CreateParameter">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbParameter"/> instance. 
            </summary>
            <returns>A new strongly typed instance of <b>DbParameter</b>.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlClientFactory.CreateConnectionStringBuilder">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnectionStringBuilder"/> instance. 
            </summary>
            <returns>A new strongly typed instance of <b>DbConnectionStringBuilder</b>.</returns>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlClientFactory.DbServicesType">
            <summary>
            Provide a simple caching layer
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Server">
            <summary>
            Gets or sets the name of the server.
            </summary>
            <value>The server.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Database">
            <summary>
            Gets or sets the name of the database the connection should 
            initially connect to.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ConnectionProtocol">
            <summary>
            Gets or sets the protocol that should be used for communicating
            with MySQL.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.PipeName">
            <summary>
            Gets or sets the name of the named pipe that should be used
            for communicating with MySQL.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.UseCompression">
            <summary>
            Gets or sets a boolean value that indicates whether this connection
            should use compression.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.AllowBatch">
            <summary>
            Gets or sets a boolean value that indicates whether this connection will allow
            commands to send multiple SQL statements in one execution.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Logging">
            <summary>
            Gets or sets a boolean value that indicates whether logging is enabled.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.SharedMemoryName">
            <summary>
            Gets or sets the base name of the shared memory objects used to 
            communicate with MySQL when the shared memory protocol is being used.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Port">
            <summary>
            Gets or sets the port number that is used when the socket
            protocol is being used.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ConnectionTimeout">
            <summary>
            Gets or sets the connection timeout.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.DefaultCommandTimeout">
            <summary>
            Gets or sets the default command timeout.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.UserID">
            <summary>
            Gets or sets the user id that should be used to connect with.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Password">
            <summary>
            Gets or sets the password that should be used to make a connection.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.PersistSecurityInfo">
            <summary>
            Gets or sets a boolean value that indicates if the password should be persisted
            in the connection string.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.AllowZeroDateTime">
            <summary>
            Gets or sets a boolean value that indicates if zero date time values are supported.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ConvertZeroDateTime">
            <summary>
            Gets or sets a boolean value indicating if zero datetime values should be 
            converted to DateTime.MinValue.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.UseUsageAdvisor">
            <summary>
            Gets or sets a boolean value indicating if the Usage Advisor should be enabled.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ProcedureCacheSize">
            <summary>
            Gets or sets the size of the stored procedure cache.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.UsePerformanceMonitor">
            <summary>
            Gets or sets a boolean value indicating if the permon hooks should be enabled.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.IgnorePrepare">
            <summary>
            Gets or sets a boolean value indicating if calls to Prepare() should be ignored.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ConnectionLifeTime">
            <summary>
            Gets or sets the lifetime of a pooled connection.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.Pooling">
            <summary>
            Gets or sets a boolean value indicating if connection pooling is enabled.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.MinimumPoolSize">
            <summary>
            Gets the minimum connection pool size.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.MaximumPoolSize">
            <summary>
            Gets or sets the maximum connection pool setting.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.ConnectionReset">
            <summary>
            Gets or sets a boolean value indicating if the connection should be reset when retrieved
            from the pool.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.CharacterSet">
            <summary>
            Gets or sets the character set that should be used for sending queries to the server.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.TreatBlobsAsUTF8">
            <summary>
            Indicates whether the driver should treat binary blobs as UTF8
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.BlobAsUTF8IncludePattern">
            <summary>
            Gets or sets the pattern that matches the columns that should be treated as UTF8
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.BlobAsUTF8ExcludePattern">
            <summary>
            Gets or sets the pattern that matches the columns that should not be treated as UTF8
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlConnectionStringBuilder.SslMode">
            <summary>
            Indicates whether to use SSL connections and how to handle server certificate errors.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.ClientFlags">
            <summary>
            Summary description for ClientParam.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.DBCmd">
            <summary>
            DB Operations Code
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlDbType">
            <summary>
            Specifies MySQL specific data type of a field, property, for use in a <see cref="T:MySql.Data.MySqlClient.MySqlParameter"/>.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Decimal">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Decimal"/>
            <para>A fixed precision and scale numeric value between -1038 
            -1 and 10 38 -1.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Byte">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Byte"/><para>The signed range is -128 to 127. The unsigned 
            range is 0 to 255.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Int16">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Int16"/><para>A 16-bit signed integer. The signed range is 
            -32768 to 32767. The unsigned range is 0 to 65535</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Int24">
            <summary>
            Specifies a 24 (3 byte) signed or unsigned value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Int32">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Int32"/><para>A 32-bit signed integer</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Int64">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Int64"/><para>A 64-bit signed integer.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Float">
            <summary>
            <see cref="T:System.Single"/><para>A small (single-precision) floating-point 
            number. Allowable values are -3.402823466E+38 to -1.175494351E-38, 
            0, and 1.175494351E-38 to 3.402823466E+38.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Double">
            <summary>
            <see cref="F:MySql.Data.MySqlClient.MySqlDbType.Double"/><para>A normal-size (double-precision) 
            floating-point number. Allowable values are -1.7976931348623157E+308 
            to -2.2250738585072014E-308, 0, and 2.2250738585072014E-308 to 
            1.7976931348623157E+308.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Timestamp">
            <summary>
            A timestamp. The range is '1970-01-01 00:00:00' to sometime in the 
            year 2037
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Date">
            <summary>
            Date The supported range is '1000-01-01' to '9999-12-31'.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Time">
            <summary>
            Time <para>The range is '-838:59:59' to '838:59:59'.</para>
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.DateTime">
            <summary>
            DateTime The supported range is '1000-01-01 00:00:00' to 
            '9999-12-31 23:59:59'.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Datetime">
            <summary>
            Datetime The supported range is '1000-01-01 00:00:00' to 
            '9999-12-31 23:59:59'.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Year">
            <summary>
            A year in 2- or 4-digit format (default is 4-digit). The 
            allowable values are 1901 to 2155, 0000 in the 4-digit year 
            format, and 1970-2069 if you use the 2-digit format (70-69).
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Newdate">
            <summary>
            <b>Obsolete</b>  Use Datetime or Date type
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.VarString">
            <summary>
            A variable-length string containing 0 to 65535 characters
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Bit">
            <summary>
            Bit-field data type
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.JSON">
            <summary>
            JSON
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.NewDecimal">
            <summary>
            New Decimal
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Enum">
            <summary>
            An enumeration. A string object that can have only one value, 
            chosen from the list of values 'value1', 'value2', ..., NULL 
            or the special "" error value. An ENUM can have a maximum of 
            65535 distinct values
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Set">
            <summary>
            A set. A string object that can have zero or more values, each 
            of which must be chosen from the list of values 'value1', 'value2', 
            ... A SET can have a maximum of 64 members.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.TinyBlob">
            <summary>
            A binary column with a maximum length of 255 (2^8 - 1) 
            characters
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.MediumBlob">
            <summary>
            A binary column with a maximum length of 16777215 (2^24 - 1) bytes.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.LongBlob">
            <summary>
            A binary column with a maximum length of 4294967295 or 
            4G (2^32 - 1) bytes.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Blob">
            <summary>
            A binary column with a maximum length of 65535 (2^16 - 1) bytes.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.VarChar">
            <summary>
            A variable-length string containing 0 to 255 bytes.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.String">
            <summary>
            A fixed-length string.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Geometry">
            <summary>
            Geometric (GIS) data type.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.UByte">
            <summary>
            Unsigned 8-bit value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.UInt16">
            <summary>
            Unsigned 16-bit value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.UInt24">
            <summary>
            Unsigned 24-bit value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.UInt32">
            <summary>
            Unsigned 32-bit value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.UInt64">
            <summary>
            Unsigned 64-bit value.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Binary">
            <summary>
            Fixed length binary string.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.VarBinary">
            <summary>
            Variable length binary string.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.TinyText">
            <summary>
            A text column with a maximum length of 255 (2^8 - 1) characters.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.MediumText">
            <summary>
            A text column with a maximum length of 16777215 (2^24 - 1) characters.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.LongText">
            <summary>
            A text column with a maximum length of 4294967295 or 
            4G (2^32 - 1) characters.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Text">
            <summary>
            A text column with a maximum length of 65535 (2^16 - 1) characters.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDbType.Guid">
            <summary>
            A guid column
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlConnectionProtocol">
            <summary>
            Allows the user to specify the type of connection that should
            be used.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlConnectionProtocol.Sockets">
            <summary>
            TCP/IP style connection.  Works everywhere.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlConnectionProtocol.Pipe">
            <summary>
            Named pipe connection.  Works only on Windows systems.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlConnectionProtocol.UnixSocket">
            <summary>
            Unix domain socket connection.  Works only with Unix systems.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlConnectionProtocol.SharedMemory">
            <summary>
            Shared memory connection.  Currently works only with Windows systems.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlSslMode">
            <summary>
            SSL options for connection.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlSslMode.None">
            <summary>
            Do not use SSL.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlSslMode.Preferred">
            <summary>
            Use SSL, if server supports it.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlSslMode.Required">
            <summary>
            Always use SSL. Deny connection if server does not support SSL.
            Do not perform server certificate validation. 
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlSslMode.VerifyCA">
            <summary>
            Always use SSL. Validate server SSL certificate, but different host name mismatch.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlSslMode.VerifyFull">
            <summary>
            Always use SSL and perform full certificate validation.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlDriverType">
            <summary>
            Specifies the connection types supported
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDriverType.Native">
            <summary>
            Use TCP/IP sockets.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDriverType.Client">
            <summary>
            Use client library.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlDriverType.Embedded">
            <summary>
            Use MySQL embedded server.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlCertificateStoreLocation.None">
            <summary>
            Do not use certificate store
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlCertificateStoreLocation.CurrentUser">
            <summary>
            Use certificate store for the current user
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlCertificateStoreLocation.LocalMachine">
            <summary>
            User certificate store for the machine
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlError">
            <summary>
            Collection of error codes that can be returned by the server
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlError.#ctor(System.String,System.Int32,System.String)">
            <summary></summary>
            <param name="level"></param>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlError.Level">
            <summary>
            Error level
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlError.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlErrorCode">
            <summary>
            Provides a reference to error codes returned by MySQL.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.HashCheck">
            <summary></summary>
            <remarks>ER_HASHCHK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ISAMCheck">
            <summary></summary>
            <remarks>ER_NISAMCHK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.No">
            <summary></summary>
            <remarks>ER_NO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.Yes">
            <summary></summary>
            <remarks>ER_YES</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateFile">
            <summary>The file couldn't be created.</summary>
            <remarks>ER_CANT_CREATE_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateTable">
            <summary>The table couldn't be created.</summary>
            <remarks>ER_CANT_CREATE_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateDatabase">
            <summary>The database couldn't be created.</summary>
            <remarks>ER_CANT_CREATE_DB</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseCreateExists">
            <summary>The database couldn't be created, it already exists.</summary>
            <remarks>ER_DB_CREATE_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseDropExists">
            <summary>The database couldn't be dropped, it doesn't exist.</summary>
            <remarks>ER_DB_DROP_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseDropDelete">
            <summary>The database couldn't be dropped, the file can't be deleted.</summary>
            <remarks>ER_DB_DROP_DELETE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseDropRemoveDir">
            <summary>The database couldn't be dropped, the directory can't be deleted.</summary>
            <remarks>ER_DB_DROP_RMDIR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotDeleteFile">
            <summary>The file couldn't be deleted.</summary>
            <remarks>ER_CANT_DELETE_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotFindSystemRecord">
            <summary>The record couldn't be read from the system table.</summary>
            <remarks>ER_CANT_FIND_SYSTEM_REC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotGetStatus">
            <summary>The status couldn't be retrieved.</summary>
            <remarks>ER_CANT_GET_STAT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotGetWorkingDirectory">
            <summary>The working directory couldn't be retrieved.</summary>
            <remarks>ER_CANT_GET_WD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotLock">
            <summary>The file couldn't be locked.</summary>
            <remarks>ER_CANT_LOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotOpenFile">
            <summary>The file couldn't be opened.</summary>
            <remarks>ER_CANT_OPEN_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileNotFound">
            <summary>The file couldn't be found.</summary>
            <remarks>ER_FILE_NOT_FOUND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotReadDirectory">
            <summary>The directory couldn't be read.</summary>
            <remarks>ER_CANT_READ_DIR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotSetWorkingDirectory">
            <summary>The working directory couldn't be entered.</summary>
            <remarks>ER_CANT_SET_WD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CheckRead">
            <summary>The record changed since it was last read.</summary>
            <remarks>ER_CHECKREAD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DiskFull">
            <summary>The disk is full.</summary>
            <remarks>ER_DISK_FULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateKey">
            <summary>
            There is already a key with the given values.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorOnClose">
            <summary>An error occurred when closing the file.</summary>
            <remarks>ER_ERROR_ON_CLOSE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorOnRead">
            <summary>An error occurred when reading from the file.</summary>
            <remarks>ER_ERROR_ON_READ</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorOnRename">
            <summary>An error occurred when renaming then file.</summary>
            <remarks>ER_ERROR_ON_RENAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorOnWrite">
            <summary>An error occurred when writing to the file.</summary>
            <remarks>ER_ERROR_ON_WRITE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileUsed">
            <summary>The file is in use.</summary>
            <remarks>ER_FILE_USED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileSortAborted">
            <summary>Sorting has been aborted.</summary>
            <remarks>ER_FILSORT_ABORT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FormNotFound">
            <summary>The view doesn't exist.</summary>
            <remarks>ER_FORM_NOT_FOUND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GetErrorNumber">
            <summary>Got the specified error from the table storage engine.</summary>
            <remarks>ER_GET_ERRNO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IllegalHA">
            <summary>The table storage engine doesn't support the specified option.</summary>
            <remarks>ER_ILLEGAL_HA</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KeyNotFound">
            <summary>
            The specified key was not found.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotFormFile">
            <summary>The file contains incorrect information.</summary>
            <remarks>ER_NOT_FORM_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotKeyFile">
            <summary>The key file is incorrect for the table, it should be repaired.</summary>
            <remarks>ER_NOT_KEYFILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OldKeyFile">
            <summary>The key file is old for the table, it should be repaired.</summary>
            <remarks>ER_OLD_KEYFILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OpenAsReadOnly">
            <summary>The table is read-only</summary>
            <remarks>ER_OPEN_AS_READONLY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OutOfMemory">
            <summary>The server is out of memory, it should be restarted.</summary>
            <remarks>ER_OUTOFMEMORY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OutOfSortMemory">
            <summary>The server is out of sort-memory, the sort buffer size should be increased.</summary>
            <remarks>ER_OUT_OF_SORTMEMORY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnexepectedEOF">
            <summary>An unexpected EOF was found when reading from the file.</summary>
            <remarks>ER_UNEXPECTED_EOF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConnectionCountError">
            <summary>Too many connections are open.</summary>
            <remarks>ER_CON_COUNT_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OutOfResources">
            <summary>The server is out of resources, check if MySql or some other process is using all available memory.</summary>
            <remarks>ER_OUT_OF_RESOURCES</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnableToConnectToHost">
            <summary>
            Given when the connection is unable to successfully connect to host.
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.HandshakeError">
            <summary>The handshake was invalid.</summary>
            <remarks>ER_HANDSHAKE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseAccessDenied">
            <summary>Access was denied for the specified user using the specified database.</summary>
            <remarks>ER_DBACCESS_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AccessDenied">
            <summary>
            Normally returned when an incorrect password is given
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoDatabaseSelected">
            <summary>No database has been selected.</summary>
            <remarks>ER_NO_DB_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownCommand">
            <summary>The command is unknown.</summary>
            <remarks>ER_UNKNOWN_COM_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ColumnCannotBeNull">
            <summary>The specified column cannot be NULL.</summary>
            <remarks>ER_BAD_NULL_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownDatabase">
            <summary>The specified database is not known.</summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableExists">
            <summary>The specified table already exists.</summary>
            <remarks>ER_TABLE_EXISTS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadTable">
            <summary>The specified table is unknown.</summary>
            <remarks>ER_BAD_TABLE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonUnique">
            <summary>The specified column is ambiguous.</summary>
            <remarks>ER_NON_UNIQ_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ServerShutdown">
            <summary>The server is currently being shutdown.</summary>
            <remarks>ER_SERVER_SHUTDOWN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadFieldError">
            <summary>The specified columns is unknown.</summary>
            <remarks>ER_BAD_FIELD_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongFieldWithGroup">
            <summary>The specified column isn't in GROUP BY.</summary>
            <remarks>ER_WRONG_FIELD_WITH_GROUP</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongGroupField">
            <summary>The specified columns cannot be grouped on.</summary>
            <remarks>ER_WRONG_GROUP_FIELD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongSumSelected">
            <summary>There are sum functions and columns in the same statement.</summary>
            <remarks>ER_WRONG_SUM_SELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongValueCount">
            <summary>The column count doesn't match the value count.</summary>
            <remarks>ER_WRONG_VALUE_COUNT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongIdentifier">
            <summary>The identifier name is too long.</summary>
            <remarks>ER_TOO_LONG_IDENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateFieldName">
            <summary>The column name is duplicated.</summary>
            <remarks>ER_DUP_FIELDNAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateKeyName">
            <summary>
            Duplicate Key Name
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateKeyEntry">
            <summary>
            Duplicate Key Entry
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongFieldSpecifier">
            <summary>The column specifier is incorrect.</summary>
            <remarks>ER_WRONG_FIELD_SPEC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ParseError">
            <summary>An error occurred when parsing the statement.</summary>
            <remarks>ER_PARSE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EmptyQuery">
            <summary>The statement is empty.</summary>
            <remarks>ER_EMPTY_QUERY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonUniqueTable">
            <summary>The table alias isn't unique.</summary>
            <remarks>ER_NONUNIQ_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InvalidDefault">
            <summary>The default value is invalid for the specified field.</summary>
            <remarks>ER_INVALID_DEFAULT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MultiplePrimaryKey">
            <summary>The table has multiple primary keys defined.</summary>
            <remarks>ER_MULTIPLE_PRI_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyKeys">
            <summary>Too many keys were defined for the table.</summary>
            <remarks>ER_TOO_MANY_KEYS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyKeysParts">
            <summary>Too many parts to the keys were defined for the table.</summary>
            <remarks>ER_TOO_MANY_KEY_PARTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongKey">
            <summary>The specified key is too long</summary>
            <remarks>ER_TOO_LONG_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KeyColumnDoesNotExist">
            <summary>The specified key column doesn't exist in the table.</summary>
            <remarks>ER_KEY_COLUMN_DOES_NOT_EXITS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BlobUsedAsKey">
            <summary>The BLOB column was used as a key, this can't be done.</summary>
            <remarks>ER_BLOB_USED_AS_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigFieldLength">
            <summary>The column length is too big for the specified column type.</summary>
            <remarks>ER_TOO_BIG_FIELDLENGTH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongAutoKey">
            <summary>There can only be one auto-column, and it must be defined as a PK.</summary>
            <remarks>ER_WRONG_AUTO_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.Ready">
            <summary>The server is ready to accept connections.</summary>
            <remarks>ER_READY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NormalShutdown">
            <summary></summary>
            <remarks>ER_NORMAL_SHUTDOWN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GotSignal">
            <summary>The server received the specified signal and is aborting.</summary>
            <remarks>ER_GOT_SIGNAL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ShutdownComplete">
            <summary>The server shutdown is complete.</summary>
            <remarks>ER_SHUTDOWN_COMPLETE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForcingClose">
            <summary>The server is forcing close of the specified thread.</summary>
            <remarks>ER_FORCING_CLOSE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IPSocketError">
            <summary>An error occurred when creating the IP socket.</summary>
            <remarks>ER_IPSOCK_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoSuchIndex">
            <summary>The table has no index like the one used in CREATE INDEX.</summary>
            <remarks>ER_NO_SUCH_INDEX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongFieldTerminators">
            <summary>The field separator argument is not what is expected, check the manual.</summary>
            <remarks>ER_WRONG_FIELD_TERMINATORS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BlobsAndNoTerminated">
            <summary>The BLOB columns must terminated, fixed row lengths cannot be used.</summary>
            <remarks>ER_BLOBS_AND_NO_TERMINATED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TextFileNotReadable">
            <summary>The text file cannot be read.</summary>
            <remarks>ER_TEXTFILE_NOT_READABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileExists">
            <summary>The specified file already exists.</summary>
            <remarks>ER_FILE_EXISTS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LoadInfo">
            <summary>Information returned by the LOAD statement.</summary>
            <remarks>ER_LOAD_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AlterInfo">
            <summary>Information returned by an UPDATE statement.</summary>
            <remarks>ER_ALTER_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongSubKey">
            <summary>The prefix key is incorrect.</summary>
            <remarks>ER_WRONG_SUB_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotRemoveAllFields">
            <summary>All columns cannot be removed from a table, use DROP TABLE instead.</summary>
            <remarks>ER_CANT_REMOVE_ALL_FIELDS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotDropFieldOrKey">
            <summary>Cannot DROP, check that the column or key exists.</summary>
            <remarks>ER_CANT_DROP_FIELD_OR_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InsertInfo">
            <summary>Information returned by an INSERT statement.</summary>
            <remarks>ER_INSERT_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UpdateTableUsed">
            <summary>The target table cannot be specified for update in FROM clause.</summary>
            <remarks>ER_UPDATE_TABLE_USED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoSuchThread">
            <summary>The specified thread ID is unknown.</summary>
            <remarks>ER_NO_SUCH_THREAD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KillDenied">
            <summary>The thread cannot be killed, the current user is not the owner.</summary>
            <remarks>ER_KILL_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoTablesUsed">
            <summary>No tables used in the statement.</summary>
            <remarks>ER_NO_TABLES_USED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigSet">
            <summary>Too many string have been used for the specified column and SET.</summary>
            <remarks>ER_TOO_BIG_SET</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoUniqueLogFile">
            <summary>A unique filename couldn't be generated.</summary>
            <remarks>ER_NO_UNIQUE_LOGFILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableNotLockedForWrite">
            <summary>The specified table was locked with a READ lock, and can't be updated.</summary>
            <remarks>ER_TABLE_NOT_LOCKED_FOR_WRITE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableNotLocked">
            <summary>The specified table was not locked with LOCK TABLES.</summary>
            <remarks>ER_TABLE_NOT_LOCKED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BlobCannotHaveDefault">
            <summary>BLOB and Text columns cannot have a default value.</summary>
            <remarks>ER_BLOB_CANT_HAVE_DEFAULT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongDatabaseName">
            <summary>The specified database name is incorrect.</summary>
            <remarks>ER_WRONG_DB_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongTableName">
            <summary>The specified table name is incorrect.</summary>
            <remarks>ER_WRONG_TABLE_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigSelect">
            <summary>The SELECT command would examine more than MAX_JOIN_SIZE rows, check the WHERE clause and use SET SQL_BIG_SELECTS=1 or SET SQL_MAX_JOIN_SIZE=# if the SELECT is ok.</summary>
            <remarks>ER_TOO_BIG_SELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownError">
            <summary>An unknown error occurred.</summary>
            <remarks>ER_UNKNOWN_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownProcedure">
            <summary>The specified procedure is unknown.</summary>
            <remarks>ER_UNKNOWN_PROCEDURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongParameterCountToProcedure">
            <summary>The number of parameters provided for the specified procedure is incorrect.</summary>
            <remarks>ER_WRONG_PARAMCOUNT_TO_PROCEDURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongParametersToProcedure">
            <summary>The parameters provided for the specified procedure are incorrect.</summary>
            <remarks>ER_WRONG_PARAMETERS_TO_PROCEDURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownTable">
            <summary>The specified table is unknown.</summary>
            <remarks>ER_UNKNOWN_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FieldSpecifiedTwice">
            <summary>The specified column has been specified twice.</summary>
            <remarks>ER_FIELD_SPECIFIED_TWICE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InvalidGroupFunctionUse">
            <summary>The group function has been incorrectly used.</summary>
            <remarks>ER_INVALID_GROUP_FUNC_USE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnsupportedExtenstion">
            <summary>The specified table uses an extension that doesn't exist in this MySQL version.</summary>
            <remarks>ER_UNSUPPORTED_EXTENSION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableMustHaveColumns">
            <summary>The table must have at least one column.</summary>
            <remarks>ER_TABLE_MUST_HAVE_COLUMNS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RecordFileFull">
            <summary>The specified table is full.</summary>
            <remarks>ER_RECORD_FILE_FULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownCharacterSet">
            <summary>The specified character set is unknown.</summary>
            <remarks>ER_UNKNOWN_CHARACTER_SET</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyTables">
            <summary>Too many tables, MySQL can only use the specified number of tables in a JOIN.</summary>
            <remarks>ER_TOO_MANY_TABLES</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyFields">
            <summary>Too many columns</summary>
            <remarks>ER_TOO_MANY_FIELDS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigRowSize">
            <summary>The row size is too large, the maximum row size for the used tables (not counting BLOBS) is specified, change some columns or BLOBS.</summary>
            <remarks>ER_TOO_BIG_ROWSIZE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StackOverrun">
            <summary>A thread stack overrun occurred. Stack statistics are specified.</summary>
            <remarks>ER_STACK_OVERRUN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongOuterJoin">
            <summary>A cross dependency was found in the OUTER JOIN, examine the ON conditions.</summary>
            <remarks>ER_WRONG_OUTER_JOIN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NullColumnInIndex">
            <summary>The table handler doesn't support NULL in the given index, change specified column to be NOT NULL or use another handler.</summary>
            <remarks>ER_NULL_COLUMN_IN_INDEX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotFindUDF">
            <summary>The specified user defined function cannot be loaded.</summary>
            <remarks>ER_CANT_FIND_UDF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotInitializeUDF">
            <summary>The specified user defined function cannot be initialised.</summary>
            <remarks>ER_CANT_INITIALIZE_UDF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UDFNoPaths">
            <summary>No paths are allowed for the shared library.</summary>
            <remarks>ER_UDF_NO_PATHS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UDFExists">
            <summary>The specified user defined function already exists.</summary>
            <remarks>ER_UDF_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotOpenLibrary">
            <summary>The specified shared library cannot be opened.</summary>
            <remarks>ER_CANT_OPEN_LIBRARY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotFindDLEntry">
            <summary>The specified symbol cannot be found in the library.</summary>
            <remarks>ER_CANT_FIND_DL_ENTRY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FunctionNotDefined">
            <summary>The specified function is not defined.</summary>
            <remarks>ER_FUNCTION_NOT_DEFINED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.HostIsBlocked">
            <summary>The specified host is blocked because of too many connection errors, unblock with 'mysqladmin flush-hosts'.</summary>
            <remarks>ER_HOST_IS_BLOCKED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.HostNotPrivileged">
            <summary>
            The given host is not allowed to connect
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AnonymousUser">
            <summary>
            The anonymous user is not allowed to connect
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PasswordNotAllowed">
            <summary>
            The given password is not allowed
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PasswordNoMatch">
            <summary>
            The given password does not match
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UpdateInfo">
            <summary>Information returned by an UPDATE statement.</summary>
            <remarks>ER_UPDATE_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateThread">
            <summary>A new thread couldn't be created.</summary>
            <remarks>ER_CANT_CREATE_THREAD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongValueCountOnRow">
            <summary>The column count doesn't match the value count.</summary>
            <remarks>ER_WRONG_VALUE_COUNT_ON_ROW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotReopenTable">
            <summary>The specified table can't be re-opened.</summary>
            <remarks>ER_CANT_REOPEN_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InvalidUseOfNull">
            <summary>The NULL value has been used incorrectly.</summary>
            <remarks>ER_INVALID_USE_OF_NULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RegExpError">
            <summary>The regular expression contains an error.</summary>
            <remarks>ER_REGEXP_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MixOfGroupFunctionAndFields">
            <summary>GROUP columns (MIN(), MAX(), COUNT(), ...) cannot be mixes with no GROUP columns if there is not GROUP BY clause.</summary>
            <remarks>ER_MIX_OF_GROUP_FUNC_AND_FIELDS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonExistingGrant">
            <summary></summary>
            <remarks>ER_NONEXISTING_GRANT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableAccessDenied">
            <summary></summary>
            <remarks>ER_TABLEACCESS_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ColumnAccessDenied">
            <summary></summary>
            <remarks>ER_COLUMNACCESS_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IllegalGrantForTable">
            <summary></summary>
            <remarks>ER_ILLEGAL_GRANT_FOR_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GrantWrongHostOrUser">
            <summary></summary>
            <remarks>ER_GRANT_WRONG_HOST_OR_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoSuchTable">
            <summary></summary>
            <remarks>ER_NO_SUCH_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonExistingTableGrant">
            <summary></summary>
            <remarks>ER_NONEXISTING_TABLE_GRANT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotAllowedCommand">
            <summary></summary>
            <remarks>ER_NOT_ALLOWED_COMMAND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SyntaxError">
            <summary></summary>
            <remarks>ER_SYNTAX_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DelayedCannotChangeLock">
            <summary></summary>
            <remarks>ER_DELAYED_CANT_CHANGE_LOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyDelayedThreads">
            <summary></summary>
            <remarks>ER_TOO_MANY_DELAYED_THREADS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AbortingConnection">
            <summary></summary>
            <remarks>ER_ABORTING_CONNECTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PacketTooLarge">
            <summary>
            An attempt was made to send or receive a packet larger than
            max_allowed_packet_size
            </summary>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetReadErrorFromPipe">
            <summary></summary>
            <remarks>ER_NET_READ_ERROR_FROM_PIPE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetFCntlError">
            <summary></summary>
            <remarks>ER_NET_FCNTL_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetPacketsOutOfOrder">
            <summary></summary>
            <remarks>ER_NET_PACKETS_OUT_OF_ORDER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetUncompressError">
            <summary></summary>
            <remarks>ER_NET_UNCOMPRESS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetReadError">
            <summary></summary>
            <remarks>ER_NET_READ_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetReadInterrupted">
            <summary></summary>
            <remarks>ER_NET_READ_INTERRUPTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetErrorOnWrite">
            <summary></summary>
            <remarks>ER_NET_ERROR_ON_WRITE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NetWriteInterrupted">
            <summary></summary>
            <remarks>ER_NET_WRITE_INTERRUPTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongString">
            <summary></summary>
            <remarks>ER_TOO_LONG_STRING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableCannotHandleBlob">
            <summary></summary>
            <remarks>ER_TABLE_CANT_HANDLE_BLOB</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableCannotHandleAutoIncrement">
            <summary></summary>
            <remarks>ER_TABLE_CANT_HANDLE_AUTO_INCREMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DelayedInsertTableLocked">
            <summary></summary>
            <remarks>ER_DELAYED_INSERT_TABLE_LOCKED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongColumnName">
            <summary></summary>
            <remarks>ER_WRONG_COLUMN_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongKeyColumn">
            <summary></summary>
            <remarks>ER_WRONG_KEY_COLUMN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongMergeTable">
            <summary></summary>
            <remarks>ER_WRONG_MRG_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateUnique">
            <summary></summary>
            <remarks>ER_DUP_UNIQUE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BlobKeyWithoutLength">
            <summary></summary>
            <remarks>ER_BLOB_KEY_WITHOUT_LENGTH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PrimaryCannotHaveNull">
            <summary></summary>
            <remarks>ER_PRIMARY_CANT_HAVE_NULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyRows">
            <summary></summary>
            <remarks>ER_TOO_MANY_ROWS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RequiresPrimaryKey">
            <summary></summary>
            <remarks>ER_REQUIRES_PRIMARY_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoRAIDCompiled">
            <summary></summary>
            <remarks>ER_NO_RAID_COMPILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UpdateWithoutKeysInSafeMode">
            <summary></summary>
            <remarks>ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KeyDoesNotExist">
            <summary></summary>
            <remarks>ER_KEY_DOES_NOT_EXITS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CheckNoSuchTable">
            <summary></summary>
            <remarks>ER_CHECK_NO_SUCH_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CheckNotImplemented">
            <summary></summary>
            <remarks>ER_CHECK_NOT_IMPLEMENTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotDoThisDuringATransaction">
            <summary></summary>
            <remarks>ER_CANT_DO_THIS_DURING_AN_TRANSACTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorDuringCommit">
            <summary></summary>
            <remarks>ER_ERROR_DURING_COMMIT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorDuringRollback">
            <summary></summary>
            <remarks>ER_ERROR_DURING_ROLLBACK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorDuringFlushLogs">
            <summary></summary>
            <remarks>ER_ERROR_DURING_FLUSH_LOGS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorDuringCheckpoint">
            <summary></summary>
            <remarks>ER_ERROR_DURING_CHECKPOINT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NewAbortingConnection">
            <summary></summary>
            <remarks>ER_NEW_ABORTING_CONNECTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DumpNotImplemented">
            <summary></summary>
            <remarks>ER_DUMP_NOT_IMPLEMENTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FlushMasterBinLogClosed">
            <summary></summary>
            <remarks>ER_FLUSH_MASTER_BINLOG_CLOSED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IndexRebuild">
            <summary></summary>
            <remarks>ER_INDEX_REBUILD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MasterError">
            <summary></summary>
            <remarks>ER_MASTER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MasterNetRead">
            <summary></summary>
            <remarks>ER_MASTER_NET_READ</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MasterNetWrite">
            <summary></summary>
            <remarks>ER_MASTER_NET_WRITE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FullTextMatchingKeyNotFound">
            <summary></summary>
            <remarks>ER_FT_MATCHING_KEY_NOT_FOUND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LockOrActiveTransaction">
            <summary></summary>
            <remarks>ER_LOCK_OR_ACTIVE_TRANSACTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownSystemVariable">
            <summary></summary>
            <remarks>ER_UNKNOWN_SYSTEM_VARIABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CrashedOnUsage">
            <summary></summary>
            <remarks>ER_CRASHED_ON_USAGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CrashedOnRepair">
            <summary></summary>
            <remarks>ER_CRASHED_ON_REPAIR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningNotCompleteRollback">
            <summary></summary>
            <remarks>ER_WARNING_NOT_COMPLETE_ROLLBACK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TransactionCacheFull">
            <summary></summary>
            <remarks>ER_TRANS_CACHE_FULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveMustStop">
            <summary></summary>
            <remarks>ER_SLAVE_MUST_STOP</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveNotRunning">
            <summary></summary>
            <remarks>ER_SLAVE_NOT_RUNNING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadSlave">
            <summary></summary>
            <remarks>ER_BAD_SLAVE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MasterInfo">
            <summary></summary>
            <remarks>ER_MASTER_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveThread">
            <summary></summary>
            <remarks>ER_SLAVE_THREAD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyUserConnections">
            <summary></summary>
            <remarks>ER_TOO_MANY_USER_CONNECTIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SetConstantsOnly">
            <summary></summary>
            <remarks>ER_SET_CONSTANTS_ONLY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LockWaitTimeout">
            <summary></summary>
            <remarks>ER_LOCK_WAIT_TIMEOUT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LockTableFull">
            <summary></summary>
            <remarks>ER_LOCK_TABLE_FULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReadOnlyTransaction">
            <summary></summary>
            <remarks>ER_READ_ONLY_TRANSACTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropDatabaseWithReadLock">
            <summary></summary>
            <remarks>ER_DROP_DB_WITH_READ_LOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CreateDatabaseWithReadLock">
            <summary></summary>
            <remarks>ER_CREATE_DB_WITH_READ_LOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongArguments">
            <summary></summary>
            <remarks>ER_WRONG_ARGUMENTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoPermissionToCreateUser">
            <summary></summary>
            <remarks>ER_NO_PERMISSION_TO_CREATE_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnionTablesInDifferentDirectory">
            <summary></summary>
            <remarks>ER_UNION_TABLES_IN_DIFFERENT_DIR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LockDeadlock">
            <summary></summary>
            <remarks>ER_LOCK_DEADLOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableCannotHandleFullText">
            <summary></summary>
            <remarks>ER_TABLE_CANT_HANDLE_FT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotAddForeignConstraint">
            <summary></summary>
            <remarks>ER_CANNOT_ADD_FOREIGN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoReferencedRow">
            <summary></summary>
            <remarks>ER_NO_REFERENCED_ROW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RowIsReferenced">
            <summary></summary>
            <remarks>ER_ROW_IS_REFERENCED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConnectToMaster">
            <summary></summary>
            <remarks>ER_CONNECT_TO_MASTER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.QueryOnMaster">
            <summary></summary>
            <remarks>ER_QUERY_ON_MASTER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorWhenExecutingCommand">
            <summary></summary>
            <remarks>ER_ERROR_WHEN_EXECUTING_COMMAND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongUsage">
            <summary></summary>
            <remarks>ER_WRONG_USAGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongNumberOfColumnsInSelect">
            <summary></summary>
            <remarks>ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotUpdateWithReadLock">
            <summary></summary>
            <remarks>ER_CANT_UPDATE_WITH_READLOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MixingNotAllowed">
            <summary></summary>
            <remarks>ER_MIXING_NOT_ALLOWED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateArgument">
            <summary></summary>
            <remarks>ER_DUP_ARGUMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UserLimitReached">
            <summary></summary>
            <remarks>ER_USER_LIMIT_REACHED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SpecifiedAccessDeniedError">
            <summary></summary>
            <remarks>ER_SPECIFIC_ACCESS_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LocalVariableError">
            <summary></summary>
            <remarks>ER_LOCAL_VARIABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GlobalVariableError">
            <summary></summary>
            <remarks>ER_GLOBAL_VARIABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotDefaultError">
            <summary></summary>
            <remarks>ER_NO_DEFAULT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongValueForVariable">
            <summary></summary>
            <remarks>ER_WRONG_VALUE_FOR_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongTypeForVariable">
            <summary></summary>
            <remarks>ER_WRONG_TYPE_FOR_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.VariableCannotBeRead">
            <summary></summary>
            <remarks>ER_VAR_CANT_BE_READ</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotUseOptionHere">
            <summary></summary>
            <remarks>ER_CANT_USE_OPTION_HERE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotSupportedYet">
            <summary></summary>
            <remarks>ER_NOT_SUPPORTED_YET</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MasterFatalErrorReadingBinLog">
            <summary></summary>
            <remarks>ER_MASTER_FATAL_ERROR_READING_BINLOG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveIgnoredTable">
            <summary></summary>
            <remarks>ER_SLAVE_IGNORED_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IncorrectGlobalLocalVariable">
            <summary></summary>
            <remarks>ER_INCORRECT_GLOBAL_LOCAL_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongForeignKeyDefinition">
            <summary></summary>
            <remarks>ER_WRONG_FK_DEF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KeyReferenceDoesNotMatchTableReference">
            <summary></summary>
            <remarks>ER_KEY_REF_DO_NOT_MATCH_TABLE_REF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OpearnColumnsError">
            <summary></summary>
            <remarks>ER_OPERAND_COLUMNS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SubQueryNoOneRow">
            <summary></summary>
            <remarks>ER_SUBQUERY_NO_1_ROW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownStatementHandler">
            <summary></summary>
            <remarks>ER_UNKNOWN_STMT_HANDLER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CorruptHelpDatabase">
            <summary></summary>
            <remarks>ER_CORRUPT_HELP_DB</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CyclicReference">
            <summary></summary>
            <remarks>ER_CYCLIC_REFERENCE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AutoConvert">
            <summary></summary>
            <remarks>ER_AUTO_CONVERT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IllegalReference">
            <summary></summary>
            <remarks>ER_ILLEGAL_REFERENCE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DerivedMustHaveAlias">
            <summary></summary>
            <remarks>ER_DERIVED_MUST_HAVE_ALIAS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SelectReduced">
            <summary></summary>
            <remarks>ER_SELECT_REDUCED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableNameNotAllowedHere">
            <summary></summary>
            <remarks>ER_TABLENAME_NOT_ALLOWED_HERE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NotSupportedAuthMode">
            <summary></summary>
            <remarks>ER_NOT_SUPPORTED_AUTH_MODE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SpatialCannotHaveNull">
            <summary></summary>
            <remarks>ER_SPATIAL_CANT_HAVE_NULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CollationCharsetMismatch">
            <summary></summary>
            <remarks>ER_COLLATION_CHARSET_MISMATCH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveWasRunning">
            <summary></summary>
            <remarks>ER_SLAVE_WAS_RUNNING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveWasNotRunning">
            <summary></summary>
            <remarks>ER_SLAVE_WAS_NOT_RUNNING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigForUncompress">
            <summary></summary>
            <remarks>ER_TOO_BIG_FOR_UNCOMPRESS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ZipLibMemoryError">
            <summary></summary>
            <remarks>ER_ZLIB_Z_MEM_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ZipLibBufferError">
            <summary></summary>
            <remarks>ER_ZLIB_Z_BUF_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ZipLibDataError">
            <summary></summary>
            <remarks>ER_ZLIB_Z_DATA_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CutValueGroupConcat">
            <summary></summary>
            <remarks>ER_CUT_VALUE_GROUP_CONCAT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningTooFewRecords">
            <summary></summary>
            <remarks>ER_WARN_TOO_FEW_RECORDS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningTooManyRecords">
            <summary></summary>
            <remarks>ER_WARN_TOO_MANY_RECORDS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningNullToNotNull">
            <summary></summary>
            <remarks>ER_WARN_NULL_TO_NOTNULL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningDataOutOfRange">
            <summary></summary>
            <remarks>ER_WARN_DATA_OUT_OF_RANGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WaningDataTruncated">
            <summary></summary>
            <remarks>WARN_DATA_TRUNCATED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WaningUsingOtherHandler">
            <summary></summary>
            <remarks>ER_WARN_USING_OTHER_HANDLER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotAggregateTwoCollations">
            <summary></summary>
            <remarks>ER_CANT_AGGREGATE_2COLLATIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropUserError">
            <summary></summary>
            <remarks>ER_DROP_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RevokeGrantsError">
            <summary></summary>
            <remarks>ER_REVOKE_GRANTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotAggregateThreeCollations">
            <summary></summary>
            <remarks>ER_CANT_AGGREGATE_3COLLATIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotAggregateNCollations">
            <summary></summary>
            <remarks>ER_CANT_AGGREGATE_NCOLLATIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.VariableIsNotStructure">
            <summary></summary>
            <remarks>ER_VARIABLE_IS_NOT_STRUCT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownCollation">
            <summary></summary>
            <remarks>ER_UNKNOWN_COLLATION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveIgnoreSSLParameters">
            <summary></summary>
            <remarks>ER_SLAVE_IGNORED_SSL_PARAMS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ServerIsInSecureAuthMode">
            <summary></summary>
            <remarks>ER_SERVER_IS_IN_SECURE_AUTH_MODE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WaningFieldResolved">
            <summary></summary>
            <remarks>ER_WARN_FIELD_RESOLVED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadSlaveUntilCondition">
            <summary></summary>
            <remarks>ER_BAD_SLAVE_UNTIL_COND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MissingSkipSlave">
            <summary></summary>
            <remarks>ER_MISSING_SKIP_SLAVE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorUntilConditionIgnored">
            <summary></summary>
            <remarks>ER_UNTIL_COND_IGNORED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongNameForIndex">
            <summary></summary>
            <remarks>ER_WRONG_NAME_FOR_INDEX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongNameForCatalog">
            <summary></summary>
            <remarks>ER_WRONG_NAME_FOR_CATALOG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningQueryCacheResize">
            <summary></summary>
            <remarks>ER_WARN_QC_RESIZE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadFullTextColumn">
            <summary></summary>
            <remarks>ER_BAD_FT_COLUMN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownKeyCache">
            <summary></summary>
            <remarks>ER_UNKNOWN_KEY_CACHE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningHostnameWillNotWork">
            <summary></summary>
            <remarks>ER_WARN_HOSTNAME_WONT_WORK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownStorageEngine">
            <summary></summary>
            <remarks>ER_UNKNOWN_STORAGE_ENGINE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WaningDeprecatedSyntax">
            <summary></summary>
            <remarks>ER_WARN_DEPRECATED_SYNTAX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonUpdateableTable">
            <summary></summary>
            <remarks>ER_NON_UPDATABLE_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FeatureDisabled">
            <summary></summary>
            <remarks>ER_FEATURE_DISABLED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OptionPreventsStatement">
            <summary></summary>
            <remarks>ER_OPTION_PREVENTS_STATEMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicatedValueInType">
            <summary></summary>
            <remarks>ER_DUPLICATED_VALUE_IN_TYPE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TruncatedWrongValue">
            <summary></summary>
            <remarks>ER_TRUNCATED_WRONG_VALUE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooMuchAutoTimestampColumns">
            <summary></summary>
            <remarks>ER_TOO_MUCH_AUTO_TIMESTAMP_COLS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InvalidOnUpdate">
            <summary></summary>
            <remarks>ER_INVALID_ON_UPDATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnsupportedPreparedStatement">
            <summary></summary>
            <remarks>ER_UNSUPPORTED_PS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GetErroMessage">
            <summary></summary>
            <remarks>ER_GET_ERRMSG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.GetTemporaryErrorMessage">
            <summary></summary>
            <remarks>ER_GET_TEMPORARY_ERRMSG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownTimeZone">
            <summary></summary>
            <remarks>ER_UNKNOWN_TIME_ZONE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningInvalidTimestamp">
            <summary></summary>
            <remarks>ER_WARN_INVALID_TIMESTAMP</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InvalidCharacterString">
            <summary></summary>
            <remarks>ER_INVALID_CHARACTER_STRING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningAllowedPacketOverflowed">
            <summary></summary>
            <remarks>ER_WARN_ALLOWED_PACKET_OVERFLOWED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConflictingDeclarations">
            <summary></summary>
            <remarks>ER_CONFLICTING_DECLARATIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoRecursiveCreate">
            <summary></summary>
            <remarks>ER_SP_NO_RECURSIVE_CREATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureAlreadyExists">
            <summary></summary>
            <remarks>ER_SP_ALREADY_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDoesNotExist">
            <summary></summary>
            <remarks>ER_SP_DOES_NOT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDropFailed">
            <summary></summary>
            <remarks>ER_SP_DROP_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureStoreFailed">
            <summary></summary>
            <remarks>ER_SP_STORE_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureLiLabelMismatch">
            <summary></summary>
            <remarks>ER_SP_LILABEL_MISMATCH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureLabelRedefine">
            <summary></summary>
            <remarks>ER_SP_LABEL_REDEFINE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureLabelMismatch">
            <summary></summary>
            <remarks>ER_SP_LABEL_MISMATCH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureUninitializedVariable">
            <summary></summary>
            <remarks>ER_SP_UNINIT_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadSelect">
            <summary></summary>
            <remarks>ER_SP_BADSELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadReturn">
            <summary></summary>
            <remarks>ER_SP_BADRETURN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadStatement">
            <summary></summary>
            <remarks>ER_SP_BADSTATEMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UpdateLogDeprecatedIgnored">
            <summary></summary>
            <remarks>ER_UPDATE_LOG_DEPRECATED_IGNORED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UpdateLogDeprecatedTranslated">
            <summary></summary>
            <remarks>ER_UPDATE_LOG_DEPRECATED_TRANSLATED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.QueryInterrupted">
            <summary></summary>
            <remarks>ER_QUERY_INTERRUPTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNumberOfArguments">
            <summary></summary>
            <remarks>ER_SP_WRONG_NO_OF_ARGS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureConditionMismatch">
            <summary></summary>
            <remarks>ER_SP_COND_MISMATCH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoReturn">
            <summary></summary>
            <remarks>ER_SP_NORETURN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoReturnEnd">
            <summary></summary>
            <remarks>ER_SP_NORETURNEND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadCursorQuery">
            <summary></summary>
            <remarks>ER_SP_BAD_CURSOR_QUERY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadCursorSelect">
            <summary></summary>
            <remarks>ER_SP_BAD_CURSOR_SELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCursorMismatch">
            <summary></summary>
            <remarks>ER_SP_CURSOR_MISMATCH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureAlreadyOpen">
            <summary></summary>
            <remarks>ER_SP_CURSOR_ALREADY_OPEN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCursorNotOpen">
            <summary></summary>
            <remarks>ER_SP_CURSOR_NOT_OPEN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureUndeclaredVariabel">
            <summary></summary>
            <remarks>ER_SP_UNDECLARED_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureWrongNumberOfFetchArguments">
            <summary></summary>
            <remarks>ER_SP_WRONG_NO_OF_FETCH_ARGS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureFetchNoData">
            <summary></summary>
            <remarks>ER_SP_FETCH_NO_DATA</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDuplicateParameter">
            <summary></summary>
            <remarks>ER_SP_DUP_PARAM</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDuplicateVariable">
            <summary></summary>
            <remarks>ER_SP_DUP_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDuplicateCondition">
            <summary></summary>
            <remarks>ER_SP_DUP_COND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDuplicateCursor">
            <summary></summary>
            <remarks>ER_SP_DUP_CURS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCannotAlter">
            <summary></summary>
            <remarks>ER_SP_CANT_ALTER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureSubSelectNYI">
            <summary></summary>
            <remarks>ER_SP_SUBSELECT_NYI</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StatementNotAllowedInStoredFunctionOrTrigger">
            <summary></summary>
            <remarks>ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureVariableConditionAfterCursorHandler">
            <summary></summary>
            <remarks>ER_SP_VARCOND_AFTER_CURSHNDLR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCursorAfterHandler">
            <summary></summary>
            <remarks>ER_SP_CURSOR_AFTER_HANDLER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCaseNotFound">
            <summary></summary>
            <remarks>ER_SP_CASE_NOT_FOUND</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileParserTooBigFile">
            <summary></summary>
            <remarks>ER_FPARSER_TOO_BIG_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileParserBadHeader">
            <summary></summary>
            <remarks>ER_FPARSER_BAD_HEADER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileParserEOFInComment">
            <summary></summary>
            <remarks>ER_FPARSER_EOF_IN_COMMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileParserErrorInParameter">
            <summary></summary>
            <remarks>ER_FPARSER_ERROR_IN_PARAMETER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileParserEOFInUnknownParameter">
            <summary></summary>
            <remarks>ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewNoExplain">
            <summary></summary>
            <remarks>ER_VIEW_NO_EXPLAIN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FrmUnknownType">
            <summary></summary>
            <remarks>ER_FRM_UNKNOWN_TYPE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongObject">
            <summary></summary>
            <remarks>ER_WRONG_OBJECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonUpdateableColumn">
            <summary></summary>
            <remarks>ER_NONUPDATEABLE_COLUMN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewSelectDerived">
            <summary></summary>
            <remarks>ER_VIEW_SELECT_DERIVED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewSelectClause">
            <summary></summary>
            <remarks>ER_VIEW_SELECT_CLAUSE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewSelectVariable">
            <summary></summary>
            <remarks>ER_VIEW_SELECT_VARIABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewSelectTempTable">
            <summary></summary>
            <remarks>ER_VIEW_SELECT_TMPTABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewWrongList">
            <summary></summary>
            <remarks>ER_VIEW_WRONG_LIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningViewMerge">
            <summary></summary>
            <remarks>ER_WARN_VIEW_MERGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningViewWithoutKey">
            <summary></summary>
            <remarks>ER_WARN_VIEW_WITHOUT_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewInvalid">
            <summary></summary>
            <remarks>ER_VIEW_INVALID</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoDropStoredProcedure">
            <summary></summary>
            <remarks>ER_SP_NO_DROP_SP</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureGotoInHandler">
            <summary></summary>
            <remarks>ER_SP_GOTO_IN_HNDLR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerAlreadyExists">
            <summary></summary>
            <remarks>ER_TRG_ALREADY_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerDoesNotExist">
            <summary></summary>
            <remarks>ER_TRG_DOES_NOT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerOnViewOrTempTable">
            <summary></summary>
            <remarks>ER_TRG_ON_VIEW_OR_TEMP_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerCannotChangeRow">
            <summary></summary>
            <remarks>ER_TRG_CANT_CHANGE_ROW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerNoSuchRowInTrigger">
            <summary></summary>
            <remarks>ER_TRG_NO_SUCH_ROW_IN_TRG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoDefaultForField">
            <summary></summary>
            <remarks>ER_NO_DEFAULT_FOR_FIELD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DivisionByZero">
            <summary></summary>
            <remarks>ER_DIVISION_BY_ZERO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TruncatedWrongValueForField">
            <summary></summary>
            <remarks>ER_TRUNCATED_WRONG_VALUE_FOR_FIELD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IllegalValueForType">
            <summary></summary>
            <remarks>ER_ILLEGAL_VALUE_FOR_TYPE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewNonUpdatableCheck">
            <summary></summary>
            <remarks>ER_VIEW_NONUPD_CHECK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewCheckFailed">
            <summary></summary>
            <remarks>ER_VIEW_CHECK_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PrecedureAccessDenied">
            <summary></summary>
            <remarks>ER_PROCACCESS_DENIED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RelayLogFail">
            <summary></summary>
            <remarks>ER_RELAY_LOG_FAIL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PasswordLength">
            <summary></summary>
            <remarks>ER_PASSWD_LENGTH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnknownTargetBinLog">
            <summary></summary>
            <remarks>ER_UNKNOWN_TARGET_BINLOG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IOErrorLogIndexRead">
            <summary></summary>
            <remarks>ER_IO_ERR_LOG_INDEX_READ</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogPurgeProhibited">
            <summary></summary>
            <remarks>ER_BINLOG_PURGE_PROHIBITED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FSeekFail">
            <summary></summary>
            <remarks>ER_FSEEK_FAIL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogPurgeFatalError">
            <summary></summary>
            <remarks>ER_BINLOG_PURGE_FATAL_ERR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LogInUse">
            <summary></summary>
            <remarks>ER_LOG_IN_USE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LogPurgeUnknownError">
            <summary></summary>
            <remarks>ER_LOG_PURGE_UNKNOWN_ERR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RelayLogInit">
            <summary></summary>
            <remarks>ER_RELAY_LOG_INIT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoBinaryLogging">
            <summary></summary>
            <remarks>ER_NO_BINARY_LOGGING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReservedSyntax">
            <summary></summary>
            <remarks>ER_RESERVED_SYNTAX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WSAStartupFailed">
            <summary></summary>
            <remarks>ER_WSAS_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DifferentGroupsProcedure">
            <summary></summary>
            <remarks>ER_DIFF_GROUPS_PROC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoGroupForProcedure">
            <summary></summary>
            <remarks>ER_NO_GROUP_FOR_PROC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OrderWithProcedure">
            <summary></summary>
            <remarks>ER_ORDER_WITH_PROC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LoggingProhibitsChangingOf">
            <summary></summary>
            <remarks>ER_LOGGING_PROHIBIT_CHANGING_OF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoFileMapping">
            <summary></summary>
            <remarks>ER_NO_FILE_MAPPING</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongMagic">
            <summary></summary>
            <remarks>ER_WRONG_MAGIC</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PreparedStatementManyParameters">
            <summary></summary>
            <remarks>ER_PS_MANY_PARAM</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.KeyPartZero">
            <summary></summary>
            <remarks>ER_KEY_PART_0</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewChecksum">
            <summary></summary>
            <remarks>ER_VIEW_CHECKSUM</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewMultiUpdate">
            <summary></summary>
            <remarks>ER_VIEW_MULTIUPDATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewNoInsertFieldList">
            <summary></summary>
            <remarks>ER_VIEW_NO_INSERT_FIELD_LIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewDeleteMergeView">
            <summary></summary>
            <remarks>ER_VIEW_DELETE_MERGE_VIEW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotUser">
            <summary></summary>
            <remarks>ER_CANNOT_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAERNotA">
            <summary></summary>
            <remarks>ER_XAER_NOTA</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAERInvalid">
            <summary></summary>
            <remarks>ER_XAER_INVAL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAERRemoveFail">
            <summary></summary>
            <remarks>ER_XAER_RMFAIL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAEROutside">
            <summary></summary>
            <remarks>ER_XAER_OUTSIDE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAERRemoveError">
            <summary></summary>
            <remarks>ER_XAER_RMERR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XARBRollback">
            <summary></summary>
            <remarks>ER_XA_RBROLLBACK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonExistingProcedureGrant">
            <summary></summary>
            <remarks>ER_NONEXISTING_PROC_GRANT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ProcedureAutoGrantFail">
            <summary></summary>
            <remarks>ER_PROC_AUTO_GRANT_FAIL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ProcedureAutoRevokeFail">
            <summary></summary>
            <remarks>ER_PROC_AUTO_REVOKE_FAIL</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DataTooLong">
            <summary></summary>
            <remarks>ER_DATA_TOO_LONG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureSQLState">
            <summary></summary>
            <remarks>ER_SP_BAD_SQLSTATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StartupError">
            <summary></summary>
            <remarks>ER_STARTUP</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LoadFromFixedSizeRowsToVariable">
            <summary></summary>
            <remarks>ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateUserWithGrant">
            <summary></summary>
            <remarks>ER_CANT_CREATE_USER_WITH_GRANT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongValueForType">
            <summary></summary>
            <remarks>ER_WRONG_VALUE_FOR_TYPE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableDefinitionChanged">
            <summary></summary>
            <remarks>ER_TABLE_DEF_CHANGED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureDuplicateHandler">
            <summary></summary>
            <remarks>ER_SP_DUP_HANDLER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNotVariableArgument">
            <summary></summary>
            <remarks>ER_SP_NOT_VAR_ARG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoReturnSet">
            <summary></summary>
            <remarks>ER_SP_NO_RETSET</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateGeometryObject">
            <summary></summary>
            <remarks>ER_CANT_CREATE_GEOMETRY_OBJECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FailedRoutineBreaksBinLog">
            <summary></summary>
            <remarks>ER_FAILED_ROUTINE_BREAK_BINLOG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogUnsafeRoutine">
            <summary></summary>
            <remarks>ER_BINLOG_UNSAFE_ROUTINE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogCreateRoutineNeedSuper">
            <summary></summary>
            <remarks>ER_BINLOG_CREATE_ROUTINE_NEED_SUPER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ExecuteStatementWithOpenCursor">
            <summary></summary>
            <remarks>ER_EXEC_STMT_WITH_OPEN_CURSOR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StatementHasNoOpenCursor">
            <summary></summary>
            <remarks>ER_STMT_HAS_NO_OPEN_CURSOR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CommitNotAllowedIfStoredFunctionOrTrigger">
            <summary></summary>
            <remarks>ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoDefaultForViewField">
            <summary></summary>
            <remarks>ER_NO_DEFAULT_FOR_VIEW_FIELD</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoRecursion">
            <summary></summary>
            <remarks>ER_SP_NO_RECURSION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigScale">
            <summary></summary>
            <remarks>ER_TOO_BIG_SCALE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigPrecision">
            <summary></summary>
            <remarks>ER_TOO_BIG_PRECISION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MBiggerThanD">
            <summary></summary>
            <remarks>ER_M_BIGGER_THAN_D</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongLockOfSystemTable">
            <summary></summary>
            <remarks>ER_WRONG_LOCK_OF_SYSTEM_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConnectToForeignDataSource">
            <summary></summary>
            <remarks>ER_CONNECT_TO_FOREIGN_DATA_SOURCE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.QueryOnForeignDataSource">
            <summary></summary>
            <remarks>ER_QUERY_ON_FOREIGN_DATA_SOURCE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignDataSourceDoesNotExist">
            <summary></summary>
            <remarks>ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignDataStringInvalidCannotCreate">
            <summary></summary>
            <remarks>ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignDataStringInvalid">
            <summary></summary>
            <remarks>ER_FOREIGN_DATA_STRING_INVALID</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateFederatedTable">
            <summary></summary>
            <remarks>ER_CANT_CREATE_FEDERATED_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerInWrongSchema">
            <summary></summary>
            <remarks>ER_TRG_IN_WRONG_SCHEMA</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StackOverrunNeedMore">
            <summary></summary>
            <remarks>ER_STACK_OVERRUN_NEED_MORE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongBody">
            <summary></summary>
            <remarks>ER_TOO_LONG_BODY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningCannotDropDefaultKeyCache">
            <summary></summary>
            <remarks>ER_WARN_CANT_DROP_DEFAULT_KEYCACHE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooBigDisplayWidth">
            <summary></summary>
            <remarks>ER_TOO_BIG_DISPLAYWIDTH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XAERDuplicateID">
            <summary></summary>
            <remarks>ER_XAER_DUPID</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DateTimeFunctionOverflow">
            <summary></summary>
            <remarks>ER_DATETIME_FUNCTION_OVERFLOW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotUpdateUsedTableInStoredFunctionOrTrigger">
            <summary></summary>
            <remarks>ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewPreventUpdate">
            <summary></summary>
            <remarks>ER_VIEW_PREVENT_UPDATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PreparedStatementNoRecursion">
            <summary></summary>
            <remarks>ER_PS_NO_RECURSION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureCannotSetAutoCommit">
            <summary></summary>
            <remarks>ER_SP_CANT_SET_AUTOCOMMIT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MalformedDefiner">
            <summary></summary>
            <remarks>ER_MALFORMED_DEFINER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewFrmNoUser">
            <summary></summary>
            <remarks>ER_VIEW_FRM_NO_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewOtherUser">
            <summary></summary>
            <remarks>ER_VIEW_OTHER_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoSuchUser">
            <summary></summary>
            <remarks>ER_NO_SUCH_USER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForbidSchemaChange">
            <summary></summary>
            <remarks>ER_FORBID_SCHEMA_CHANGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RowIsReferenced2">
            <summary></summary>
            <remarks>ER_ROW_IS_REFERENCED_2</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoReferencedRow2">
            <summary></summary>
            <remarks>ER_NO_REFERENCED_ROW_2</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureBadVariableShadow">
            <summary></summary>
            <remarks>ER_SP_BAD_VAR_SHADOW</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerNoDefiner">
            <summary></summary>
            <remarks>ER_TRG_NO_DEFINER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OldFileFormat">
            <summary></summary>
            <remarks>ER_OLD_FILE_FORMAT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureRecursionLimit">
            <summary></summary>
            <remarks>ER_SP_RECURSION_LIMIT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureTableCorrupt">
            <summary></summary>
            <remarks>ER_SP_PROC_TABLE_CORRUPT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureWrongName">
            <summary></summary>
            <remarks>ER_SP_WRONG_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableNeedsUpgrade">
            <summary></summary>
            <remarks>ER_TABLE_NEEDS_UPGRADE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredProcedureNoAggregate">
            <summary></summary>
            <remarks>ER_SP_NO_AGGREGATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MaxPreparedStatementCountReached">
            <summary></summary>
            <remarks>ER_MAX_PREPARED_STMT_COUNT_REACHED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewRecursive">
            <summary></summary>
            <remarks>ER_VIEW_RECURSIVE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonGroupingFieldUsed">
            <summary></summary>
            <remarks>ER_NON_GROUPING_FIELD_USED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableCannotHandleSpatialKeys">
            <summary></summary>
            <remarks>ER_TABLE_CANT_HANDLE_SPKEYS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoTriggersOnSystemSchema">
            <summary></summary>
            <remarks>ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RemovedSpaces">
            <summary></summary>
            <remarks>ER_REMOVED_SPACES</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AutoIncrementReadFailed">
            <summary></summary>
            <remarks>ER_AUTOINC_READ_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UserNameError">
            <summary></summary>
            <remarks>ER_USERNAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.HostNameError">
            <summary></summary>
            <remarks>ER_HOSTNAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongStringLength">
            <summary></summary>
            <remarks>ER_WRONG_STRING_LENGTH</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NonInsertableTable">
            <summary></summary>
            <remarks>ER_NON_INSERTABLE_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AdminWrongMergeTable">
            <summary></summary>
            <remarks>ER_ADMIN_WRONG_MRG_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooHighLevelOfNestingForSelect">
            <summary></summary>
            <remarks>ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NameBecomesEmpty">
            <summary></summary>
            <remarks>ER_NAME_BECOMES_EMPTY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AmbiguousFieldTerm">
            <summary></summary>
            <remarks>ER_AMBIGUOUS_FIELD_TERM</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignServerExists">
            <summary></summary>
            <remarks>ER_FOREIGN_SERVER_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignServerDoesNotExist">
            <summary></summary>
            <remarks>ER_FOREIGN_SERVER_DOESNT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.IllegalHACreateOption">
            <summary></summary>
            <remarks>ER_ILLEGAL_HA_CREATE_OPTION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionRequiresValues">
            <summary></summary>
            <remarks>ER_PARTITION_REQUIRES_VALUES_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionWrongValues">
            <summary></summary>
            <remarks>ER_PARTITION_WRONG_VALUES_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionMaxValue">
            <summary></summary>
            <remarks>ER_PARTITION_MAXVALUE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionSubPartition">
            <summary></summary>
            <remarks>ER_PARTITION_SUBPARTITION_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionSubPartMix">
            <summary></summary>
            <remarks>ER_PARTITION_SUBPART_MIX_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionWrongNoPart">
            <summary></summary>
            <remarks>ER_PARTITION_WRONG_NO_PART_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionWrongNoSubPart">
            <summary></summary>
            <remarks>ER_PARTITION_WRONG_NO_SUBPART_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongExpressionInParitionFunction">
            <summary></summary>
            <remarks>ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoConstantExpressionInRangeOrListError">
            <summary></summary>
            <remarks>ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FieldNotFoundPartitionErrror">
            <summary></summary>
            <remarks>ER_FIELD_NOT_FOUND_PART_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ListOfFieldsOnlyInHash">
            <summary></summary>
            <remarks>ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InconsistentPartitionInfo">
            <summary></summary>
            <remarks>ER_INCONSISTENT_PARTITION_INFO_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionFunctionNotAllowed">
            <summary></summary>
            <remarks>ER_PARTITION_FUNC_NOT_ALLOWED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionsMustBeDefined">
            <summary></summary>
            <remarks>ER_PARTITIONS_MUST_BE_DEFINED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RangeNotIncreasing">
            <summary></summary>
            <remarks>ER_RANGE_NOT_INCREASING_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.InconsistentTypeOfFunctions">
            <summary></summary>
            <remarks>ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MultipleDefinitionsConstantInListPartition">
            <summary></summary>
            <remarks>ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionEntryError">
            <summary></summary>
            <remarks>ER_PARTITION_ENTRY_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.MixHandlerError">
            <summary></summary>
            <remarks>ER_MIX_HANDLER_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionNotDefined">
            <summary></summary>
            <remarks>ER_PARTITION_NOT_DEFINED_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyPartitions">
            <summary></summary>
            <remarks>ER_TOO_MANY_PARTITIONS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SubPartitionError">
            <summary></summary>
            <remarks>ER_SUBPARTITION_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotCreateHandlerFile">
            <summary></summary>
            <remarks>ER_CANT_CREATE_HANDLER_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BlobFieldInPartitionFunction">
            <summary></summary>
            <remarks>ER_BLOB_FIELD_IN_PART_FUNC_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UniqueKeyNeedAllFieldsInPartitioningFunction">
            <summary></summary>
            <remarks>ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoPartitions">
            <summary></summary>
            <remarks>ER_NO_PARTS_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionManagementOnNoPartitioned">
            <summary></summary>
            <remarks>ER_PARTITION_MGMT_ON_NONPARTITIONED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignKeyOnPartitioned">
            <summary></summary>
            <remarks>ER_FOREIGN_KEY_ON_PARTITIONED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropPartitionNonExistent">
            <summary></summary>
            <remarks>ER_DROP_PARTITION_NON_EXISTENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropLastPartition">
            <summary></summary>
            <remarks>ER_DROP_LAST_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CoalesceOnlyOnHashPartition">
            <summary></summary>
            <remarks>ER_COALESCE_ONLY_ON_HASH_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReorganizeHashOnlyOnSameNumber">
            <summary></summary>
            <remarks>ER_REORG_HASH_ONLY_ON_SAME_NO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReorganizeNoParameter">
            <summary></summary>
            <remarks>ER_REORG_NO_PARAM_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OnlyOnRangeListPartition">
            <summary></summary>
            <remarks>ER_ONLY_ON_RANGE_LIST_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AddPartitionSubPartition">
            <summary></summary>
            <remarks>ER_ADD_PARTITION_SUBPART_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AddPartitionNoNewPartition">
            <summary></summary>
            <remarks>ER_ADD_PARTITION_NO_NEW_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CoalescePartitionNoPartition">
            <summary></summary>
            <remarks>ER_COALESCE_PARTITION_NO_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReorganizePartitionNotExist">
            <summary></summary>
            <remarks>ER_REORG_PARTITION_NOT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SameNamePartition">
            <summary></summary>
            <remarks>ER_SAME_NAME_PARTITION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoBinLog">
            <summary></summary>
            <remarks>ER_NO_BINLOG_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConsecutiveReorganizePartitions">
            <summary></summary>
            <remarks>ER_CONSECUTIVE_REORG_PARTITIONS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ReorganizeOutsideRange">
            <summary></summary>
            <remarks>ER_REORG_OUTSIDE_RANGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionFunctionFailure">
            <summary></summary>
            <remarks>ER_PARTITION_FUNCTION_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionStateError">
            <summary></summary>
            <remarks>ER_PART_STATE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LimitedPartitionRange">
            <summary></summary>
            <remarks>ER_LIMITED_PART_RANGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PluginIsNotLoaded">
            <summary></summary>
            <remarks>ER_PLUGIN_IS_NOT_LOADED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongValue">
            <summary></summary>
            <remarks>ER_WRONG_VALUE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoPartitionForGivenValue">
            <summary></summary>
            <remarks>ER_NO_PARTITION_FOR_GIVEN_VALUE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FileGroupOptionOnlyOnce">
            <summary></summary>
            <remarks>ER_FILEGROUP_OPTION_ONLY_ONCE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CreateFileGroupFailed">
            <summary></summary>
            <remarks>ER_CREATE_FILEGROUP_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropFileGroupFailed">
            <summary></summary>
            <remarks>ER_DROP_FILEGROUP_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableSpaceAutoExtend">
            <summary></summary>
            <remarks>ER_TABLESPACE_AUTO_EXTEND_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongSizeNumber">
            <summary></summary>
            <remarks>ER_WRONG_SIZE_NUMBER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SizeOverflow">
            <summary></summary>
            <remarks>ER_SIZE_OVERFLOW_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.AlterFileGroupFailed">
            <summary></summary>
            <remarks>ER_ALTER_FILEGROUP_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogRowLogginFailed">
            <summary></summary>
            <remarks>ER_BINLOG_ROW_LOGGING_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogRowWrongTableDefinition">
            <summary></summary>
            <remarks>ER_BINLOG_ROW_WRONG_TABLE_DEF</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogRowRBRToSBR">
            <summary></summary>
            <remarks>ER_BINLOG_ROW_RBR_TO_SBR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventAlreadyExists">
            <summary></summary>
            <remarks>ER_EVENT_ALREADY_EXISTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventStoreFailed">
            <summary></summary>
            <remarks>ER_EVENT_STORE_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventDoesNotExist">
            <summary></summary>
            <remarks>ER_EVENT_DOES_NOT_EXIST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventCannotAlter">
            <summary></summary>
            <remarks>ER_EVENT_CANT_ALTER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventDropFailed">
            <summary></summary>
            <remarks>ER_EVENT_DROP_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventIntervalNotPositiveOrTooBig">
            <summary></summary>
            <remarks>ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventEndsBeforeStarts">
            <summary></summary>
            <remarks>ER_EVENT_ENDS_BEFORE_STARTS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventExecTimeInThePast">
            <summary></summary>
            <remarks>ER_EVENT_EXEC_TIME_IN_THE_PAST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventOpenTableFailed">
            <summary></summary>
            <remarks>ER_EVENT_OPEN_TABLE_FAILED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventNeitherMExpresssionNorMAt">
            <summary></summary>
            <remarks>ER_EVENT_NEITHER_M_EXPR_NOR_M_AT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ColumnCountDoesNotMatchCorrupted">
            <summary></summary>
            <remarks>ER_COL_COUNT_DOESNT_MATCH_CORRUPTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotLoadFromTable">
            <summary></summary>
            <remarks>ER_CANNOT_LOAD_FROM_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventCannotDelete">
            <summary></summary>
            <remarks>ER_EVENT_CANNOT_DELETE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventCompileError">
            <summary></summary>
            <remarks>ER_EVENT_COMPILE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventSameName">
            <summary></summary>
            <remarks>ER_EVENT_SAME_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventDataTooLong">
            <summary></summary>
            <remarks>ER_EVENT_DATA_TOO_LONG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DropIndexForeignKey">
            <summary></summary>
            <remarks>ER_DROP_INDEX_FK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningDeprecatedSyntaxWithVersion">
            <summary></summary>
            <remarks>ER_WARN_DEPRECATED_SYNTAX_WITH_VER</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotWriteLockLogTable">
            <summary></summary>
            <remarks>ER_CANT_WRITE_LOCK_LOG_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotLockLogTable">
            <summary></summary>
            <remarks>ER_CANT_LOCK_LOG_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ForeignDuplicateKey">
            <summary></summary>
            <remarks>ER_FOREIGN_DUPLICATE_KEY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ColumnCountDoesNotMatchPleaseUpdate">
            <summary></summary>
            <remarks>ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TemoraryTablePreventSwitchOutOfRBR">
            <summary></summary>
            <remarks>ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredFunctionPreventsSwitchBinLogFormat">
            <summary></summary>
            <remarks>ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NDBCannotSwitchBinLogFormat">
            <summary></summary>
            <remarks>ER_NDB_CANT_SWITCH_BINLOG_FORMAT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionNoTemporary">
            <summary></summary>
            <remarks>ER_PARTITION_NO_TEMPORARY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionConstantDomain">
            <summary></summary>
            <remarks>ER_PARTITION_CONST_DOMAIN_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionFunctionIsNotAllowed">
            <summary></summary>
            <remarks>ER_PARTITION_FUNCTION_IS_NOT_ALLOWED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DDLLogError">
            <summary></summary>
            <remarks>ER_DDL_LOG_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NullInValuesLessThan">
            <summary></summary>
            <remarks>ER_NULL_IN_VALUES_LESS_THAN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongPartitionName">
            <summary></summary>
            <remarks>ER_WRONG_PARTITION_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotChangeTransactionIsolation">
            <summary></summary>
            <remarks>ER_CANT_CHANGE_TX_ISOLATION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateEntryAutoIncrementCase">
            <summary></summary>
            <remarks>ER_DUP_ENTRY_AUTOINCREMENT_CASE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventModifyQueueError">
            <summary></summary>
            <remarks>ER_EVENT_MODIFY_QUEUE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventSetVariableError">
            <summary></summary>
            <remarks>ER_EVENT_SET_VAR_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionMergeError">
            <summary></summary>
            <remarks>ER_PARTITION_MERGE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotActivateLog">
            <summary></summary>
            <remarks>ER_CANT_ACTIVATE_LOG</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RBRNotAvailable">
            <summary></summary>
            <remarks>ER_RBR_NOT_AVAILABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.Base64DecodeError">
            <summary></summary>
            <remarks>ER_BASE64_DECODE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventRecursionForbidden">
            <summary></summary>
            <remarks>ER_EVENT_RECURSION_FORBIDDEN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventsDatabaseError">
            <summary></summary>
            <remarks>ER_EVENTS_DB_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.OnlyIntegersAllowed">
            <summary></summary>
            <remarks>ER_ONLY_INTEGERS_ALLOWED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.UnsupportedLogEngine">
            <summary></summary>
            <remarks>ER_UNSUPORTED_LOG_ENGINE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BadLogStatement">
            <summary></summary>
            <remarks>ER_BAD_LOG_STATEMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannotRenameLogTable">
            <summary></summary>
            <remarks>ER_CANT_RENAME_LOG_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongParameterCountToNativeFCT">
            <summary></summary>
            <remarks>ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongParametersToNativeFCT">
            <summary></summary>
            <remarks>ER_WRONG_PARAMETERS_TO_NATIVE_FCT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WrongParametersToStoredFCT">
            <summary></summary>
            <remarks>ER_WRONG_PARAMETERS_TO_STORED_FCT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NativeFCTNameCollision">
            <summary></summary>
            <remarks>ER_NATIVE_FCT_NAME_COLLISION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DuplicateEntryWithKeyName">
            <summary></summary>
            <remarks>ER_DUP_ENTRY_WITH_KEY_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogPurgeEMFile">
            <summary></summary>
            <remarks>ER_BINLOG_PURGE_EMFILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventCannotCreateInThePast">
            <summary></summary>
            <remarks>ER_EVENT_CANNOT_CREATE_IN_THE_PAST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventCannotAlterInThePast">
            <summary></summary>
            <remarks>ER_EVENT_CANNOT_ALTER_IN_THE_PAST</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveIncident">
            <summary></summary>
            <remarks>ER_SLAVE_INCIDENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoPartitionForGivenValueSilent">
            <summary></summary>
            <remarks>ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogUnsafeStatement">
            <summary></summary>
            <remarks>ER_BINLOG_UNSAFE_STATEMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveFatalError">
            <summary></summary>
            <remarks>ER_SLAVE_FATAL_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveRelayLogReadFailure">
            <summary></summary>
            <remarks>ER_SLAVE_RELAY_LOG_READ_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveRelayLogWriteFailure">
            <summary></summary>
            <remarks>ER_SLAVE_RELAY_LOG_WRITE_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveCreateEventFailure">
            <summary></summary>
            <remarks>ER_SLAVE_CREATE_EVENT_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveMasterComFailure">
            <summary></summary>
            <remarks>ER_SLAVE_MASTER_COM_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.BinLogLoggingImpossible">
            <summary></summary>
            <remarks>ER_BINLOG_LOGGING_IMPOSSIBLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewNoCreationContext">
            <summary></summary>
            <remarks>ER_VIEW_NO_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ViewInvalidCreationContext">
            <summary></summary>
            <remarks>ER_VIEW_INVALID_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.StoredRoutineInvalidCreateionContext">
            <summary></summary>
            <remarks>ER_SR_INVALID_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TiggerCorruptedFile">
            <summary></summary>
            <remarks>ER_TRG_CORRUPTED_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerNoCreationContext">
            <summary></summary>
            <remarks>ER_TRG_NO_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerInvalidCreationContext">
            <summary></summary>
            <remarks>ER_TRG_INVALID_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.EventInvalidCreationContext">
            <summary></summary>
            <remarks>ER_EVENT_INVALID_CREATION_CTX</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TriggerCannotOpenTable">
            <summary></summary>
            <remarks>ER_TRG_CANT_OPEN_TABLE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.CannoCreateSubRoutine">
            <summary></summary>
            <remarks>ER_CANT_CREATE_SROUTINE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveAmbiguousExecMode">
            <summary></summary>
            <remarks>ER_SLAVE_AMBIGOUS_EXEC_MODE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NoFormatDescriptionEventBeforeBinLogStatement">
            <summary></summary>
            <remarks>ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveCorruptEvent">
            <summary></summary>
            <remarks>ER_SLAVE_CORRUPT_EVENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LoadDataInvalidColumn">
            <summary></summary>
            <remarks>ER_LOAD_DATA_INVALID_COLUMN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.LogPurgeNoFile">
            <summary></summary>
            <remarks>ER_LOG_PURGE_NO_FILE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XARBTimeout">
            <summary></summary>
            <remarks>ER_XA_RBTIMEOUT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.XARBDeadlock">
            <summary></summary>
            <remarks>ER_XA_RBDEADLOCK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NeedRePrepare">
            <summary></summary>
            <remarks>ER_NEED_REPREPARE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DelayedNotSupported">
            <summary></summary>
            <remarks>ER_DELAYED_NOT_SUPPORTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningNoMasterInfo">
            <summary></summary>
            <remarks>WARN_NO_MASTER_INFO</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningOptionIgnored">
            <summary></summary>
            <remarks>WARN_OPTION_IGNORED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningPluginDeleteBuiltIn">
            <summary></summary>
            <remarks>WARN_PLUGIN_DELETE_BUILTIN</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningPluginBusy">
            <summary></summary>
            <remarks>WARN_PLUGIN_BUSY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.VariableIsReadonly">
            <summary></summary>
            <remarks>ER_VARIABLE_IS_READONLY</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningEngineTransactionRollback">
            <summary></summary>
            <remarks>ER_WARN_ENGINE_TRANSACTION_ROLLBACK</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveHeartbeatFailure">
            <summary></summary>
            <remarks>ER_SLAVE_HEARTBEAT_FAILURE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SlaveHeartbeatValueOutOfRange">
            <summary></summary>
            <remarks>ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.NDBReplicationSchemaError">
            <summary></summary>
            <remarks>ER_NDB_REPLICATION_SCHEMA_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ConflictFunctionParseError">
            <summary></summary>
            <remarks>ER_CONFLICT_FN_PARSE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ExcepionsWriteError">
            <summary></summary>
            <remarks>ER_EXCEPTIONS_WRITE_ERROR</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongTableComment">
            <summary></summary>
            <remarks>ER_TOO_LONG_TABLE_COMMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooLongFieldComment">
            <summary></summary>
            <remarks>ER_TOO_LONG_FIELD_COMMENT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.FunctionInExistentNameCollision">
            <summary></summary>
            <remarks>ER_FUNC_INEXISTENT_NAME_COLLISION</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DatabaseNameError">
            <summary></summary>
            <remarks>ER_DATABASE_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TableNameErrror">
            <summary></summary>
            <remarks>ER_TABLE_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.PartitionNameError">
            <summary></summary>
            <remarks>ER_PARTITION_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.SubPartitionNameError">
            <summary></summary>
            <remarks>ER_SUBPARTITION_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TemporaryNameError">
            <summary></summary>
            <remarks>ER_TEMPORARY_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.RenamedNameError">
            <summary></summary>
            <remarks>ER_RENAMED_NAME</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.TooManyConcurrentTransactions">
            <summary></summary>
            <remarks>ER_TOO_MANY_CONCURRENT_TRXS</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.WarningNonASCIISeparatorNotImplemented">
            <summary></summary>
            <remarks>WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DebugSyncTimeout">
            <summary></summary>
            <remarks>ER_DEBUG_SYNC_TIMEOUT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.DebugSyncHitLimit">
            <summary></summary>
            <remarks>ER_DEBUG_SYNC_HIT_LIMIT</remarks>
        </member>
        <member name="F:MySql.Data.MySqlClient.MySqlErrorCode.ErrorLast">
            <summary></summary>
            <remarks>ER_ERROR_LAST</remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPacket.WriteInteger(System.Int64,System.Int32)">
            <summary>
            WriteInteger
            </summary>
            <param name="v"></param>
            <param name="numbytes"></param>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlPool">
            <summary>
            Summary description for MySqlPool.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlPool.HasIdleConnections">
            <summary>
            It is assumed that this property will only be used from inside an active
            lock.
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlPool.BeingCleared">
            <summary>
            Indicates whether this pool is being cleared.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPool.GetPooledConnection">
            <summary>
            It is assumed that this method is only called from inside an active lock.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPool.CreateNewPooledConnection">
            <summary>
            It is assumed that this method is only called from inside an active lock.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPool.RemoveConnection(MySql.Data.MySqlClient.Driver)">
            <summary>
            Removes a connection from the in use pool.  The only situations where this method 
            would be called are when a connection that is in use gets some type of fatal exception
            or when the connection is being returned to the pool and it's too old to be 
            returned.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPool.Clear">
            <summary>
            Clears this pool of all idle connections and marks this pool and being cleared
            so all other connections are closed when they are returned.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPool.RemoveOldIdleConnections">
            <summary>
            Remove expired drivers from the idle pool
            </summary>
            <returns></returns>
            <remarks>
            Closing driver is a potentially lengthy operation involving network
            IO. Therefore we do not close expired drivers while holding 
            idlePool.SyncRoot lock. We just remove the old drivers from the idle
            queue and return them to the caller. The caller will need to close 
            them (or let GC close them)
            </remarks>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlPoolManager">
            <summary>
            Summary description for MySqlPoolManager.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlPoolManager.CleanIdleConnections(System.Object)">
            <summary>
            Remove drivers that have been idle for too long.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlScript">
            <summary>
            Provides a class capable of executing a SQL script containing
            multiple SQL statements including CREATE PROCEDURE statements
            that require changing the delimiter
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:MySql.Data.MySqlClient.MySqlScript"/> class.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.#ctor(MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:MySql.Data.MySqlClient.MySqlScript"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:MySql.Data.MySqlClient.MySqlScript"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.#ctor(MySql.Data.MySqlClient.MySqlConnection,System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:MySql.Data.MySqlClient.MySqlScript"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="query">The query.</param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScript.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScript.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScript.Delimiter">
            <summary>
            Gets or sets the delimiter.
            </summary>
            <value>The delimiter.</value>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.Execute">
            <summary>
            Executes this instance.
            </summary>
            <returns>The number of statements executed as part of the script.</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScript.ExecuteAsync">
            <summary>
            Initiates the asynchronous execution of SQL statements.
            </summary>
            <returns>The number of statements executed as part of the script inside.</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlStatementExecutedEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlScriptErrorEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlScriptEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScriptEventArgs.StatementText">
            <summary>
            Gets the statement text.
            </summary>
            <value>The statement text.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScriptEventArgs.Line">
            <summary>
            Gets the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScriptEventArgs.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs.Ignore">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MySql.Data.MySqlClient.MySqlScriptErrorEventArgs"/> is ignore.
            </summary>
            <value><c>true</c> if ignore; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlStream">
            <summary>
            Summary description for MySqlStream.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlStream.ReadPacket">
            <summary>
            ReadPacket is called by NativeDriver to start reading the next
            packet on the stream.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlStream.ReadFully(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream and stores them at given 
            offset in the buffer.
            Throws EndOfStreamException if not all bytes can be read.
            </summary>
            <param name="stream">Stream to read from</param>
            <param name="buffer"> Array to store bytes read from the stream </param>
            <param name="offset">The offset in buffer at which to begin storing the data read from the current stream. </param>
            <param name="count">Number of bytes to read</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlStream.LoadPacket">
            <summary>
            LoadPacket loads up and decodes the header of the incoming packet.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.NativeDriver">
            <summary>
            Summary description for Driver.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.SetDatabase(System.String)">
            <summary>
            Sets the current database for the this connection
            </summary>
            <param name="dbName"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.SetConnectionFlags(MySql.Data.MySqlClient.ClientFlags)">
            <summary>
            Return the appropriate set of connection flags for our
            server capabilities and our user requested options.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.SendQuery(MySql.Data.MySqlClient.MySqlPacket)">
            <summary>
            Query is the method that is called to send all queries to the server
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.SendFileToServer(System.String)">
            <summary>
            Sends the specified file to the server. 
            This supports the LOAD DATA LOCAL INFILE
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.FetchDataRow(System.Int32,System.Int32)">
            <summary>
            FetchDataRow is the method that the data reader calls to see if there is another 
            row to fetch.  In the non-prepared mode, it will simply read the next data packet.
            In the prepared mode (statementId > 0), it will 
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.NativeDriver.ResetTimeout(System.Int32)">
            <summary>
            Execution timeout, in milliseconds. When the accumulated time for network IO exceeds this value
            TimeoutException is thrown. This timeout needs to be reset for every new command
            </summary>
            
        </member>
        <member name="T:MySql.Data.MySqlClient.PreparableStatement">
            <summary>
            Summary description for PreparedStatement.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.PreparableStatement.PrepareCommandText(System.String@)">
            <summary>
            Prepares CommandText for use with the Prepare method
            </summary>
            <returns>Command text stripped of all paramter names</returns>
            <remarks>
            Takes the output of TokenizeSql and creates a single string of SQL
            that only contains '?' markers for each parameter.  It also creates
            the parameterMap array list that includes all the paramter names in the
            order they appeared in the SQL
            </remarks>
        </member>
        <member name="T:MySql.Data.MySqlClient.ReplicationConfigurationElement">
            <summary>
            Used to define a Replication configurarion element in configuration file
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.ReplicationServerGroupConfigurationElement">
            <summary>
            Used to define a Replication server group in configuration file
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.ReplicationServerConfigurationElement">
            <summary>
            Defines a Replication server in configuration file
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Replication.ReplicationManager">
            <summary>
            Manager for Replication and Load Balancing features
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationManager.Groups">
            <summary>
            Returns Replication Server Group List
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.AddGroup(System.String,System.Int32)">
            <summary>
            Adds a Default Server Group to the list
            </summary>
            <param name="name">Group name</param>
            <param name="retryTime">Time between reconnections for failed servers</param>
            <returns>Replication Server Group added</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.AddGroup(System.String,System.String,System.Int32)">
            <summary>
            Adds a Server Group to the list
            </summary>
            <param name="name">Group name</param>
            <param name="groupType">ServerGroup type reference</param>
            <param name="retryTime">Time between reconnections for failed servers</param>
            <returns>Server Group added</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.GetServer(System.String,System.Boolean)">
            <summary>
            Gets the next server from a replication group
            </summary>
            <param name="groupName">Group name</param>
            <param name="isMaster">True if the server to return must be a master</param>
            <returns>Replication Server defined by the Load Balancing plugin</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.GetGroup(System.String)">
            <summary>
            Gets a Server Group by name
            </summary>
            <param name="groupName">Group name</param>
            <returns>Server Group if found, otherwise throws an MySqlException</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.IsReplicationGroup(System.String)">
            <summary>
            Validates if the replication group name exists
            </summary>
            <param name="groupName">Group name to validate</param>
            <returns>True if replication group name is found, otherwise false</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationManager.GetNewConnection(System.String,System.Boolean,MySql.Data.MySqlClient.MySqlConnection)">
            <summary>
            Assigns a new server driver to the connection object
            </summary>
            <param name="groupName">Group name</param>
            <param name="master">True if the server connection to assign must be a master</param>
            <param name="connection">MySqlConnection object where the new driver will be assigned</param>
        </member>
        <member name="T:MySql.Data.MySqlClient.Replication.ReplicationRoundRobinServerGroup">
            <summary>
            Class that implements Round Robing Load Balancing technique
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationRoundRobinServerGroup.GetServer(System.Boolean)">
            <summary>
            Gets an available server based on Round Robin load balancing
            </summary>
            <param name="isMaster">True if the server to return must be a master</param>
            <returns>Next available server</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.Replication.ReplicationServer">
            <summary>
            Represents a server in Replication environment
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServer.Name">
            <summary>
            Server name
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServer.IsMaster">
            <summary>
            Defines if the server is master (True) or slave
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServer.ConnectionString">
            <summary>
            Connection string used to connect to the server
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServer.IsAvailable">
            <summary>
            Defines if the server is available to be considered in load balancing
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.Replication.ReplicationServerGroup">
            <summary>
            Base class used to implement load balancing features
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.#ctor(System.String,System.Int32)">
            <param name="name">Group name</param>
            <param name="retryTime"></param>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.Name">
            <summary>
            Group name
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.RetryTime">
            <summary>
            Retry time between connections to failed servers
            </summary>
        </member>
        <member name="P:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.Servers">
            <summary>
            Servers list in the group
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.AddServer(System.String,System.Boolean,System.String)">
            <summary>
            Adds a server into the group
            </summary>
            <param name="name">Server name</param>
            <param name="isMaster">True if the server to add is master, False for slave server</param>
            <param name="connectionString">Connection string used by this server</param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.RemoveServer(System.String)">
            <summary>
            Removes a server from group
            </summary>
            <param name="name">Server name</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.GetServer(System.String)">
            <summary>
            Gets a server by name
            </summary>
            <param name="name">Server name</param>
            <returns>Replication server</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.GetServer(System.Boolean)">
            <summary>
            Must be implemented. Defines the next server for a custom load balancing implementation.
            </summary>
            <param name="isMaster">Defines if the server to return is a master or any</param>
            <returns>Next server based on the load balancing implementation.
              Null if no available server is found.
            </returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.HandleFailover(MySql.Data.MySqlClient.Replication.ReplicationServer)">
            <summary>
            Handles a failed connection to a server.
            This method can be overrided to implement a custom failover handling
            </summary>
            <param name="server">The failed server</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Replication.ReplicationServerGroup.HandleFailover(MySql.Data.MySqlClient.Replication.ReplicationServer,System.Exception)">
            <summary>
            Handles a failed connection to a server.
            </summary>
            <param name="server">The failed server</param>
            <param name="exception">Exception that caused the failover</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.ResultSet.GetOrdinal(System.String)">
            <summary>
            return the ordinal for the given column name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:MySql.Data.MySqlClient.ResultSet.Item(System.Int32)">
            <summary>
            Retrieve the value as the given column index
            </summary>
            <param name="index">The column value to retrieve</param>
            <returns>The value as the given column</returns>
        </member>
        <member name="M:MySql.Data.MySqlClient.ResultSet.Close">
            <summary>
            Closes the current resultset, dumping any data still on the wire
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.ResultSet.LoadColumns(System.Int32)">
            <summary>
            Loads the column metadata for the current resultset
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.SchemaProvider.GetForeignKeysOnTable(MySql.Data.MySqlClient.MySqlSchemaCollection,MySql.Data.MySqlClient.MySqlSchemaRow,System.String,System.Boolean)">
            <summary>
            GetForeignKeysOnTable retrieves the foreign keys on the given table.
            Since MySQL supports foreign keys on versions prior to 5.0, we can't  use
            information schema.  MySQL also does not include any type of SHOW command
            for foreign keys so we have to resort to use SHOW CREATE TABLE and parsing
            the output.
            </summary>
            <param name="fkTable">The table to store the key info in.</param>
            <param name="tableToParse">The table to get the foeign key info for.</param>
            <param name="filterName">Only get foreign keys that match this name.</param>
            <param name="includeColumns">Should column information be included in the table.</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.Statement.SerializeParameter(MySql.Data.MySqlClient.MySqlParameterCollection,MySql.Data.MySqlClient.MySqlPacket,System.String,System.Int32)">
            <summary>
            Serializes the given parameter to the given memory stream
            </summary>
            <remarks>
            <para>This method is called by PrepareSqlBuffers to convert the given
            parameter to bytes and write those bytes to the given memory stream.
            </para>
            </remarks>
            <returns>True if the parameter was successfully serialized, false otherwise.</returns>
        </member>
        <member name="T:MySql.Data.MySqlClient.StoredProcedure">
            <summary>
            Summary description for StoredProcedure.
            </summary>
        </member>
        <member name="T:MySql.Data.MySqlClient.TimedStream">
            <summary>
            Stream that supports timeout of IO operations.
            This class is used is used to support timeouts for SQL command, where a 
            typical operation involves several network reads/writes. 
            Timeout here is defined as the accumulated duration of all IO operations.
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.TimedStream.#ctor(System.IO.Stream)">
            <summary>
            Construct a TimedStream
            </summary>
            <param name="baseStream"> Undelying stream</param>
        </member>
        <member name="M:MySql.Data.MySqlClient.TimedStream.ShouldResetStreamTimeout(System.Int32,System.Int32)">
            <summary>
            Figure out whether it is necessary to reset timeout on stream.
            We track the current value of timeout and try to avoid
            changing it too often, because setting Read/WriteTimeout property
            on network stream maybe a slow operation that involves a system call 
            (setsockopt). Therefore, we allow a small difference, and do not 
            reset timeout if current value is slightly greater than the requested
            one (within 0.1 second).
            </summary>
        </member>
        <member name="M:MySql.Data.MySqlClient.TimedStream.HandleException(System.Exception)">
            <summary>
            Common handler for IO exceptions.
            Resets timeout to infinity if timeout exception is 
            detected and stops the times.
            </summary>
            <param name="e">original exception</param>
        </member>
        <member name="T:MySql.Data.MySqlClient.MySqlTransaction">
            <summary>
      Represents a SQL transaction to be made in a MySQL database. This class cannot be inherited.
    </summary><remarks>
      The application creates a <B>MySqlTransaction</B> object by calling <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" />
      on the <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> object. All subsequent operations associated with the
      transaction (for example, committing or aborting the transaction), are performed on the
      <B>MySqlTransaction</B> object.
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and a <B>MySqlTransaction</B>.
      It also demonstrates how to use the <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" />,
      <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" />, and <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback" /> methods.
      <code lang="vbnet">
        Public Sub RunTransaction(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()

        Dim myCommand As MySqlCommand = myConnection.CreateCommand()
        Dim myTrans As MySqlTransaction

        ' Start a local transaction
        myTrans = myConnection.BeginTransaction()
        ' Must assign both transaction object and connection
        ' to Command object for a pending local transaction
        myCommand.Connection = myConnection
        myCommand.Transaction = myTrans

        Try
        myCommand.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (100, 'Description')"
        myCommand.ExecuteNonQuery()
        myCommand.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (101, 'Description')"
        myCommand.ExecuteNonQuery()
        myTrans.Commit()
        Console.WriteLine("Both records are written to database.")
        Catch e As Exception
        Try
        myTrans.Rollback()
        Catch ex As MySqlException
        If Not myTrans.Connection Is Nothing Then
        Console.WriteLine("An exception of type " &amp; ex.GetType().ToString() &amp; _
        " was encountered while attempting to roll back the transaction.")
        End If
        End Try

        Console.WriteLine("An exception of type " &amp; e.GetType().ToString() &amp; _
        "was encountered while inserting the data.")
        Console.WriteLine("Neither record was written to database.")
        Finally
        myConnection.Close()
        End Try
        End Sub 'RunTransaction
      </code>
      <code lang="C#">
        public void RunTransaction(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();

        MySqlCommand myCommand = myConnection.CreateCommand();
        MySqlTransaction myTrans;

        // Start a local transaction
        myTrans = myConnection.BeginTransaction();
        // Must assign both transaction object and connection
        // to Command object for a pending local transaction
        myCommand.Connection = myConnection;
        myCommand.Transaction = myTrans;

        try
        {
        myCommand.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (100, 'Description')";
        myCommand.ExecuteNonQuery();
        myCommand.CommandText = "Insert into Region (RegionID, RegionDescription) VALUES (101, 'Description')";
        myCommand.ExecuteNonQuery();
        myTrans.Commit();
        Console.WriteLine("Both records are written to database.");
        }
        catch(Exception e)
        {
        try
        {
        myTrans.Rollback();
        }
        catch (MySqlException ex)
        {
        if (myTrans.Connection != null)
        {
        Console.WriteLine("An exception of type " + ex.GetType() +
        " was encountered while attempting to roll back the transaction.");
        }
        }

        Console.WriteLine("An exception of type " + e.GetType() +
        " was encountered while inserting the data.");
        Console.WriteLine("Neither record was written to database.");
        }
        finally
        {
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlTransaction.Connection">
            <summary>
            Gets the <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object associated with the transaction, or a null reference (Nothing in Visual Basic) if the transaction is no longer valid.
            </summary>
            <value>The <see cref="T:MySql.Data.MySqlClient.MySqlConnection"/> object associated with this transaction.</value>
            <remarks>
            A single application may have multiple database connections, each 
            with zero or more transactions. This property enables you to 
            determine the connection object associated with a particular 
            transaction created by <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction"/>.
            </remarks>
        </member>
        <member name="P:MySql.Data.MySqlClient.MySqlTransaction.IsolationLevel">
            <summary>
            Specifies the <see cref="P:MySql.Data.MySqlClient.MySqlTransaction.IsolationLevel"/> for this transaction.
            </summary>
            <value>
            The <see cref="P:MySql.Data.MySqlClient.MySqlTransaction.IsolationLevel"/> for this transaction. The default is <b>ReadCommitted</b>.
            </value>
            <remarks>
            Parallel transactions are not supported. Therefore, the IsolationLevel 
            applies to the entire transaction.
            </remarks>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlTransaction.Commit">
            <summary>
      Commits the database transaction.
    </summary><remarks>
      The <b>Commit</b> method is equivalent to the MySQL SQL statement
      COMMIT.
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and a
      <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />. It also demonstrates how to use the
      <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" />, <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" />, and <B>Rollback</B>
      methods.
      <code lang="vbnet">
        Public Sub RunSqlTransaction(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()

        Dim myCommand As MySqlCommand = myConnection.CreateCommand()
        Dim myTrans As MySqlTransaction

        ' Start a local transaction
        myTrans = myConnection.BeginTransaction()

        ' Must assign both transaction object and connection
        ' to Command object for a pending local transaction
        myCommand.Connection = myConnection
        myCommand.Transaction = myTrans

        Try
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (100, 'Description')"
        myCommand.ExecuteNonQuery()
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (101, 'Description')"
        myCommand.ExecuteNonQuery()
        myTrans.Commit()
        Console.WriteLine("Success.")
        Catch e As Exception
        Try
        myTrans.Rollback()
        Catch ex As MySqlException
        If Not myTrans.Connection Is Nothing Then
        Console.WriteLine("An exception of type " &amp; ex.GetType().ToString() &amp; _
        " was encountered while attempting to roll back the transaction.")
        End If
        End Try

        Console.WriteLine("An exception of type " &amp; e.GetType().ToString() &amp; _
        "was encountered while inserting the data.")
        Console.WriteLine("Neither record was written to database.")
        Finally
        myConnection.Close()
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void RunSqlTransaction(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();

        MySqlCommand myCommand = myConnection.CreateCommand();
        MySqlTransaction myTrans;

        // Start a local transaction
        myTrans = myConnection.BeginTransaction();
        // Must assign both transaction object and connection
        // to Command object for a pending local transaction
        myCommand.Connection = myConnection;
        myCommand.Transaction = myTrans;

        try
        {
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (100, 'Description')";
        myCommand.ExecuteNonQuery();
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (101, 'Description')";
        myCommand.ExecuteNonQuery();
        myTrans.Commit();
        Console.WriteLine("Both records are written to database.");
        }
        catch(Exception e)
        {
        try
        {
        myTrans.Rollback();
        }
        catch (MySqlException ex)
        {
        if (myTrans.Connection != null)
        {
        Console.WriteLine("An exception of type " + ex.GetType() +
        " was encountered while attempting to roll back the transaction.");
        }
        }

        Console.WriteLine("An exception of type " + e.GetType() +
        " was encountered while inserting the data.");
        Console.WriteLine("Neither record was written to database.");
        }
        finally
        {
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="M:MySql.Data.MySqlClient.MySqlTransaction.Rollback">
            <summary>
      Rolls back a transaction from a pending state.
    </summary><remarks>
      The Rollback method is equivalent to the MySQL statement ROLLBACK.
      The transaction can only be rolled back from a pending state
      (after BeginTransaction has been called, but before Commit is
      called).
    </remarks><example>
      The following example creates a <see cref="T:MySql.Data.MySqlClient.MySqlConnection" /> and a
      <see cref="T:MySql.Data.MySqlClient.MySqlTransaction" />. It also demonstrates how to use the
      <see cref="M:MySql.Data.MySqlClient.MySqlConnection.BeginTransaction" />, <see cref="M:MySql.Data.MySqlClient.MySqlTransaction.Commit" />, and <B>Rollback</B>
      methods.
      <code lang="vbnet">
        Public Sub RunSqlTransaction(myConnString As String)
        Dim myConnection As New MySqlConnection(myConnString)
        myConnection.Open()

        Dim myCommand As MySqlCommand = myConnection.CreateCommand()
        Dim myTrans As MySqlTransaction

        ' Start a local transaction
        myTrans = myConnection.BeginTransaction()

        ' Must assign both transaction object and connection
        ' to Command object for a pending local transaction
        myCommand.Connection = myConnection
        myCommand.Transaction = myTrans

        Try
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (100, 'Description')"
        myCommand.ExecuteNonQuery()
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (101, 'Description')"
        myCommand.ExecuteNonQuery()
        myTrans.Commit()
        Console.WriteLine("Success.")
        Catch e As Exception
        Try
        myTrans.Rollback()
        Catch ex As MySqlException
        If Not myTrans.Connection Is Nothing Then
        Console.WriteLine("An exception of type " &amp; ex.GetType().ToString() &amp; _
        " was encountered while attempting to roll back the transaction.")
        End If
        End Try

        Console.WriteLine("An exception of type " &amp; e.GetType().ToString() &amp; _
        "was encountered while inserting the data.")
        Console.WriteLine("Neither record was written to database.")
        Finally
        myConnection.Close()
        End Try
        End Sub
      </code>
      <code lang="C#">
        public void RunSqlTransaction(string myConnString)
        {
        MySqlConnection myConnection = new MySqlConnection(myConnString);
        myConnection.Open();

        MySqlCommand myCommand = myConnection.CreateCommand();
        MySqlTransaction myTrans;

        // Start a local transaction
        myTrans = myConnection.BeginTransaction();
        // Must assign both transaction object and connection
        // to Command object for a pending local transaction
        myCommand.Connection = myConnection;
        myCommand.Transaction = myTrans;

        try
        {
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (100, 'Description')";
        myCommand.ExecuteNonQuery();
        myCommand.CommandText = "Insert into mytable (id, desc) VALUES (101, 'Description')";
        myCommand.ExecuteNonQuery();
        myTrans.Commit();
        Console.WriteLine("Both records are written to database.");
        }
        catch(Exception e)
        {
        try
        {
        myTrans.Rollback();
        }
        catch (MySqlException ex)
        {
        if (myTrans.Connection != null)
        {
        Console.WriteLine("An exception of type " + ex.GetType() +
        " was encountered while attempting to roll back the transaction.");
        }
        }

        Console.WriteLine("An exception of type " + e.GetType() +
        " was encountered while inserting the data.");
        Console.WriteLine("Neither record was written to database.");
        }
        finally
        {
        myConnection.Close();
        }
        }
      </code>
    </example>
        </member>
        <member name="T:MySql.Data.Common.LowResolutionStopwatch">
            <summary>
            This class is modeled after .NET Stopwatch. It provides better
            performance (no system calls).It is however less precise than
            .NET Stopwatch, measuring in milliseconds. It is adequate to use
            when high-precision is not required (e.g for measuring IO timeouts),
            but not for other tasks.
            </summary>
        </member>
        <member name="M:MySql.Data.Common.MySqlTokenizer.ReadQuotedToken(System.Char)">
            <summary>
             Read a single quoted identifier from the stream
            </summary>
            <param name="quoteChar"></param>
            <returns></returns>
        </member>
        <member name="T:MySql.Data.Common.SharedMemory">
            <summary>
            Helper class to encapsulate shared memory functionality
            Also cares of proper cleanup of file mapping object and cew
            </summary>
        </member>
        <member name="T:MySql.Data.Common.SharedMemoryStream">
            <summary>
            Summary description for SharedMemoryStream.
            </summary>
        </member>
        <member name="M:MySql.Data.Common.Platform.#ctor">
            <summary>
            By creating a private ctor, we keep the compiler from creating a default ctor
            </summary>
        </member>
        <member name="M:MySql.Data.Common.QueryNormalizer.ProcessMathSymbols(System.Collections.Generic.List{MySql.Data.Common.Token})">
            <summary>
            Mark - or + signs that are unary ops as no output
            </summary>
            <param name="tok"></param>
        </member>
        <member name="M:MySql.Data.Common.Ssl.GetClientCertificates">
            <summary>
            Retrieve client SSL certificates. Dependent on connection string 
            settings we use either file or store based certificates.
            </summary>
        </member>
        <member name="T:MySql.Data.Common.StreamCreator">
            <summary>
            Summary description for StreamCreator.
            </summary>
        </member>
        <member name="M:MySql.Data.Common.StreamCreator.SetKeepAlive(System.Net.Sockets.Socket,System.UInt32)">
            <summary>
            Set the keepalive timeout on the socket.
            </summary>
            <param name="s">The socket object.</param>
            <param name="time">The keepalive timeout, in seconds.</param>
        </member>
        <member name="T:MySql.Data.Common.DBVersion">
            <summary>
            Summary description for Version.
            </summary>
        </member>
        <member name="T:MySql.Data.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.AdapterIsNull">
            <summary>
              Looks up a localized string similar to Improper MySqlCommandBuilder state: adapter is null.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.AdapterSelectIsNull">
            <summary>
              Looks up a localized string similar to Improper MySqlCommandBuilder state: adapter&apos;s SelectCommand is null.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.AttemptToAccessBeforeRead">
            <summary>
              Looks up a localized string similar to Invalid attempt to access a field before calling Read().
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.AuthenticationFailed">
            <summary>
              Looks up a localized string similar to Authentication to host &apos;{0}&apos; for user &apos;{1}&apos; using method &apos;{2}&apos; failed with message: {3}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.AuthenticationMethodNotSupported">
            <summary>
              Looks up a localized string similar to Authentication method &apos;{0}&apos; not supported by any of the available plugins..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.BadVersionFormat">
            <summary>
              Looks up a localized string similar to Version string not in acceptable format.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.BufferCannotBeNull">
            <summary>
              Looks up a localized string similar to  The buffer cannot be null.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.BufferNotLargeEnough">
            <summary>
              Looks up a localized string similar to  Buffer is not large enough.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CancelNeeds50">
            <summary>
              Looks up a localized string similar to Canceling an executing query requires MySQL 5.0 or higher..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CancelNotSupported">
            <summary>
              Looks up a localized string similar to Canceling an active query is only supported on MySQL 5.0.0 and above. .
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CanNotDeriveParametersForTextCommands">
            <summary>
              Looks up a localized string similar to Parameters can only be derived for commands using the StoredProcedure command type..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CBMultiTableNotSupported">
            <summary>
              Looks up a localized string similar to MySqlCommandBuilder does not support multi-table statements.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CBNoKeyColumn">
            <summary>
              Looks up a localized string similar to MySqlCommandBuilder cannot operate on tables with no unique or key columns.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ChaosNotSupported">
            <summary>
              Looks up a localized string similar to Chaos isolation level is not supported .
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CommandTextNotInitialized">
            <summary>
              Looks up a localized string similar to The CommandText property has not been properly initialized..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CompressionNotSupported">
            <summary>
              Looks up a localized string similar to Compression is not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ConnectionAlreadyOpen">
            <summary>
              Looks up a localized string similar to The connection is already open..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ConnectionBroken">
            <summary>
              Looks up a localized string similar to Connection unexpectedly terminated..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ConnectionMustBeOpen">
            <summary>
              Looks up a localized string similar to Connection must be valid and open.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ConnectionNotOpen">
            <summary>
              Looks up a localized string similar to The connection is not open..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ConnectionNotSet">
            <summary>
              Looks up a localized string similar to The connection property has not been set or is null..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CouldNotFindColumnName">
            <summary>
              Looks up a localized string similar to Could not find specified column in results: {0}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CountCannotBeNegative">
            <summary>
              Looks up a localized string similar to  Count cannot be negative.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.CSNoSetLength">
            <summary>
              Looks up a localized string similar to SetLength is not a valid operation on CompressedStream.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.DataNotInSupportedFormat">
            <summary>
              Looks up a localized string similar to The given value was not in a supported format..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.DataReaderOpen">
            <summary>
              Looks up a localized string similar to There is already an open DataReader associated with this Connection which must be closed first..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.DefaultEncodingNotFound">
            <summary>
              Looks up a localized string similar to The default connection encoding was not found. Please report this as a bug along with your connection string and system details..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.DistributedTxnNotSupported">
            <summary>
              Looks up a localized string similar to MySQL Connector/Net does not currently support distributed transactions..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ErrorCreatingSocket">
            <summary>
              Looks up a localized string similar to Error creating socket connection.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FatalErrorDuringExecute">
            <summary>
              Looks up a localized string similar to Fatal error encountered during command execution..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FatalErrorDuringRead">
            <summary>
              Looks up a localized string similar to Fatal error encountered during data read..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FatalErrorReadingResult">
            <summary>
              Looks up a localized string similar to Fatal error encountered attempting to read the resultset..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FileBasedCertificateNotSupported">
            <summary>
              Looks up a localized string similar to File based certificates are only supported when connecting to MySQL Server 5.1 or greater..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FromAndLengthTooBig">
            <summary>
              Looks up a localized string similar to From index and length use more bytes than from contains.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.FromIndexMustBeValid">
            <summary>
              Looks up a localized string similar to From index must be a valid index inside the from buffer.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.GetHostEntryFailed">
            <summary>
              Looks up a localized string similar to Call to GetHostEntry failed after {0} while querying for hostname &apos;{1}&apos;: SocketErrorCode={2}, ErrorCode={3}, NativeErrorCode={4}..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.HardProcQuery">
            <summary>
              Looks up a localized string similar to Retrieving procedure metadata for {0} from server..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ImproperValueFormat">
            <summary>
              Looks up a localized string similar to Value has an unsupported format..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.IncorrectTransmission">
            <summary>
              Looks up a localized string similar to An incorrect response was received from the server..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.IndexAndLengthTooBig">
            <summary>
              Looks up a localized string similar to Index and length use more bytes than to has room for.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.IndexMustBeValid">
            <summary>
              Looks up a localized string similar to Index must be a valid position in the buffer.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidColumnOrdinal">
            <summary>
              Looks up a localized string similar to You have specified an invalid column ordinal..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidConnectionStringValue">
            <summary>
              Looks up a localized string similar to The requested value &apos;{0}&apos; is invalid for the given keyword &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidMicrosecondValue">
            <summary>
              Looks up a localized string similar to Microsecond must be a value between 0 and 999999..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidMillisecondValue">
            <summary>
              Looks up a localized string similar to Millisecond must be a value between 0 and 999. For more precision use Microsecond..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidProcName">
            <summary>
              Looks up a localized string similar to Procedure or function &apos;{0}&apos; cannot be found in database &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.InvalidValueForBoolean">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is an illegal value for a boolean option..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.KeywordNoNull">
            <summary>
              Looks up a localized string similar to Keyword does not allow null values..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.KeywordNotSupported">
            <summary>
              Looks up a localized string similar to Option not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.keywords">
             <summary>
               Looks up a localized string similar to ACCESSIBLE
            ADD
            ALL
            ALTER
            ANALYZE
            AND
            AS
            ASC
            ASENSITIVE
            BEFORE
            BEGIN
            BETWEEN
            BIGINT
            BINARY
            BLOB
            BOTH
            BY
            CALL
            CASCADE
            CASE
            CHANGE
            CHAR
            CHARACTER
            CHECK
            COLLATE
            COLUMN
            COMMIT
            CONDITION
            CONNECTION
            CONSTRAINT
            CONTINUE
            CONVERT
            CREATE
            CROSS
            CURRENT_DATE
            CURRENT_TIME
            CURRENT_TIMESTAMP
            CURRENT_USER
            CURSOR
            DATABASE
            DATABASES
            DAY_HOUR
            DAY_MICROSECOND
            DAY_MINUTE
            DAY_SECOND
            DEC
            DECIMAL
            DECLARE
            DEFAULT
            DELAYED
            DELETE
            DESC
            DESCRIBE
            DETERMINISTIC
            DISTINCT
            DISTINCTROW
            D [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:MySql.Data.Resources.MixedParameterNamingNotAllowed">
            <summary>
              Looks up a localized string similar to Mixing named and unnamed parameters is not allowed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.MoreThanOneOPRow">
            <summary>
              Looks up a localized string similar to INTERNAL ERROR:  More than one output parameter row detected..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.MultipleConnectionsInTransactionNotSupported">
            <summary>
              Looks up a localized string similar to Multiple simultaneous connections or connections with different connection strings inside the same transaction are not currently supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NamedPipeNoSeek">
            <summary>
              Looks up a localized string similar to NamedPipeStream does not support seeking.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NamedPipeNoSetLength">
            <summary>
              Looks up a localized string similar to NamedPipeStream doesn&apos;t support SetLength.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NewValueShouldBeMySqlParameter">
            <summary>
              Looks up a localized string similar to The new value must be a MySqlParameter object..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NextResultIsClosed">
            <summary>
              Looks up a localized string similar to Invalid attempt to call NextResult when the reader is closed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NoBodiesAndTypeNotSet">
            <summary>
              Looks up a localized string similar to When calling stored procedures and &apos;Use Procedure Bodies&apos; is false, all parameters must have their type explicitly set..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NoNestedTransactions">
            <summary>
              Looks up a localized string similar to Nested transactions are not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NoServerSSLSupport">
            <summary>
              Looks up a localized string similar to The host {0} does not support SSL connections..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NoUnixSocketsOnWindows">
            <summary>
              Looks up a localized string similar to Unix sockets are not supported on Windows..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.NoWindowsIdentity">
            <summary>
              Looks up a localized string similar to Cannot retrieve Windows identity for current user. Connections that use  IntegratedSecurity cannot be  pooled. Use either &apos;ConnectionReset=true&apos; or  &apos;Pooling=false&apos; in the connection string to fix..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ObjectDisposed">
            <summary>
              Looks up a localized string similar to The object is not open or has been disposed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.OffsetCannotBeNegative">
            <summary>
              Looks up a localized string similar to  Offset cannot be negative.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.OffsetMustBeValid">
            <summary>
              Looks up a localized string similar to Offset must be a valid position in buffer.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.OldPasswordsNotSupported">
            <summary>
              Looks up a localized string similar to Authentication with old password no longer supported, use 4.1 style passwords..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.OptionNotCurrentlySupported">
            <summary>
              Looks up a localized string similar to The option &apos;{0}&apos; is not currently supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterAlreadyDefined">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; has already been defined..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterCannotBeNegative">
            <summary>
              Looks up a localized string similar to Parameter cannot have a negative value.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter cannot be null.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterIndexNotFound">
            <summary>
              Looks up a localized string similar to Parameter index was not found in Parameter Collection..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterIsInvalid">
            <summary>
              Looks up a localized string similar to Parameter is invalid..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterMustBeDefined">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; must be defined..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ParameterNotFoundDuringPrepare">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; was not found during prepare..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PasswordMustHaveLegalChars">
            <summary>
              Looks up a localized string similar to Password must be valid and contain length characters.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonCategoryHelp">
            <summary>
              Looks up a localized string similar to This category includes a series of counters for MySQL.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonCategoryName">
            <summary>
              Looks up a localized string similar to .NET Data Provider for MySQL.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonHardProcHelp">
            <summary>
              Looks up a localized string similar to The number of times a procedures metadata had to be queried from the server..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonHardProcName">
            <summary>
              Looks up a localized string similar to Hard Procedure Queries.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonSoftProcHelp">
            <summary>
              Looks up a localized string similar to The number of times a procedures metadata was retrieved from the client-side cache..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.PerfMonSoftProcName">
            <summary>
              Looks up a localized string similar to Soft Procedure Queries.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ProcAndFuncSameName">
            <summary>
              Looks up a localized string similar to same name are not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.QueryTooLarge">
            <summary>
              Looks up a localized string similar to Packets larger than max_allowed_packet are not allowed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ReadFromStreamFailed">
            <summary>
              Looks up a localized string similar to Reading from the stream has failed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ReadingPriorColumnUsingSeqAccess">
            <summary>
              Looks up a localized string similar to Invalid attempt to read a prior column using SequentialAccess.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ReplicatedConnectionsAllowOnlyReadonlyStatements">
            <summary>
              Looks up a localized string similar to Replicated connections allow only readonly statements..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.Replication_ConnectionAttemptFailed">
            <summary>
              Looks up a localized string similar to Attempt to connect to &apos;{0}&apos; server failed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.Replication_NoAvailableServer">
            <summary>
              Looks up a localized string similar to No available server found..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ReplicationGroupNotFound">
            <summary>
              Looks up a localized string similar to Replication group &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ReplicationServerNotFound">
            <summary>
              Looks up a localized string similar to Replicated server not found: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.RoutineNotFound">
            <summary>
              Looks up a localized string similar to Routine &apos;{0}&apos; cannot be found. Either check the spelling or make sure you have sufficient rights to execute the routine..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.RoutineRequiresReturnParameter">
            <summary>
              Looks up a localized string similar to Attempt to call stored function &apos;{0}&apos; without specifying a return parameter.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ServerTooOld">
            <summary>
              Looks up a localized string similar to Connector/Net no longer supports server versions prior to 5.0.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.SnapshotNotSupported">
            <summary>
              Looks up a localized string similar to Snapshot isolation level is not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.SocketNoSeek">
            <summary>
              Looks up a localized string similar to Socket streams do not support seeking.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.SoftProcQuery">
            <summary>
              Looks up a localized string similar to Retrieving procedure metadata for {0} from procedure cache..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.SPNotSupported">
            <summary>
              Looks up a localized string similar to Stored procedures are not supported on this version of MySQL.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.SslConnectionError">
            <summary>
              Looks up a localized string similar to SSL Connection error..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.StreamAlreadyClosed">
            <summary>
              Looks up a localized string similar to The stream has already been closed.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.StreamNoRead">
            <summary>
              Looks up a localized string similar to  The stream does not support reading.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.StreamNoWrite">
            <summary>
              Looks up a localized string similar to The stream does not support writing.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.Timeout">
            <summary>
              Looks up a localized string similar to Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TimeoutGettingConnection">
            <summary>
              Looks up a localized string similar to error connecting: Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceCloseConnection">
            <summary>
              Looks up a localized string similar to {0}: Connection Closed.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceErrorMoreThanMaxValueConnections">
            <summary>
              Looks up a localized string similar to Unable to trace.  There are more than Int32.MaxValue connections in use..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceFetchError">
            <summary>
              Looks up a localized string similar to {0}: Error encountered during row fetch. Number = {1}, Message={2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceOpenConnection">
            <summary>
              Looks up a localized string similar to {0}: Connection Opened: connection string = &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceOpenResultError">
            <summary>
              Looks up a localized string similar to {0}: Error encountered attempting to open result: Number={1}, Message={2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceQueryDone">
            <summary>
              Looks up a localized string similar to {0}: Query Closed.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceQueryNormalized">
            <summary>
              Looks up a localized string similar to {0}: Query Normalized: {2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceQueryOpened">
            <summary>
              Looks up a localized string similar to {0}: Query Opened: {2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceResult">
            <summary>
              Looks up a localized string similar to {0}: Resultset Opened: field(s) = {1}, affected rows = {2}, inserted id = {3}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceResultClosed">
            <summary>
              Looks up a localized string similar to {0}: Resultset Closed. Total rows={1}, skipped rows={2}, size (bytes)={3}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceSetDatabase">
            <summary>
              Looks up a localized string similar to {0}: Set Database: {1}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceStatementClosed">
            <summary>
              Looks up a localized string similar to {0}: Statement closed: statement id = {1}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceStatementExecuted">
            <summary>
              Looks up a localized string similar to {0}: Statement executed: statement id = {1}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceStatementPrepared">
            <summary>
              Looks up a localized string similar to {0}: Statement prepared: sql=&apos;{1}&apos;, statement id={2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceUAWarningBadIndex">
            <summary>
              Looks up a localized string similar to {0}: Usage Advisor Warning: Query is using a bad index.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceUAWarningFieldConversion">
            <summary>
              Looks up a localized string similar to {0}: Usage Advisor Warning: The field &apos;{2}&apos; was converted to the following types: {3}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceUAWarningNoIndex">
            <summary>
              Looks up a localized string similar to {0}: Usage Advisor Warning: Query does not use an index.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceUAWarningSkippedColumns">
            <summary>
              Looks up a localized string similar to {0}: Usage Advisor Warning: The following columns were not accessed: {2}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceUAWarningSkippedRows">
            <summary>
              Looks up a localized string similar to {0}: Usage Advisor Warning: Skipped {2} rows. Consider a more focused query..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TraceWarning">
            <summary>
              Looks up a localized string similar to {0}: MySql Warning: Level={1}, Code={2}, Message={3}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TypeIsNotCommandInterceptor">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not derived from BaseCommandInterceptor.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.TypeIsNotExceptionInterceptor">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; is not derived from BaseExceptionInterceptor.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToConnectToHost">
            <summary>
              Looks up a localized string similar to Unable to connect to any of the specified MySQL hosts..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToCreateAuthPlugin">
            <summary>
              Looks up a localized string similar to Unable to create plugin for authentication method &apos;{0}&apos;. Please see inner exception for details..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToDeriveParameters">
            <summary>
              Looks up a localized string similar to Unable to derive stored routine parameters.  The &apos;Parameters&apos; information schema table is not available and access to the stored procedure body has been disabled..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToEnableQueryAnalysis">
            <summary>
              Looks up a localized string similar to Unable to enable query analysis.  Be sure the MySql.Data.EMTrace assembly is properly located and registered..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToEnumerateUDF">
            <summary>
              Looks up a localized string similar to An error occured attempting to enumerate the user-defined functions.  Do you have SELECT privileges on the mysql.func table?.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToExecuteSP">
            <summary>
              Looks up a localized string similar to Unable to execute stored procedure &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToParseFK">
            <summary>
              Looks up a localized string similar to There was an error parsing the foreign key definition..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToRetrieveParameters">
            <summary>
              Looks up a localized string similar to Unable to retrieve stored procedure metadata for routine &apos;{0}&apos;.  Either grant  SELECT privilege to mysql.proc for this user or use &quot;check parameters=false&quot; with  your connection string..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnableToStartSecondAsyncOp">
            <summary>
              Looks up a localized string similar to Unable to start a second async operation while one is running..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnixSocketsNotSupported">
            <summary>
              Looks up a localized string similar to Unix sockets are not supported on Windows.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnknownAuthenticationMethod">
            <summary>
              Looks up a localized string similar to Unknown authentication method &apos;{0}&apos; was requested..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.UnknownConnectionProtocol">
            <summary>
              Looks up a localized string similar to Unknown connection protocol.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ValueNotCorrectType">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; is not of the correct type..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.ValueNotSupportedForGuid">
            <summary>
              Looks up a localized string similar to The requested column value could not be treated as or conveted to a Guid..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.WinAuthNotSupportOnPlatform">
            <summary>
              Looks up a localized string similar to Windows authentication connections are not supported on {0}.
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.WriteToStreamFailed">
            <summary>
              Looks up a localized string similar to Writing to the stream failed..
            </summary>
        </member>
        <member name="P:MySql.Data.Resources.WrongParameterName">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; is not found but a parameter with the name &apos;{1}&apos; is found. Parameter names must include the leading parameter marker..
            </summary>
        </member>
        <member name="T:MySql.Data.ResourcesX">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.ErrorParsingConfigFile">
            <summary>
              Looks up a localized string similar to Error parsing configuration file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidCollationId">
            <summary>
              Looks up a localized string similar to Collation with id &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidConnectionData">
            <summary>
              Looks up a localized string similar to Connection Data is incorrect..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidConnectionString">
            <summary>
              Looks up a localized string similar to The connection string is invalid..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidConnectionStringAttribute">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid connection string attribute..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidDecimalFormat">
            <summary>
              Looks up a localized string similar to Decimal (BCD) format is invalid..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidNameIndex">
            <summary>
              Looks up a localized string similar to {0} is not a valid column name in the row..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidRowIndex">
            <summary>
              Looks up a localized string similar to {0} is not a valid index for the row..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidUriData">
            <summary>
              Looks up a localized string similar to Invalid Uri .
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.InvalidUriQuery">
            <summary>
              Looks up a localized string similar to Invalid uri query value.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.JsonUriOrHost">
            <summary>
              Looks up a localized string similar to Json configuration must contain &apos;uri&apos; or &apos;host&apos; but not both..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.KeywordNotSupported">
            <summary>
              Looks up a localized string similar to Keyword not supported..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.MoreThanOneDocumentId">
            <summary>
              Looks up a localized string similar to More than one document id was generated.  Please use the DocumentIds property instead..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.NoDataAtIndex">
            <summary>
              Looks up a localized string similar to There is no data at index {0}.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.NoHost">
            <summary>
              Looks up a localized string similar to No &apos;host&apos; has been specified..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.NoMoreData">
            <summary>
              Looks up a localized string similar to No more data in resultset..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.NoObjectFound">
            <summary>
              Looks up a localized string similar to Object &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.NoPlaceholders">
            <summary>
              Looks up a localized string similar to No placeholders..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.PathNotFound">
            <summary>
              Looks up a localized string similar to Path not found &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.RemovingRequiresId">
            <summary>
              Looks up a localized string similar to Removing a document from a collection requires an _id property..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.ThrowingAwayResults">
            <summary>
              Looks up a localized string similar to The process of closing the resultset and resulted in results being lost..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.UnableToConnect">
            <summary>
              Looks up a localized string similar to Unable to connect to any specified host..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.UnableToDecodeDataValue">
            <summary>
              Looks up a localized string similar to Unable to read or decode data value..
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.UnexpectedEndOfPacketFound">
            <summary>
              Looks up a localized string similar to Unexpected end of packet found while reading data values.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.UnknownPlaceholder">
            <summary>
              Looks up a localized string similar to Unknown placeholder :{0}.
            </summary>
        </member>
        <member name="P:MySql.Data.ResourcesX.ValueNotCorrectType">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; is not of the correct type..
            </summary>
        </member>
        <member name="T:MySql.Data.Types.MySqlBit">
            <summary>
            Summary description for MySqlUInt64.
            </summary>
        </member>
        <member name="T:MySql.Data.Types.MySqlConversionException">
            <summary>
            An exception thrown by MySQL when a type conversion does not succeed.
            </summary>
        </member>
        <member name="M:MySql.Data.Types.MySqlConversionException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:MySql.Data.Types.MySqlConversionException"/> class with a specified error message. </summary>
            <param name="msg">Message describing the error.</param>
        </member>
        <member name="T:MySql.Data.Types.MySqlDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new <b>MySqlDateTime</b> object by setting the individual time properties to
            the given values.
            </summary>
            <param name="year">The year to use.</param>
            <param name="month">The month to use.</param>
            <param name="day">The day to use.</param>
            <param name="hour">The hour to use.</param>
            <param name="minute">The minute to use.</param>
            <param name="second">The second to use.</param>
            <param name="microsecond">The microsecond to use.</param>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.#ctor(System.DateTime)">
            <summary>
            Constructs a new <b>MySqlDateTime</b> object by using values from the given <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="dt">The <see cref="T:System.DateTime"/> object to copy.</param>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.#ctor(MySql.Data.Types.MySqlDateTime)">
            <summary>
            Constructs a new <b>MySqlDateTime</b> object by copying the current value of the given object.
            </summary>
            <param name="mdt">The <b>MySqlDateTime</b> object to copy.</param>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.#ctor(System.String)">
            <summary>
            Enables the contruction of a <b>MySqlDateTime</b> object by parsing a string.
            </summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.IsValidDateTime">
            <summary>
            Indicates if this object contains a value that can be represented as a DateTime
            </summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Year">
            <summary>Returns the year portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Month">
            <summary>Returns the month portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Day">
            <summary>Returns the day portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Hour">
            <summary>Returns the hour portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Minute">
            <summary>Returns the minute portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Second">
            <summary>Returns the second portion of this datetime</summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Millisecond">
            <summary>
            Returns the milliseconds portion of this datetime 
            expressed as a value between 0 and 999
            </summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Microsecond">
            <summary>
            Returns the microseconds portion of this datetime (6 digit precision)
            </summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.IsNull">
            <summary>
            Returns true if this datetime object has a null value
            </summary>
        </member>
        <member name="P:MySql.Data.Types.MySqlDateTime.Value">
            <summary>
            Retrieves the value of this <see cref="T:MySql.Data.Types.MySqlDateTime"/> as a DateTime object.
            </summary>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.GetDateTime">
            <summary>Returns this value as a DateTime</summary>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.ToString">
            <summary>Returns a MySQL specific string representation of this value</summary>
        </member>
        <member name="M:MySql.Data.Types.MySqlDateTime.op_Explicit(MySql.Data.Types.MySqlDateTime)~System.DateTime">
            <summary></summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySql.Data.Types.MySqlGeometry.ToString">
            <summary>Returns the Well-Known Text representation of this value</summary>
            POINT({0} {1})", longitude, latitude
            http://dev.mysql.com/doc/refman/4.1/en/gis-wkt-format.html
        </member>
        <member name="M:MySql.Data.Types.MySqlGeometry.Parse(System.String)">
            <summary>
            Get value from WKT format
            SRID=0;POINT (x y) or POINT (x y)
            </summary>
            <param name="value">WKT string format</param>    
        </member>
        <member name="M:MySql.Data.Types.MySqlGeometry.TryParse(System.String,MySql.Data.Types.MySqlGeometry@)">
            <summary>
            Try to get value from WKT format
            SRID=0;POINT (x y) or POINT (x y)
            </summary>
            <param name="value">WKT string format</param>    
            <param name="mySqlGeometryValue">Out mysqlGeometryValue</param>
        </member>
    </members>
</doc>
